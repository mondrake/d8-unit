diff --git a/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php b/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php
index 0f87ff0ccc..d830e61c15 100644
--- a/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php
+++ b/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php
@@ -311,7 +311,7 @@ public function testUpdatedSite() {
     $this->drupalGet('admin/config/system/actions');
     $this->assertSession()->pageTextContains('Test action');
     $this->drupalGet('admin/config/system/actions/configure/test_action');
-    $this->assertSession()->pageTextContains('test_action');
+    $this->assertSession()->responseContains('test_action');
     $this->assertRaw('drupal.org');
 
     // Make sure our ban still exists.
diff --git a/core/tests/Drupal/Tests/WebAssert.php b/core/tests/Drupal/Tests/WebAssert.php
index 47a5c283e5..71fe33a8c7 100644
--- a/core/tests/Drupal/Tests/WebAssert.php
+++ b/core/tests/Drupal/Tests/WebAssert.php
@@ -109,8 +109,7 @@ public function responseHeaderDoesNotExist(string $name, string $message = ''):
    *   (Optional) the failure message.
    */
   public function pageTextMatchesCount(int $count, string $regex, string $message = ''): void {
-    $actual = preg_replace('/\s+/u', ' ', $this->session->getPage()->getText());
-    $matches = preg_match_all($regex, $actual);
+    $matches = preg_match_all($regex, $this->getCleanedUpPageText(TRUE));
     if ($message === '') {
       $message = "Failed asserting that the page matches the pattern '$regex' $count time(s), $matches found.";
     }
@@ -877,6 +876,31 @@ public function responseHeaderNotMatches($name, $regex) {
     return parent::responseHeaderNotMatches($name, $regex);
   }
 
+  /**
+   * Returns a Drupal's page text cleaned up of script tags.
+   *
+   * @param bool $pack
+   *   (Optional) If TRUE, packs contiguous spaces and newlines into a single
+   *   space. Defaults to FALSE.
+   *
+   * @return string
+   *   The cleaned up page text.
+   */
+  private function getCleanedUpPageText(bool $pack = FALSE): string {
+    $dom = new \DOMDocument();
+    // Suppress libxml warnings when loading HTML 5 content.
+    @$dom->loadHTML($this->session->getPage()->getHtml());
+    dump(['pre-', $dom->textContent]);
+    $body = $dom->getElementsByTagName('body')[0];
+    $items = $body->getElementsByTagName('script');
+    while ($items->count() > 0) {
+      $items->item(0)->parentNode->removeChild($items->item(0));
+      $items = $body->getElementsByTagName('script');
+    }
+    dump(['post', ($pack ? preg_replace('/\s+/u', ' ', $body->textContent) : $body->textContent)]);
+    return $pack ? preg_replace('/\s+/u', ' ', $body->textContent) : $body->textContent;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -884,7 +908,12 @@ public function pageTextContains($text) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextContains($text);
+    $regex = '/' . preg_quote($text, '/') . '/ui';
+    if ((bool) preg_match($regex, $this->getCleanedUpPageText(TRUE))) {
+      return;
+    }
+    $message = sprintf('The text "%s" was not found anywhere in the text of the current page.', $text);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**
@@ -894,7 +923,12 @@ public function pageTextNotContains($text) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextNotContains($text);
+    $regex = '/' . preg_quote($text, '/') . '/ui';
+    if (!preg_match($regex, $this->getCleanedUpPageText(TRUE))) {
+      return;
+    }
+    $message = sprintf('The text "%s" appears in the text of this page, but it should not.', $text);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**
@@ -904,7 +938,11 @@ public function pageTextMatches($regex) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextMatches($regex);
+    if ((bool) preg_match($regex, $this->getCleanedUpPageText())) {
+      return;
+    }
+    $message = sprintf('The pattern %s was not found anywhere in the text of the current page.', $regex);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**
@@ -914,7 +952,11 @@ public function pageTextNotMatches($regex) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextNotMatches($regex);
+    if (!preg_match($regex, $this->getCleanedUpPageText())) {
+      return;
+    }
+    $message = sprintf('The pattern %s was found in the text of the current page, but it should not.', $regex);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**

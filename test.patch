diff --git a/core/lib/Drupal/Core/Entity/ContentEntityBase.php b/core/lib/Drupal/Core/Entity/ContentEntityBase.php
index 75dd42564b..af36896576 100644
--- a/core/lib/Drupal/Core/Entity/ContentEntityBase.php
+++ b/core/lib/Drupal/Core/Entity/ContentEntityBase.php
@@ -487,6 +487,7 @@ public function postSave(EntityStorageInterface $storage, $update = TRUE) {
   public function validate() {
     $this->validated = TRUE;
     $violations = $this->getTypedData()->validate();
+dump([__METHOD__, $this->getTypedData()]);
     return new EntityConstraintViolationList($this, iterator_to_array($violations));
   }
 
diff --git a/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php b/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php
index 161aa10db2..6335854f9e 100644
--- a/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php
+++ b/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php
@@ -19,7 +19,16 @@
  */
 class RangeConstraint extends Range {
 
-  public $minMessage = 'This value should be %limit or more.';
-  public $maxMessage = 'This value should be %limit or less.';
+  /**
+   * {@inheritdoc}
+   */
+  public function __construct(array $options = NULL) {
+dump([$options, func_get_args()]);
+    if (!isset($options['min']) || !isset($options['max'])) {
+      $options['minMessage'] = $options['minMessage'] ?? 'This value should be %limit or more.';
+      $options['maxMessage'] = $options['maxMessage'] ?? 'This value should be %limit or less.';
+    }
+    parent::__construct($options);
+  }
 
 }

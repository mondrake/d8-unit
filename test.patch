diff --git a/core/modules/big_pipe/tests/modules/big_pipe_test/src/BigPipePlaceholderTestCases.php b/core/modules/big_pipe/tests/modules/big_pipe_test/src/BigPipePlaceholderTestCases.php
index d1ba348e12..14a49da80c 100644
--- a/core/modules/big_pipe/tests/modules/big_pipe_test/src/BigPipePlaceholderTestCases.php
+++ b/core/modules/big_pipe/tests/modules/big_pipe_test/src/BigPipePlaceholderTestCases.php
@@ -98,18 +98,18 @@ public static function cases(ContainerInterface $container = NULL, AccountInterf
     // 2. Real-world example of HTML attribute value placeholder: form action.
     $form_action = new BigPipePlaceholderTestCase(
       $container ? $container->get('form_builder')->getForm('Drupal\big_pipe_test\Form\BigPipeTestForm') : [],
-      'form_action_cc611e1d',
+      'gdgqoahpz7CcJkN1DyPxCV-PZNPhkm-KrIYLA8k0xvg',
       [
         '#lazy_builder' => ['form_builder:renderPlaceholderFormAction', []],
       ]
     );
-    $form_action->bigPipeNoJsPlaceholder = 'big_pipe_nojs_placeholder_attribute_safe:form_action_cc611e1d';
+    $form_action->bigPipeNoJsPlaceholder = 'big_pipe_nojs_placeholder_attribute_safe:gdgqoahpz7CcJkN1DyPxCV-PZNPhkm-KrIYLA8k0xvg';
     $form_action->bigPipeNoJsPlaceholderRenderArray = [
-      '#markup' => 'big_pipe_nojs_placeholder_attribute_safe:form_action_cc611e1d',
+      '#markup' => 'big_pipe_nojs_placeholder_attribute_safe:gdgqoahpz7CcJkN1DyPxCV-PZNPhkm-KrIYLA8k0xvg',
       '#cache' => $cacheability_depends_on_session_only,
       '#attached' => [
         'big_pipe_nojs_placeholders' => [
-          'big_pipe_nojs_placeholder_attribute_safe:form_action_cc611e1d' => $form_action->placeholderRenderArray,
+          'big_pipe_nojs_placeholder_attribute_safe:gdgqoahpz7CcJkN1DyPxCV-PZNPhkm-KrIYLA8k0xvg' => $form_action->placeholderRenderArray,
         ],
       ],
     ];
@@ -125,7 +125,7 @@ public static function cases(ContainerInterface $container = NULL, AccountInterf
         '#type' => 'link',
         '#url' => Url::fromRoute('system.theme_set_default'),
       ],
-      'e88b559cce72c80b687d56b0e2a3a5ae4b66bc0e',
+      'form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM',
       [
         '#lazy_builder' => [
           'route_processor_csrf:renderPlaceholderCsrfToken',
@@ -133,13 +133,13 @@ public static function cases(ContainerInterface $container = NULL, AccountInterf
         ],
       ]
     );
-    $csrf_token->bigPipeNoJsPlaceholder = 'big_pipe_nojs_placeholder_attribute_safe:e88b559cce72c80b687d56b0e2a3a5ae4b66bc0e';
+    $csrf_token->bigPipeNoJsPlaceholder = 'big_pipe_nojs_placeholder_attribute_safe:form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM';
     $csrf_token->bigPipeNoJsPlaceholderRenderArray = [
-      '#markup' => 'big_pipe_nojs_placeholder_attribute_safe:e88b559cce72c80b687d56b0e2a3a5ae4b66bc0e',
+      '#markup' => 'big_pipe_nojs_placeholder_attribute_safe:form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM',
       '#cache' => $cacheability_depends_on_session_only,
       '#attached' => [
         'big_pipe_nojs_placeholders' => [
-          'big_pipe_nojs_placeholder_attribute_safe:e88b559cce72c80b687d56b0e2a3a5ae4b66bc0e' => $csrf_token->placeholderRenderArray,
+          'big_pipe_nojs_placeholder_attribute_safe:form_action_p_pvdeGsVG5zNF_XLGPTvYSKCf43t8qZYSwcfZl2uzM' => $csrf_token->placeholderRenderArray,
         ],
       ],
     ];
@@ -257,7 +257,7 @@ public static function cases(ContainerInterface $container = NULL, AccountInterf
           ],
         ],
         'big_pipe_placeholders' => [
-          'callback=%5CDrupal%5Cbig_pipe_test%5CBigPipeTestController%3A%3Aexception&amp;args%5B0%5D=llamas&amp;args%5B1%5D=suck&amp;token=uhKFNfT4eF449_W-kDQX8E5z4yHyt0-nSHUlwaGAQeU' => $exception->placeholderRenderArray,
+          '<span data-big-pipe-nojs-placeholder-id="callback=%5CDrupal%5Cbig_pipe_test%5CBigPipeTestController%3A%3Aexception&amp;args%5B0%5D=llamas&amp;args%5B1%5D=suck&amp;token=uhKFNfT4eF449_W-kDQX8E5z4yHyt0-nSHUlwaGAQeU"></span>' => $exception->placeholderRenderArray,
         ],
       ],
     ];
@@ -297,7 +297,7 @@ public static function cases(ContainerInterface $container = NULL, AccountInterf
           ],
         ],
         'big_pipe_placeholders' => [
-          'callback=%5CDrupal%5Cbig_pipe_test%5CBigPipeTestController%3A%3AresponseException&amp;&amp;token=PxOHfS_QL-T01NjBgu7Z7I04tIwMp6La5vM-mVxezbU' => $embedded_response_exception->placeholderRenderArray,
+          '<span data-big-pipe-nojs-placeholder-id="callback=%5CDrupal%5Cbig_pipe_test%5CBigPipeTestController%3A%3AresponseException&amp;&amp;token=PxOHfS_QL-T01NjBgu7Z7I04tIwMp6La5vM-mVxezbU"></span>' => $embedded_response_exception->placeholderRenderArray,
         ],
       ],
     ];
diff --git a/core/modules/big_pipe/tests/src/Functional/BigPipeTest.php b/core/modules/big_pipe/tests/src/Functional/BigPipeTest.php
index c6ae925bd1..e55e9bc32e 100644
--- a/core/modules/big_pipe/tests/src/Functional/BigPipeTest.php
+++ b/core/modules/big_pipe/tests/src/Functional/BigPipeTest.php
@@ -340,7 +340,8 @@ protected function assertBigPipeResponseHeadersPresent() {
    *   markup.
    */
   protected function assertBigPipeNoJsPlaceholders(array $expected_big_pipe_nojs_placeholders) {
-    $this->assertSetsEqual(array_keys($expected_big_pipe_nojs_placeholders), array_map('rawurldecode', explode(' ', $this->drupalGetHeader('BigPipe-Test-No-Js-Placeholders'))));
+    dump(['exp', $expected_big_pipe_nojs_placeholders, 'act', explode(' ', $this->drupalGetHeader('BigPipe-Test-No-Js-Placeholders'))]);
+    $this->assertEqualsCanonicalizing(array_keys($expected_big_pipe_nojs_placeholders), array_map('rawurldecode', explode(' ', $this->drupalGetHeader('BigPipe-Test-No-Js-Placeholders'))));
     foreach ($expected_big_pipe_nojs_placeholders as $big_pipe_nojs_placeholder => $expected_replacement) {
       // Checking whether the replacement for the BigPipe no-JS placeholder
       // $big_pipe_nojs_placeholder is present.
@@ -361,7 +362,7 @@ protected function assertBigPipeNoJsPlaceholders(array $expected_big_pipe_nojs_p
    *   defined in the order that they are expected to be rendered & streamed.
    */
   protected function assertBigPipePlaceholders(array $expected_big_pipe_placeholders, array $expected_big_pipe_placeholder_stream_order) {
-    $this->assertSetsEqual(array_keys($expected_big_pipe_placeholders), explode(' ', $this->drupalGetHeader('BigPipe-Test-Placeholders')));
+    $this->assertEqualsCanonicalizing(array_keys($expected_big_pipe_placeholders), explode(' ', $this->drupalGetHeader('BigPipe-Test-Placeholders')));
     $placeholder_positions = [];
     $placeholder_replacement_positions = [];
     foreach ($expected_big_pipe_placeholders as $big_pipe_placeholder_id => $expected_ajax_response) {
@@ -394,7 +395,7 @@ protected function assertBigPipePlaceholders(array $expected_big_pipe_placeholde
       $expected_big_pipe_placeholders_with_replacements[$big_pipe_placeholder_id] = $expected_big_pipe_placeholders[$big_pipe_placeholder_id];
     }
     $this->assertEqual($expected_big_pipe_placeholders_with_replacements, array_filter($expected_big_pipe_placeholders));
-    $this->assertSetsEqual(array_keys($expected_big_pipe_placeholders_with_replacements), array_values($placeholder_replacement_positions));
+    $this->assertEqualsCanonicalizing(array_keys($expected_big_pipe_placeholders_with_replacements), array_values($placeholder_replacement_positions));
     $this->assertSame(count($expected_big_pipe_placeholders_with_replacements), preg_match_all('/' . preg_quote('<script type="application/vnd.drupal-ajax" data-big-pipe-replacement-for-placeholder-with-id="', '/') . '/', $this->getSession()->getPage()->getContent()));
 
     // Verifying BigPipe start/stop signals.
@@ -433,13 +434,6 @@ protected function getTestCases($has_session = TRUE) {
     return BigPipePlaceholderTestCases::cases($this->container, $this->rootUser);
   }
 
-  /**
-   * Asserts whether arrays A and B are equal, when treated as sets.
-   */
-  protected function assertSetsEqual(array $a, array $b) {
-    return count($a) == count($b) && !array_diff_assoc($a, $b);
-  }
-
   /**
    * Asserts whether a BigPipe no-JS cookie exists or not.
    */

diff --git a/core/modules/system/tests/modules/test_page_test/src/Controller/TestPageTestController.php b/core/modules/system/tests/modules/test_page_test/src/Controller/TestPageTestController.php
index 02ea524b09..423d144c4f 100644
--- a/core/modules/system/tests/modules/test_page_test/src/Controller/TestPageTestController.php
+++ b/core/modules/system/tests/modules/test_page_test/src/Controller/TestPageTestController.php
@@ -2,6 +2,8 @@
 
 namespace Drupal\test_page_test\Controller;
 
+use Drupal\user\Entity\Role;
+
 /**
  * Controller routines for test_page_test routes.
  */
@@ -23,4 +25,16 @@ public function testPage() {
     ];
   }
 
+  /**
+   * Returns a test page and with the call to the dump() method.
+   */
+  public function testPageVarDump() {
+    $role = Role::create(['id' => 'test_role']);
+    dump($role);
+    return [
+      '#title' => t('Test page with var dump'),
+      '#markup' => t('Test page text.'),
+    ];
+  }
+
 }
diff --git a/core/modules/system/tests/modules/test_page_test/test_page_test.routing.yml b/core/modules/system/tests/modules/test_page_test/test_page_test.routing.yml
index 2f44e099db..1c1ccbfea6 100644
--- a/core/modules/system/tests/modules/test_page_test/test_page_test.routing.yml
+++ b/core/modules/system/tests/modules/test_page_test/test_page_test.routing.yml
@@ -136,3 +136,11 @@ test_page_test.deprecations:
     _controller: '\Drupal\test_page_test\Controller\Test::deprecations'
   requirements:
     _access: 'TRUE'
+
+test_page_test.test_page_var_dump:
+  path: '/test-page-var-dump'
+  defaults:
+    _title: 'Test front page with var dump'
+    _controller: '\Drupal\test_page_test\Controller\TestPageTestController::testPageVarDump'
+  requirements:
+    _access: 'TRUE'
diff --git a/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php b/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
index d6dcfa2e16..ac9aa9f901 100644
--- a/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
+++ b/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
@@ -895,4 +895,39 @@ public function testDeprecationHeaders() {
     $this->assertCount(1, $test_deprecation_messages);
   }
 
+  /**
+   * Tests the dump() method provided by the Symfony component var-dump.
+   */
+  public function testVarDump() {
+    // Visit a Drupal page with call to the dump() method.
+    $body = $this->drupalGet('test-page-var-dump');
+    $this->assertSession()->statusCodeEquals(200);
+
+    $this->assertStringContainsString('<span class=sf-dump-note>Drupal\user\Entity\Role</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">id</span>: "<span class=sf-dump-str title="9 characters">test_role</span>"', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">label</span>: <span class=sf-dump-const>null</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">weight</span>: <span class=sf-dump-const>null</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">permissions</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">is_admin</span>: <span class=sf-dump-const>null</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">originalId</span>: "<span class=sf-dump-str title="9 characters">test_role</span>"', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">status</span>: <span class=sf-dump-const>true</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">uuid</span>: "', $body);
+    $this->assertStringContainsString('  -<span class=sf-dump-private title="Private property defined in class:&#10;`Drupal\Core\Config\Entity\ConfigEntityBase`">isUninstalling</span>: <span class=sf-dump-const>false</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">langcode</span>: "<span class=sf-dump-str title="2 characters">en</span>"', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">third_party_settings</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">_core</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">trustedData</span>: <span class=sf-dump-const>false</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">entityTypeId</span>: "<span class=sf-dump-str title="9 characters">user_role</span>"', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">enforceIsNew</span>: <span class=sf-dump-const>true</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">typedData</span>: <span class=sf-dump-const>null</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">cacheContexts</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">cacheTags</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">cacheMaxAge</span>: <span class=sf-dump-num>-1</span>', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">_serviceIds</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">_entityStorages</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">dependencies</span>: []', $body);
+    $this->assertStringContainsString('  #<span class=sf-dump-protected title="Protected property">isSyncing</span>: <span class=sf-dump-const>false</span>', $body);
+    $this->assertStringContainsString('</samp>}', $body);
+  }
+
 }
diff --git a/core/tests/Drupal/KernelTests/KernelTestBase.php b/core/tests/Drupal/KernelTests/KernelTestBase.php
index afe40b747a..965b42217f 100644
--- a/core/tests/Drupal/KernelTests/KernelTestBase.php
+++ b/core/tests/Drupal/KernelTests/KernelTestBase.php
@@ -20,6 +20,7 @@
 use Drupal\Tests\ConfigTestTrait;
 use Drupal\Tests\RandomGeneratorTrait;
 use Drupal\Tests\TestRequirementsTrait;
+use Drupal\Tests\TestVarDumper;
 use Drupal\Tests\Traits\PHPUnit8Warnings;
 use Drupal\TestTools\Comparator\MarkupInterfaceComparator;
 use PHPUnit\Framework\Exception;
@@ -30,6 +31,7 @@
 use org\bovigo\vfs\visitor\vfsStreamPrintVisitor;
 use Drupal\Core\Routing\RouteObjectInterface;
 use Symfony\Component\Routing\Route;
+use Symfony\Component\VarDumper\VarDumper;
 
 /**
  * Base class for functional integration tests.
@@ -222,6 +224,10 @@ abstract class KernelTestBase extends TestCase implements ServiceProviderInterfa
   public static function setUpBeforeClass() {
     parent::setUpBeforeClass();
 
+    if (class_exists(VarDumper::class)) {
+      VarDumper::setHandler(TestVarDumper::class . '::varDumperHandler');
+    }
+
     // Change the current dir to DRUPAL_ROOT.
     chdir(static::getDrupalRoot());
   }
diff --git a/core/tests/Drupal/KernelTests/KernelTestBaseTest.php b/core/tests/Drupal/KernelTests/KernelTestBaseTest.php
index 8a00387e70..ec9c66185b 100644
--- a/core/tests/Drupal/KernelTests/KernelTestBaseTest.php
+++ b/core/tests/Drupal/KernelTests/KernelTestBaseTest.php
@@ -4,9 +4,11 @@
 
 use Drupal\Component\FileCache\FileCacheFactory;
 use Drupal\Core\Database\Database;
+use Drupal\user\Entity\Role;
 use org\bovigo\vfs\vfsStream;
 use org\bovigo\vfs\visitor\vfsStreamStructureVisitor;
 use PHPUnit\Framework\SkippedTestError;
+use Symfony\Component\VarDumper\Test\VarDumperTestTrait;
 
 /**
  * @coversDefaultClass \Drupal\KernelTests\KernelTestBase
@@ -17,6 +19,8 @@
  */
 class KernelTestBaseTest extends KernelTestBase {
 
+  use VarDumperTestTrait;
+
   /**
    * @covers ::setUpBeforeClass
    */
@@ -340,4 +344,43 @@ public function testKernelTestBaseInstallSchema() {
     $this->assertFalse(Database::getConnection()->schema()->tableExists('key_value'));
   }
 
+  /**
+   * Tests the dump() method provided by the Symfony component var-dump.
+   */
+  public function testVarDump() {
+    $this->enableModules(['system', 'user']);
+    $role = Role::create(['id' => 'test_role']);
+    $uuid = $role->uuid();
+    $expectedDump = <<<EOTXT
+Drupal\user\Entity\Role {
+  #id: "test_role"
+  #label: null
+  #weight: null
+  #permissions: []
+  #is_admin: null
+  #originalId: "test_role"
+  #status: true
+  #uuid: "$uuid"
+  -isUninstalling: false
+  #langcode: "en"
+  #third_party_settings: []
+  #_core: []
+  #trustedData: false
+  #entityTypeId: "user_role"
+  #enforceIsNew: true
+  #typedData: null
+  #cacheContexts: []
+  #cacheTags: []
+  #cacheMaxAge: -1
+  #_serviceIds: []
+  #_entityStorages: []
+  #dependencies: []
+  #isSyncing: false
+}
+EOTXT;
+
+    $this->assertDumpEquals($expectedDump, $role);
+
+  }
+
 }
diff --git a/core/tests/Drupal/Tests/BrowserTestBase.php b/core/tests/Drupal/Tests/BrowserTestBase.php
index 0aac9ce747..fe9fcc1cc4 100644
--- a/core/tests/Drupal/Tests/BrowserTestBase.php
+++ b/core/tests/Drupal/Tests/BrowserTestBase.php
@@ -24,6 +24,7 @@
 use Psr\Http\Message\RequestInterface;
 use Psr\Http\Message\ResponseInterface;
 use Symfony\Component\CssSelector\CssSelectorConverter;
+use Symfony\Component\VarDumper\VarDumper;
 
 /**
  * Provides a test case for functional Drupal tests.
@@ -212,6 +213,17 @@ abstract class BrowserTestBase extends TestCase {
    */
   protected $originalContainer;
 
+  /**
+   * {@inheritdoc}
+   */
+  public static function setUpBeforeClass() {
+    parent::setUpBeforeClass();
+
+    if (class_exists(VarDumper::class)) {
+      VarDumper::setHandler(TestVarDumper::class . '::varDumperHandler');
+    }
+  }
+
   /**
    * Initializes Mink sessions.
    */
diff --git a/core/tests/Drupal/Tests/TestVarDumper.php b/core/tests/Drupal/Tests/TestVarDumper.php
new file mode 100644
index 0000000000..213a964afa
--- /dev/null
+++ b/core/tests/Drupal/Tests/TestVarDumper.php
@@ -0,0 +1,39 @@
+<?php
+
+namespace Drupal\Tests;
+
+use Symfony\Component\VarDumper\Cloner\VarCloner;
+use Symfony\Component\VarDumper\Dumper\CliDumper;
+
+/**
+ * Provides handlers for the Symfony VarDumper to work within tests.
+ *
+ * This allows the dump() function to produce output on the terminal without
+ * causing PHPUnit to complain.
+ */
+class TestVarDumper {
+
+  /**
+   * Handler for \Symfony\Component\VarDumper\VarDumper.
+   */
+  public static function varDumperHandler($var) {
+    $cloner = new VarCloner();
+
+    // Need to write a newline before any output.
+    fwrite(STDOUT, "\n");
+
+    $dumper = new CliDumper();
+    $dumper->setColors(TRUE);
+    $dumper->dump(
+      $cloner->cloneVar($var),
+      function ($line, $depth, $indent_pad) use (&$output) {
+        // A negative depth means "end of dump"
+        if ($depth >= 0) {
+          // Adds a two spaces indentation to the line
+          fwrite(STDOUT, str_repeat($indent_pad, $depth) . $line . "\n");
+        }
+      }
+    );
+  }
+
+}
diff --git a/core/tests/Drupal/KernelTests/Core/Database/LoggingTest.php b/core/tests/Drupal/KernelTests/Core/Database/LoggingTest.php
index 4716ce10e0..53e09775c0 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/LoggingTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/LoggingTest.php
@@ -49,7 +49,8 @@ public function testEnableMultiLogging() {
 
     $queries1 = Database::getLog('testing1');
     $queries2 = Database::getLog('testing2');
-
+    dump($queries1);
+    dump($queries2);
     $this->assertCount(2, $queries1, 'Correct number of queries recorded for log 1.');
     $this->assertCount(1, $queries2, 'Correct number of queries recorded for log 2.');
   }

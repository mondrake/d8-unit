diff --git a/core/lib/Drupal/Core/Database/Exception/SchemaTableColumnSizeTooLargeException.php b/core/lib/Drupal/Core/Database/Exception/SchemaTableColumnSizeTooLargeException.php
new file mode 100644
index 0000000000..65ceb3cbe4
--- /dev/null
+++ b/core/lib/Drupal/Core/Database/Exception/SchemaTableColumnSizeTooLargeException.php
@@ -0,0 +1,12 @@
+<?php
+
+namespace Drupal\Core\Database\Exception;
+
+use Drupal\Core\Database\DatabaseException;
+use Drupal\Core\Database\SchemaException;
+
+/**
+ * Exception thrown if a column size is too large on table creation.
+ */
+class SchemaTableColumnSizeTooLargeException extends SchemaException implements DatabaseException {
+}
diff --git a/core/modules/migrate/src/Plugin/migrate/id_map/Sql.php b/core/modules/migrate/src/Plugin/migrate/id_map/Sql.php
index c0d317ec46..7bc4db8380 100644
--- a/core/modules/migrate/src/Plugin/migrate/id_map/Sql.php
+++ b/core/modules/migrate/src/Plugin/migrate/id_map/Sql.php
@@ -4,6 +4,8 @@
 
 use Drupal\Core\Database\DatabaseException;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
+use Drupal\Core\Database\Exception\SchemaTableColumnSizeTooLargeException;
+use Drupal\Core\Database\SchemaException;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
 use Drupal\Core\Plugin\PluginBase;
@@ -424,14 +426,12 @@ protected function ensureTables() {
             ->createTable($this->mapTableName, $schema);
           break;
         }
-        catch (DatabaseException $e) {
-          $pdo_exception = $e->getPrevious();
-          $mysql_index_error = $pdo_exception instanceof \PDOException && $pdo_exception->getCode() === '42000' && $pdo_exception->errorInfo[1] === 1071;
+        catch (SchemaTableColumnSizeTooLargeException $e) {
           $chunk_size--;
           // Rethrow the exception if the source IDs can not be in smaller
           // groups.
-          if (!$mysql_index_error || $chunk_size <= 0) {
-            throw $e;
+          if ($chunk_size <= 0) {
+            throw $se;
           }
         }
       }
diff --git a/core/modules/migrate/tests/src/Kernel/Plugin/id_map/SqlTest.php b/core/modules/migrate/tests/src/Kernel/Plugin/id_map/SqlTest.php
index dad421fbdc..ce9f535f96 100644
--- a/core/modules/migrate/tests/src/Kernel/Plugin/id_map/SqlTest.php
+++ b/core/modules/migrate/tests/src/Kernel/Plugin/id_map/SqlTest.php
@@ -3,7 +3,7 @@
 namespace Drupal\Tests\migrate\Kernel\Plugin\id_map;
 
 use Drupal\Core\Database\Database;
-use Drupal\Core\Database\DatabaseExceptionWrapper;
+use Drupal\Core\Database\Exception\SchemaTableColumnSizeTooLargeException;
 use Drupal\Tests\migrate\Kernel\MigrateTestBase;
 use Drupal\Tests\migrate\Unit\TestSqlIdMap;
 use Drupal\migrate\MigrateException;
@@ -151,8 +151,8 @@ public function testFailEnsureTables($ids) {
     // Use local id map plugin to force an error.
     $map = new SqlIdMapTest($this->database, [], 'test', [], $migration, $this->eventDispatcher, $this->migrationPluginManager);
 
-    $this->expectException(DatabaseExceptionWrapper::class);
-    $this->expectExceptionMessage("Syntax error or access violation: 1074 Column length too big for column 'sourceid1' (max = 16383); use BLOB or TEXT instead:");
+    $this->expectException(SchemaTableColumnSizeTooLargeException::class);
+    $this->expectExceptionMessage("Column length too big for column 'sourceid1' (max = 16383); use BLOB or TEXT instead");
     $map->ensureTables();
   }
 
diff --git a/core/modules/mysql/src/Driver/Database/mysql/ExceptionHandler.php b/core/modules/mysql/src/Driver/Database/mysql/ExceptionHandler.php
index bef64b9c2e..04d22e901c 100644
--- a/core/modules/mysql/src/Driver/Database/mysql/ExceptionHandler.php
+++ b/core/modules/mysql/src/Driver/Database/mysql/ExceptionHandler.php
@@ -5,6 +5,7 @@
 use Drupal\Component\Utility\Unicode;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
 use Drupal\Core\Database\ExceptionHandler as BaseExceptionHandler;
+use Drupal\Core\Database\Exception\SchemaTableColumnSizeTooLargeException;
 use Drupal\Core\Database\IntegrityConstraintViolationException;
 use Drupal\Core\Database\StatementInterface;
 
@@ -43,6 +44,11 @@ public function handleExecutionException(\Exception $exception, StatementInterfa
         throw new IntegrityConstraintViolationException($message, $code, $exception);
       }
 
+      // A column size is too large on table creation.
+      if ($exception->getCode() === '42000' && ($exception->errorInfo[1] ?? NULL) === 1071) {
+        throw new SchemaTableColumnSizeTooLargeException($message, $code, $exception);
+      }
+
       throw new DatabaseExceptionWrapper($message, 0, $exception);
     }
 

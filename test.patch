diff --git a/core/lib/Drupal/Core/Database/Connection.php b/core/lib/Drupal/Core/Database/Connection.php
index 67dc4a1a1a..e07490b63c 100644
--- a/core/lib/Drupal/Core/Database/Connection.php
+++ b/core/lib/Drupal/Core/Database/Connection.php
@@ -1923,6 +1923,13 @@ public static function createConnectionOptionsFromUrl($url, $root) {
       throw new \InvalidArgumentException('Minimum requirement: driver://host/database');
     }
 
+    if (!isset($url_components['query'])) {
+      @trigger_error('Not passing a ?module=db_driver_module part in the $url argument of ' . __METHOD__ . '() is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. All database connection URLs must have the module specified. See https://www.drupal.org/node/3129492', E_USER_DEPRECATED);
+    }
+    else {
+      parse_str($url_components['query'], $query);
+    }
+
     $url_components += [
       'user' => '',
       'pass' => '',
@@ -1938,6 +1945,7 @@ public static function createConnectionOptionsFromUrl($url, $root) {
     $reflector = new \ReflectionClass(static::class);
 
     $database = [
+      'module' => $query['module'] ?? explode('\\', $reflector->getNamespaceName())[1],
       'driver' => $url_components['scheme'],
       'username' => $url_components['user'],
       'password' => $url_components['pass'],
@@ -2006,6 +2014,9 @@ public static function createUrlFromConnectionOptions(array $connection_options)
     if (isset($connection_options['module'])) {
       $db_url .= '?module=' . $connection_options['module'];
     }
+    else {
+      @trigger_error('Not passing a \'module\' option to ' . __METHOD__ . '() is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. All database connections must have the module specified. See https://www.drupal.org/node/3129492', E_USER_DEPRECATED);
+    }
 
     if (isset($connection_options['prefix']) && $connection_options['prefix'] !== '') {
       $db_url .= '#' . $connection_options['prefix'];
diff --git a/core/lib/Drupal/Core/Database/Database.php b/core/lib/Drupal/Core/Database/Database.php
index c641ac203d..853f1eb3e5 100644
--- a/core/lib/Drupal/Core/Database/Database.php
+++ b/core/lib/Drupal/Core/Database/Database.php
@@ -556,11 +556,15 @@ public static function convertDbUrlToConnectionInfo($url, $root, ?bool $include_
     $url_component_query = $url_components['query'] ?? '';
     parse_str($url_component_query, $query);
 
+    // Start of BC layer.
     // Add the module key for core database drivers when the module key is not
     // set.
     if (!isset($query['module']) && in_array($driverName, ['mysql', 'pgsql', 'sqlite'], TRUE)) {
+      @trigger_error('Not passing a ?module=db_driver_module part in the $url argument of ' . __METHOD__ . '() is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. All database connection URLs must have the module specified. See https://www.drupal.org/node/3129492', E_USER_DEPRECATED);
       $query['module'] = $driverName;
     }
+    // End of BC layer.
+
     if (!isset($query['module'])) {
       throw new \InvalidArgumentException("Can not convert '$url' to a database connection, the module providing the driver '{$driverName}' is not specified");
     }
diff --git a/core/modules/sqlite/tests/src/Unit/ConnectionTest.php b/core/modules/sqlite/tests/src/Unit/ConnectionTest.php
index 1555d83f11..08550e9eb5 100644
--- a/core/modules/sqlite/tests/src/Unit/ConnectionTest.php
+++ b/core/modules/sqlite/tests/src/Unit/ConnectionTest.php
@@ -40,9 +40,9 @@ public function testCreateConnectionOptionsFromUrl(string $url, string $expected
   public function providerCreateConnectionOptionsFromUrl(): array {
     $root = dirname(__DIR__, 8);
     return [
-      'sqlite relative path' => ['sqlite://localhost/tmp/test', $root . '/tmp/test'],
-      'sqlite absolute path' => ['sqlite://localhost//tmp/test', '/tmp/test'],
-      'in memory sqlite path' => ['sqlite://localhost/:memory:', ':memory:'],
+      'sqlite relative path' => ['sqlite://localhost/tmp/test?module=sqlite', $root . '/tmp/test'],
+      'sqlite absolute path' => ['sqlite://localhost//tmp/test?module=sqlite', '/tmp/test'],
+      'in memory sqlite path' => ['sqlite://localhost/:memory:?module=sqlite', ':memory:'],
     ];
   }
 
diff --git a/core/tests/Drupal/FunctionalTests/Installer/InstallerNonDefaultDatabaseDriverTest.php b/core/tests/Drupal/FunctionalTests/Installer/InstallerNonDefaultDatabaseDriverTest.php
index fa995dd677..11b9d46809 100644
--- a/core/tests/Drupal/FunctionalTests/Installer/InstallerNonDefaultDatabaseDriverTest.php
+++ b/core/tests/Drupal/FunctionalTests/Installer/InstallerNonDefaultDatabaseDriverTest.php
@@ -47,7 +47,9 @@ protected function setUpSettings() {
 
     $settings['driver'] = $testDriverNamespace;
     $settings[$testDriverNamespace] = $settings[$driverNamespace];
+dump($settings);
     unset($settings[$driverNamespace]);
+dump($settings);
     $edit = $this->translatePostValues($settings);
     $this->submitForm($edit, $this->translations['Save and continue']);
   }
diff --git a/core/tests/Drupal/FunctionalTests/Installer/InstallerTestBase.php b/core/tests/Drupal/FunctionalTests/Installer/InstallerTestBase.php
index c750816d1b..e4b8dabb7f 100644
--- a/core/tests/Drupal/FunctionalTests/Installer/InstallerTestBase.php
+++ b/core/tests/Drupal/FunctionalTests/Installer/InstallerTestBase.php
@@ -247,7 +247,7 @@ protected function setUpProfile() {
   protected function setUpSettings() {
     $parameters = $this->parameters['forms']['install_settings_form'];
     $driver = $parameters['driver'];
-    unset($parameters[$driver]['dependencies']);
+    unset($parameters[$driver]['dependencies'], $parameters[$driver]['module']);
     $edit = $this->translatePostValues($parameters);
     $this->submitForm($edit, $this->translations['Save and continue']);
   }
diff --git a/core/tests/Drupal/TestSite/Commands/TestSiteInstallCommand.php b/core/tests/Drupal/TestSite/Commands/TestSiteInstallCommand.php
index f164d5bf69..bc4254314c 100644
--- a/core/tests/Drupal/TestSite/Commands/TestSiteInstallCommand.php
+++ b/core/tests/Drupal/TestSite/Commands/TestSiteInstallCommand.php
@@ -99,7 +99,7 @@ protected function configure() {
       ->addOption('json', NULL, InputOption::VALUE_NONE, 'Output test site connection details in JSON.')
       ->addUsage('--setup-file core/tests/Drupal/TestSite/TestSiteMultilingualInstallTestScript.php --json')
       ->addUsage('--install-profile demo_umami --langcode fr')
-      ->addUsage('--base-url "http://example.com" --db-url "mysql://username:password@localhost/databasename#table_prefix"');
+      ->addUsage('--base-url "http://example.com" --db-url "mysql://username:password@localhost/databasename?module=mysql#table_prefix"');
   }
 
   /**
diff --git a/core/tests/Drupal/TestSite/Commands/TestSiteTearDownCommand.php b/core/tests/Drupal/TestSite/Commands/TestSiteTearDownCommand.php
index a2b5f54e32..7786c43931 100644
--- a/core/tests/Drupal/TestSite/Commands/TestSiteTearDownCommand.php
+++ b/core/tests/Drupal/TestSite/Commands/TestSiteTearDownCommand.php
@@ -30,7 +30,7 @@ protected function configure() {
       ->addOption('db-url', NULL, InputOption::VALUE_OPTIONAL, 'URL for database. Defaults to the environment variable SIMPLETEST_DB.', getenv('SIMPLETEST_DB'))
       ->addOption('keep-lock', NULL, InputOption::VALUE_NONE, 'Keeps the database prefix lock. Useful for ensuring test isolation when running concurrent tests.')
       ->addUsage('test12345678')
-      ->addUsage('test12345678 --db-url "mysql://username:password@localhost/databasename#table_prefix"')
+      ->addUsage('test12345678 --db-url "mysql://username:password@localhost/databasename?module=mysql#table_prefix"')
       ->addUsage('test12345678 --keep-lock');
   }
 
diff --git a/core/tests/Drupal/Tests/Core/Database/UrlConversionTest.php b/core/tests/Drupal/Tests/Core/Database/UrlConversionTest.php
index a4795b2da0..53fb96cbea 100644
--- a/core/tests/Drupal/Tests/Core/Database/UrlConversionTest.php
+++ b/core/tests/Drupal/Tests/Core/Database/UrlConversionTest.php
@@ -51,8 +51,9 @@ public function providerConvertDbUrlToConnectionInfo() {
     $root = dirname(__FILE__, 7);
     return [
       'MySql without prefix' => [
-        'mysql://test_user:test_pass@test_host:3306/test_database',
+        'mysql://test_user:test_pass@test_host:3306/test_database?module=mysql',
         [
+          'module' => 'mysql',
           'driver' => 'mysql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -65,8 +66,9 @@ public function providerConvertDbUrlToConnectionInfo() {
         FALSE,
       ],
       'SQLite, relative to root, without prefix' => [
-        'sqlite://localhost/test_database',
+        'sqlite://localhost/test_database?module=sqlite',
         [
+          'module' => 'sqlite',
           'driver' => 'sqlite',
           'host' => 'localhost',
           'database' => $root . '/test_database',
@@ -76,8 +78,9 @@ public function providerConvertDbUrlToConnectionInfo() {
         FALSE,
       ],
       'MySql with prefix' => [
-        'mysql://test_user:test_pass@test_host:3306/test_database#bar',
+        'mysql://test_user:test_pass@test_host:3306/test_database?module=mysql#bar',
         [
+          'module' => 'mysql',
           'driver' => 'mysql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -91,8 +94,9 @@ public function providerConvertDbUrlToConnectionInfo() {
         FALSE,
       ],
       'SQLite, relative to root, with prefix' => [
-        'sqlite://localhost/test_database#foo',
+        'sqlite://localhost/test_database?module=sqlite#foo',
         [
+          'module' => 'sqlite',
           'driver' => 'sqlite',
           'host' => 'localhost',
           'database' => $root . '/test_database',
@@ -103,8 +107,9 @@ public function providerConvertDbUrlToConnectionInfo() {
         FALSE,
       ],
       'SQLite, absolute path, without prefix' => [
-        'sqlite://localhost//baz/test_database',
+        'sqlite://localhost//baz/test_database?module=sqlite',
         [
+          'module' => 'sqlite',
           'driver' => 'sqlite',
           'host' => 'localhost',
           'database' => '/baz/test_database',
@@ -116,6 +121,7 @@ public function providerConvertDbUrlToConnectionInfo() {
       'MySQL contrib test driver without prefix' => [
         'DrivertestMysql://test_user:test_pass@test_host:3306/test_database?module=driver_test',
         [
+          'module' => 'driver_test',
           'driver' => 'DrivertestMysql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -140,6 +146,7 @@ public function providerConvertDbUrlToConnectionInfo() {
       'MySQL contrib test driver with prefix' => [
         'DrivertestMysql://test_user:test_pass@test_host:3306/test_database?module=driver_test#bar',
         [
+          'module' => 'driver_test',
           'driver' => 'DrivertestMysql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -165,6 +172,7 @@ public function providerConvertDbUrlToConnectionInfo() {
       'PostgreSQL contrib test driver without prefix' => [
         'DrivertestPgsql://test_user:test_pass@test_host:5432/test_database?module=driver_test',
         [
+          'module' => 'driver_test',
           'driver' => 'DrivertestPgsql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -189,6 +197,7 @@ public function providerConvertDbUrlToConnectionInfo() {
       'PostgreSQL contrib test driver with prefix' => [
         'DrivertestPgsql://test_user:test_pass@test_host:5432/test_database?module=driver_test#bar',
         [
+          'module' => 'driver_test',
           'driver' => 'DrivertestPgsql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -212,22 +221,9 @@ public function providerConvertDbUrlToConnectionInfo() {
         TRUE,
       ],
       'MySql with a custom query parameter' => [
-        'mysql://test_user:test_pass@test_host:3306/test_database?extra=value',
-        [
-          'driver' => 'mysql',
-          'username' => 'test_user',
-          'password' => 'test_pass',
-          'host' => 'test_host',
-          'database' => 'test_database',
-          'port' => 3306,
-          'namespace' => 'Drupal\mysql\Driver\Database\mysql',
-          'autoload' => 'core/modules/mysql/src/Driver/Database/mysql/',
-        ],
-        FALSE,
-      ],
-      'MySql with the module name mysql' => [
-        'mysql://test_user:test_pass@test_host:3306/test_database?module=mysql',
+        'mysql://test_user:test_pass@test_host:3306/test_database?module=mysql&extra=value',
         [
+          'module' => 'mysql',
           'driver' => 'mysql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -239,22 +235,10 @@ public function providerConvertDbUrlToConnectionInfo() {
         ],
         FALSE,
       ],
-      'PostgreSql without the module name set' => [
-        'pgsql://test_user:test_pass@test_host/test_database',
-        [
-          'driver' => 'pgsql',
-          'username' => 'test_user',
-          'password' => 'test_pass',
-          'host' => 'test_host',
-          'database' => 'test_database',
-          'namespace' => 'Drupal\pgsql\Driver\Database\pgsql',
-          'autoload' => 'core/modules/pgsql/src/Driver/Database/pgsql/',
-        ],
-        FALSE,
-      ],
       'PostgreSql with the module name pgsql' => [
         'pgsql://test_user:test_pass@test_host/test_database?module=pgsql',
         [
+          'module' => 'pgsql',
           'driver' => 'pgsql',
           'username' => 'test_user',
           'password' => 'test_pass',
@@ -268,6 +252,7 @@ public function providerConvertDbUrlToConnectionInfo() {
       'SQLite, relative to root, without prefix and with the module name sqlite' => [
         'sqlite://localhost/test_database?module=sqlite',
         [
+          'module' => 'sqlite',
           'driver' => 'sqlite',
           'host' => 'localhost',
           'database' => $root . '/test_database',
@@ -279,6 +264,17 @@ public function providerConvertDbUrlToConnectionInfo() {
     ];
   }
 
+  /**
+   * Tests ::convertDbUrlToConnectionInfo() deprecation for missing module.
+   *
+   * @group legacy
+   */
+  public function testMissingModuleInUrlConversion(): void {
+    $this->expectDeprecation('Not passing a ?module=db_driver_module part in the $url argument of Drupal\Core\Database\Database::convertDbUrlToConnectionInfo() is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. All database connection URLs must have the module specified. See https://www.drupal.org/node/3129492');
+    $this->expectDeprecation('Not passing a ?module=db_driver_module part in the $url argument of Drupal\Core\Database\Connection::createConnectionOptionsFromUrl() is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. All database connection URLs must have the module specified. See https://www.drupal.org/node/3129492');
+    Database::convertDbUrlToConnectionInfo('pgsql://test_user:test_pass@test_host/test_database', $this->root);
+  }
+
   /**
    * Tests ::convertDbUrlToConnectionInfo() exception for invalid arguments.
    *
diff --git a/core/tests/Drupal/Tests/Core/Test/TestSetupTraitTest.php b/core/tests/Drupal/Tests/Core/Test/TestSetupTraitTest.php
index b6ba4e389d..dfab1d561b 100644
--- a/core/tests/Drupal/Tests/Core/Test/TestSetupTraitTest.php
+++ b/core/tests/Drupal/Tests/Core/Test/TestSetupTraitTest.php
@@ -26,8 +26,8 @@ class TestSetupTraitTest extends UnitTestCase {
    */
   public function testChangeDatabasePrefix() {
     $root = dirname(__FILE__, 7);
-    putenv('SIMPLETEST_DB=pgsql://user:pass@127.0.0.1/db');
-    $connection_info = Database::convertDbUrlToConnectionInfo('mysql://user:pass@localhost/db', $root);
+    putenv('SIMPLETEST_DB=pgsql://user:pass@127.0.0.1/db?module=pgsql');
+    $connection_info = Database::convertDbUrlToConnectionInfo('mysql://user:pass@localhost/db?module=mysql', $root);
     Database::addConnectionInfo('default', 'default', $connection_info);
     $this->assertEquals('mysql', Database::getConnectionInfo()['default']['driver']);
     $this->assertEquals('localhost', Database::getConnectionInfo()['default']['host']);

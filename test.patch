diff --git a/core/modules/layout_builder/tests/src/Kernel/LayoutBuilderElementTest.php b/core/modules/layout_builder/tests/src/Kernel/LayoutBuilderElementTest.php
index 5748a99c43..a5d96bc020 100644
--- a/core/modules/layout_builder/tests/src/Kernel/LayoutBuilderElementTest.php
+++ b/core/modules/layout_builder/tests/src/Kernel/LayoutBuilderElementTest.php
@@ -19,9 +19,9 @@ class LayoutBuilderElementTest extends KernelTestBase {
 
   /**
    * @group legacy
-   * @expectedDeprecation The event_dispatcher service should be passed to LayoutBuilder::__construct() instead of the layout_builder.tempstore_repository service since 9.1.0. This will be required in Drupal 10.0.0. See https://www.drupal.org/node/3152690
    */
   public function testConstructorTempStoreDeprecation() {
+    $this->expectDeprecation('The event_dispatcher service should be passed to LayoutBuilder::__construct() instead of the layout_builder.tempstore_repository service since 9.1.0. This will be required in Drupal 10.0.0. See https://www.drupal.org/node/3152690');
     $layout_temp_storage = $this->prophesize(LayoutTempstoreRepositoryInterface::class);
     $element = new LayoutBuilder(
       [],
@@ -34,9 +34,9 @@ public function testConstructorTempStoreDeprecation() {
 
   /**
    * @group legacy
-   * @expectedDeprecation Calling LayoutBuilder::__construct() with the $messenger argument is deprecated in drupal:9.1.0 and will be removed in drupal:10.0.0. See https://www.drupal.org/node/3152690
    */
   public function testConstructorMessengerDeprecation() {
+    $this->expectDeprecation('Calling LayoutBuilder::__construct() with the $messenger argument is deprecated in drupal:9.1.0 and will be removed in drupal:10.0.0. See https://www.drupal.org/node/3152690');
     $event_dispatcher = $this->prophesize(EventDispatcherInterface::class);
     $messenger = $this->prophesize(MessengerInterface::class);
 
diff --git a/core/modules/migrate_drupal/tests/src/Unit/Plugin/migrate/field/d6/NodeReferenceFieldTest.php b/core/modules/migrate_drupal/tests/src/Unit/Plugin/migrate/field/d6/NodeReferenceFieldTest.php
index 9ddfea4f1a..8aec08ef49 100644
--- a/core/modules/migrate_drupal/tests/src/Unit/Plugin/migrate/field/d6/NodeReferenceFieldTest.php
+++ b/core/modules/migrate_drupal/tests/src/Unit/Plugin/migrate/field/d6/NodeReferenceFieldTest.php
@@ -47,9 +47,10 @@ protected function setUp(): void {
 
   /**
    * @covers ::defineValueProcessPipeline
-   * @expectedDeprecation The Drupal\migrate_drupal\Plugin\migrate\field\NodeReference is deprecated in drupal:9.1.0 and will be removed from drupal:10.0.0. Instead use \Drupal\migrate_drupal\Plugin\migrate\field\d6\NodeReference. See https://www.drupal.org/node/3159537.
+   * @runInSeparateProcess
    */
   public function testDefineValueProcessPipeline() {
+    $this->expectDeprecation('The Drupal\migrate_drupal\Plugin\migrate\field\NodeReference is deprecated in drupal:9.1.0 and will be removed from drupal:10.0.0. Instead use \Drupal\migrate_drupal\Plugin\migrate\field\d6\NodeReference. See https://www.drupal.org/node/3159537.');
     $this->plugin->defineValueProcessPipeline($this->migration, 'somefieldname', []);
 
     $expected = [
diff --git a/core/modules/search/tests/src/Kernel/SearchDeprecationTest.php b/core/modules/search/tests/src/Kernel/SearchDeprecationTest.php
index 78d5751eca..693c6cf375 100644
--- a/core/modules/search/tests/src/Kernel/SearchDeprecationTest.php
+++ b/core/modules/search/tests/src/Kernel/SearchDeprecationTest.php
@@ -30,32 +30,24 @@ protected function setUp(): void {
     $this->installConfig(['search']);
   }
 
-  /**
-   * @expectedDeprecation search_index_split() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\search\SearchTextProcessorInterface::process() instead. See https://www.drupal.org/node/3078162
-   */
   public function testDeprecatedIndexSplit() {
+    $this->expectDeprecation('search_index_split() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\search\SearchTextProcessorInterface::process() instead. See https://www.drupal.org/node/3078162');
     $this->assertEquals(["two", "words"], search_index_split("two words"));
   }
 
-  /**
-   * @expectedDeprecation search_simplify() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\search\SearchTextProcessorInterface::analyze() instead. See https://www.drupal.org/node/3078162
-   */
   public function testDeprecatedSimplify() {
+    $this->expectDeprecation('search_simplify() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\search\SearchTextProcessorInterface::analyze() instead. See https://www.drupal.org/node/3078162');
     // cSpell:disable-next-line
     $this->assertEquals("vogel", search_simplify("Vögel"));
   }
 
-  /**
-   * @expectedDeprecation search_expand_cjk() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use a custom implementation of SearchTextProcessorInterface instead. instead. See https://www.drupal.org/node/3078162
-   */
   public function testExpandCjk() {
+    $this->expectDeprecation('search_expand_cjk() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use a custom implementation of SearchTextProcessorInterface instead. instead. See https://www.drupal.org/node/3078162');
     $this->assertEquals(" 이런 ", search_expand_cjk(["이런"]));
   }
 
-  /**
-   * @expectedDeprecation search_invoke_preprocess() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use a custom implementation of SearchTextProcessorInterface instead. See https://www.drupal.org/node/3078162
-   */
   public function testInvokePreprocess() {
+    $this->expectDeprecation('search_invoke_preprocess() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use a custom implementation of SearchTextProcessorInterface instead. See https://www.drupal.org/node/3078162');
     $text = $this->randomString();
     search_invoke_preprocess($text);
     $this->assertIsString($text);
diff --git a/core/modules/system/tests/src/Functional/CsrfRequestHeaderTest.php b/core/modules/system/tests/src/Functional/CsrfRequestHeaderTest.php
index 68c4861d5c..7fab46fc1e 100644
--- a/core/modules/system/tests/src/Functional/CsrfRequestHeaderTest.php
+++ b/core/modules/system/tests/src/Functional/CsrfRequestHeaderTest.php
@@ -31,9 +31,9 @@ class CsrfRequestHeaderTest extends BrowserTestBase {
    * uses the deprecated _access_rest_csrf.
    *
    * @group legacy
-   * @expectedDeprecation Route requirement _access_rest_csrf is deprecated in drupal:8.2.0 and is removed in drupal:10.0.0. Use _csrf_request_header_token instead. See https://www.drupal.org/node/2772399
    */
   public function testRouteAccess() {
+    $this->expectDeprecation('Route requirement _access_rest_csrf is deprecated in drupal:8.2.0 and is removed in drupal:10.0.0. Use _csrf_request_header_token instead. See https://www.drupal.org/node/2772399');
     $client = $this->getHttpClient();
     $csrf_token_paths = ['deprecated/session/token', 'session/token'];
     // Test using the both the current path and a test path that returns
diff --git a/core/modules/system/tests/src/Functional/Theme/LegacyStyleSheetsRemoveTest.php b/core/modules/system/tests/src/Functional/Theme/LegacyStyleSheetsRemoveTest.php
index 707fc6edcf..fde9b59b23 100644
--- a/core/modules/system/tests/src/Functional/Theme/LegacyStyleSheetsRemoveTest.php
+++ b/core/modules/system/tests/src/Functional/Theme/LegacyStyleSheetsRemoveTest.php
@@ -29,10 +29,9 @@ protected function setUp(): void {
    * Tests the stylesheets-remove key.
    *
    * @throws \Behat\Mink\Exception\ExpectationException
-   *
-   * @expectedDeprecation The theme info key stylesheets-remove implemented by theme test_legacy_stylesheets_remove is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. See https://www.drupal.org/node/2497313
    */
   public function testStyleSheetsRemove() {
+    $this->expectDeprecation('The theme info key stylesheets-remove implemented by theme test_legacy_stylesheets_remove is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. See https://www.drupal.org/node/2497313');
     \Drupal::configFactory()->getEditable('system.theme')->set('default', 'classy')->save();
     $this->drupalGet('<front>');
     $this->assertSession()->responseContains('css/components/action-links.css?');
diff --git a/core/modules/user/tests/src/FunctionalJavascript/PasswordWidgetThemeFunctionTest.php b/core/modules/user/tests/src/FunctionalJavascript/PasswordWidgetThemeFunctionTest.php
index 5cf76713bd..af11642b98 100644
--- a/core/modules/user/tests/src/FunctionalJavascript/PasswordWidgetThemeFunctionTest.php
+++ b/core/modules/user/tests/src/FunctionalJavascript/PasswordWidgetThemeFunctionTest.php
@@ -43,13 +43,12 @@ protected function setUp(): void {
    * Tests password widget theme functions and its deprecations.
    *
    * @group legacy
-   *
-   * @expectedDeprecation Javascript Deprecation: Returning <span> without data-drupal-selector="password-match-status-text" attribute is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. See https://www.drupal.org/node/3152101
-   * @expectedDeprecation Javascript Deprecation: The js-password-strength__indicator class is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Replace js-password-strength__indicator with a data-drupal-selector="password-strength-indicator" attribute. See https://www.drupal.org/node/3152101
-   * @expectedDeprecation Javascript Deprecation: The js-password-strength__text class is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Replace js-password-strength__text with a data-drupal-selector="password-strength-text" attribute. See https://www.drupal.org/node/3152101
-   * @expectedDeprecation Javascript Deprecation: The message property is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. The markup should be constructed using messageTips property and Drupal.theme.passwordSuggestions. See https://www.drupal.org/node/3130352
    */
   public function testPasswordConfirmWidgetJsComponents() {
+    $this->expectDeprecation('Javascript Deprecation: Returning <span> without data-drupal-selector="password-match-status-text" attribute is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. See https://www.drupal.org/node/3152101');
+    $this->expectDeprecation('Javascript Deprecation: The js-password-strength__indicator class is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Replace js-password-strength__indicator with a data-drupal-selector="password-strength-indicator" attribute. See https://www.drupal.org/node/3152101');
+    $this->expectDeprecation('Javascript Deprecation: The js-password-strength__text class is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Replace js-password-strength__text with a data-drupal-selector="password-strength-text" attribute. See https://www.drupal.org/node/3152101');
+    $this->expectDeprecation('Javascript Deprecation: The message property is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. The markup should be constructed using messageTips property and Drupal.theme.passwordSuggestions. See https://www.drupal.org/node/3130352');
     $assert_session = $this->assertSession();
 
     $this->drupalGet($this->testUser->toUrl('edit-form'));
diff --git a/core/modules/user/tests/src/Kernel/Controller/UserAuthenticationControllerTest.php b/core/modules/user/tests/src/Kernel/Controller/UserAuthenticationControllerTest.php
index 23bdc6c881..bf862ca8c4 100644
--- a/core/modules/user/tests/src/Kernel/Controller/UserAuthenticationControllerTest.php
+++ b/core/modules/user/tests/src/Kernel/Controller/UserAuthenticationControllerTest.php
@@ -25,9 +25,9 @@ class UserAuthenticationControllerTest extends KernelTestBase {
 
   /**
    * @group legacy
-   * @expectedDeprecation Passing the flood service to Drupal\user\Controller\UserAuthenticationController::__construct is deprecated in drupal:9.1.0 and is replaced by user.flood_control in drupal:10.0.0. See https://www.drupal.org/node/3067148
    */
   public function testConstructorDeprecations() {
+    $this->expectDeprecation('Passing the flood service to Drupal\user\Controller\UserAuthenticationController::__construct is deprecated in drupal:9.1.0 and is replaced by user.flood_control in drupal:10.0.0. See https://www.drupal.org/node/3067148');
     $flood = $this->prophesize(FloodInterface::class);
     $user_storage = $this->prophesize(UserStorageInterface::class);
     $csrf_token = $this->prophesize(CsrfTokenGenerator::class);
diff --git a/core/modules/user/tests/src/Kernel/Form/UserLoginFormTest.php b/core/modules/user/tests/src/Kernel/Form/UserLoginFormTest.php
index 5e9bf65de9..4bb50b8a82 100644
--- a/core/modules/user/tests/src/Kernel/Form/UserLoginFormTest.php
+++ b/core/modules/user/tests/src/Kernel/Form/UserLoginFormTest.php
@@ -22,9 +22,9 @@ class UserLoginFormTest extends KernelTestBase {
 
   /**
    * @group legacy
-   * @expectedDeprecation Passing the flood service to Drupal\user\Form\UserLoginForm::__construct is deprecated in drupal:9.1.0 and is replaced by user.flood_control in drupal:10.0.0. See https://www.drupal.org/node/3067148
    */
   public function testConstructorDeprecations() {
+    $this->expectDeprecation('Passing the flood service to Drupal\user\Form\UserLoginForm::__construct is deprecated in drupal:9.1.0 and is replaced by user.flood_control in drupal:10.0.0. See https://www.drupal.org/node/3067148');
     $flood = $this->prophesize(FloodInterface::class);
     $user_storage = $this->prophesize(UserStorageInterface::class);
     $user_auth = $this->prophesize(UserAuthInterface::class);
diff --git a/core/modules/user/tests/src/Kernel/UserLegacyTest.php b/core/modules/user/tests/src/Kernel/UserLegacyTest.php
index 6fc6627f6b..c65726a000 100644
--- a/core/modules/user/tests/src/Kernel/UserLegacyTest.php
+++ b/core/modules/user/tests/src/Kernel/UserLegacyTest.php
@@ -17,10 +17,8 @@ class UserLegacyTest extends KernelTestBase {
    */
   protected static $modules = ['user'];
 
-  /**
-   * @expectedDeprecation user_password() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\Core\Password\PasswordGeneratorInterface::generate() instead. See https://www.drupal.org/node/3153113
-   */
   public function testUserPassword() {
+    $this->expectDeprecation('user_password() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\Core\Password\PasswordGeneratorInterface::generate() instead. See https://www.drupal.org/node/3153113');
     $this->assertNotEmpty(user_password());
   }
 
diff --git a/core/modules/views/tests/src/Kernel/ViewsConfigUpdaterTest.php b/core/modules/views/tests/src/Kernel/ViewsConfigUpdaterTest.php
index 1b9bb0bb3b..2246ba1ed5 100644
--- a/core/modules/views/tests/src/Kernel/ViewsConfigUpdaterTest.php
+++ b/core/modules/views/tests/src/Kernel/ViewsConfigUpdaterTest.php
@@ -71,10 +71,9 @@ public function testNeedsEntityLinkUrlUpdate() {
 
   /**
    * @covers ::needsEntityLinkUrlUpdate
-   *
-   * @expectedDeprecation The entity link url update for the "node_link_update_test" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2857891.
    */
   public function testNeedsEntityLinkUrlUpdateDeprecation() {
+    $this->expectDeprecation('The entity link url update for the "node_link_update_test" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2857891.');
     $test_view = $this->loadTestView('views.view.node_link_update_test');
     $needs_update = $this->configUpdater->needsEntityLinkUrlUpdate($test_view);
     $this->assertTrue($needs_update);
@@ -92,10 +91,9 @@ public function testNeedsOperatorUpdateDefaults() {
 
   /**
    * @covers ::needsOperatorDefaultsUpdate
-   *
-   * @expectedDeprecation The operator defaults update for the "test_exposed_filters" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2869168.
    */
   public function testNeedsOperatorDefaultsUpdateDeprecation() {
+    $this->expectDeprecation('The operator defaults update for the "test_exposed_filters" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2869168.');
     $test_view = $this->loadTestView('views.view.test_exposed_filters');
     $needs_update = $this->configUpdater->needsOperatorDefaultsUpdate($test_view);
     $this->assertTrue($needs_update);
@@ -113,10 +111,9 @@ public function testNeedsFieldNamesForMultivalueBaseFieldsUpdate() {
 
   /**
    * @covers ::needsMultivalueBaseFieldUpdate
-   *
-   * @expectedDeprecation The multivalue base field update for the "test_user_multi_value" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2900684.
    */
   public function testNeedsFieldNamesForMultivalueBaseUpdateFieldsDeprecation() {
+    $this->expectDeprecation('The multivalue base field update for the "test_user_multi_value" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2900684.');
     $test_view = $this->loadTestView('views.view.test_user_multi_value');
     $needs_update = $this->configUpdater->needsMultivalueBaseFieldUpdate($test_view);
     $this->assertTrue($needs_update);
@@ -124,12 +121,11 @@ public function testNeedsFieldNamesForMultivalueBaseUpdateFieldsDeprecation() {
 
   /**
    * @covers ::updateAll
-   *
-   * @expectedDeprecation The entity link url update for the "node_link_update_test" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2857891.
-   * @expectedDeprecation The operator defaults update for the "test_exposed_filters" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2869168.
-   * @expectedDeprecation The multivalue base field update for the "test_user_multi_value" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2900684.
    */
   public function testUpdateAll() {
+    $this->expectDeprecation('The entity link url update for the "node_link_update_test" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2857891.');
+    $this->expectDeprecation('The operator defaults update for the "test_exposed_filters" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2869168.');
+    $this->expectDeprecation('The multivalue base field update for the "test_user_multi_value" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2900684.');
     $view_ids = [
       'views.view.node_link_update_test',
       'views.view.test_exposed_filters',
diff --git a/core/tests/Drupal/FunctionalJavascriptTests/JavascriptDeprecationTest.php b/core/tests/Drupal/FunctionalJavascriptTests/JavascriptDeprecationTest.php
index f7efb0a6c5..b8c55028dd 100644
--- a/core/tests/Drupal/FunctionalJavascriptTests/JavascriptDeprecationTest.php
+++ b/core/tests/Drupal/FunctionalJavascriptTests/JavascriptDeprecationTest.php
@@ -18,10 +18,11 @@ class JavascriptDeprecationTest extends WebDriverTestBase {
   protected $defaultTheme = 'stark';
 
   /**
-   * @expectedDeprecation Javascript Deprecation: This function is deprecated for testing purposes.
-   * @expectedDeprecation Javascript Deprecation: This property is deprecated for testing purposes.
+   * Tests Javascript deprecation notices.
    */
   public function testJavascriptDeprecation() {
+    $this->expectDeprecation('Javascript Deprecation: This function is deprecated for testing purposes.');
+    $this->expectDeprecation('Javascript Deprecation: This property is deprecated for testing purposes.');
     $this->drupalGet('js_deprecation_test');
     // Ensure that deprecation message from previous page loads will be
     // detected.
diff --git a/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php b/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
index 9723712a93..ac7e0dfba3 100644
--- a/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
+++ b/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
@@ -254,9 +254,9 @@ public function testInvalidLinkNotExistsExact() {
    * Tests legacy assertResponse().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertResponse() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->statusCodeEquals() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertResponse() {
+    $this->expectDeprecation('AssertLegacyTrait::assertResponse() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->statusCodeEquals() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-encoded');
     $this->assertResponse(200);
   }
@@ -265,9 +265,9 @@ public function testAssertResponse() {
    * Tests legacy assertTitle().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertTitle() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->titleEquals() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertTitle() {
+    $this->expectDeprecation('AssertLegacyTrait::assertTitle() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->titleEquals() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-encoded');
     $this->assertTitle("Page with encoded HTML | Drupal");
   }
@@ -276,9 +276,9 @@ public function testAssertTitle() {
    * Tests legacy assertHeader().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertHeader() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseHeaderEquals() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertHeader() {
+    $this->expectDeprecation('AssertLegacyTrait::assertHeader() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseHeaderEquals() instead. See https://www.drupal.org/node/3129738');
     $account = $this->drupalCreateUser();
     $this->drupalLogin($account);
     $this->drupalGet('test-page');
@@ -300,9 +300,9 @@ public function testTextAsserts() {
    * Tests legacy assertPattern().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertPattern() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseMatches() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertPattern() {
+    $this->expectDeprecation('AssertLegacyTrait::assertPattern() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseMatches() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-escaped-characters');
     $this->assertPattern('/div class.*escaped/');
   }
@@ -311,9 +311,9 @@ public function testAssertPattern() {
    * Tests legacy getRawContent().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::getRawContent() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->getPage()->getContent() instead. See https://www.drupal.org/node/3129738
    */
   public function testGetRawContent() {
+    $this->expectDeprecation('AssertLegacyTrait::getRawContent() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->getPage()->getContent() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-encoded');
     $this->assertSame($this->getSession()->getPage()->getContent(), $this->getRawContent());
   }
@@ -322,9 +322,9 @@ public function testGetRawContent() {
    * Tests legacy buildXPathQuery().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::buildXPathQuery() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->buildXPathQuery() instead. See https://www.drupal.org/node/3129738
    */
   public function testBuildXPathQuery() {
+    $this->expectDeprecation('AssertLegacyTrait::buildXPathQuery() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->buildXPathQuery() instead. See https://www.drupal.org/node/3129738');
     $this->buildXPathQuery('\\html');
   }
 
@@ -375,10 +375,10 @@ public function testXpathAsserts() {
    * Tests legacy field asserts using textfields.
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertField() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldExists() or $this->assertSession()->buttonExists() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertNoField() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldNotExists() or $this->assertSession()->buttonNotExists() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertField() {
+    $this->expectDeprecation('AssertLegacyTrait::assertField() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldExists() or $this->assertSession()->buttonExists() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertNoField() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldNotExists() or $this->assertSession()->buttonNotExists() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-field-xpath');
     $this->assertField('name');
     $this->assertNoField('invalid_name_and_id');
@@ -388,10 +388,10 @@ public function testAssertField() {
    * Tests legacy field asserts by id.
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertFieldById() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldExists() or $this->assertSession()->buttonExists() or $this->assertSession()->fieldValueEquals() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertNoFieldById() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldNotExists() or $this->assertSession()->buttonNotExists() or $this->assertSession()->fieldValueNotEquals() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertFieldById() {
+    $this->expectDeprecation('AssertLegacyTrait::assertFieldById() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldExists() or $this->assertSession()->buttonExists() or $this->assertSession()->fieldValueEquals() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertNoFieldById() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldNotExists() or $this->assertSession()->buttonNotExists() or $this->assertSession()->fieldValueNotEquals() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-field-xpath');
     $this->assertFieldById('edit-save', NULL);
     $this->assertNoFieldById('invalid', NULL);
@@ -512,11 +512,11 @@ public function testFieldAssertsForTextfields() {
    * Tests legacy field asserts for options field type.
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertOptionByText() is deprecated in drupal:8.4.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertOption() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertNoOption() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionNotExists() instead. See https://www.drupal.org/node/3129738
    */
   public function testFieldAssertsForOptions() {
+    $this->expectDeprecation('AssertLegacyTrait::assertOptionByText() is deprecated in drupal:8.4.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertOption() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertNoOption() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionNotExists() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-field-xpath');
 
     // Option field type.
@@ -605,10 +605,10 @@ public function testFieldAssertsForButton() {
    * Tests legacy assertFieldChecked() and assertNoFieldChecked().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertFieldChecked() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->checkboxChecked() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertNoFieldChecked() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->checkboxNotChecked() instead. See https://www.drupal.org/node/3129738
    */
   public function testLegacyFieldAssertsForCheckbox() {
+    $this->expectDeprecation('AssertLegacyTrait::assertFieldChecked() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->checkboxChecked() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertNoFieldChecked() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->checkboxNotChecked() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-field-xpath');
     $this->assertFieldChecked('edit-checkbox-enabled');
     $this->assertNoFieldChecked('edit-checkbox-disabled');
@@ -843,10 +843,10 @@ public function testEscapingAssertions() {
    * Tests deprecation of legacy assertEscaped() and assertNoEscaped().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertNoEscaped() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->assertNoEscaped() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertEscaped() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->assertEscaped() instead. See https://www.drupal.org/node/3129738
    */
   public function testLegacyEscapingAssertions(): void {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoEscaped() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->assertNoEscaped() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertEscaped() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->assertEscaped() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-escaped-characters');
     $this->assertNoEscaped('<div class="escaped">');
     $this->assertEscaped('Escaped: <"\'&>');
@@ -856,9 +856,9 @@ public function testLegacyEscapingAssertions(): void {
    * Tests deprecation of drupalPostForm().
    *
    * @group legacy
-   * @expectedDeprecation Calling Drupal\Tests\UiHelperTrait::drupalPostForm() with $edit set to NULL is deprecated in drupal:9.1.0 and the method is removed in drupal:10.0.0. Use $this->submitForm() instead. See https://www.drupal.org/node/3168858
    */
   public function testLegacyDrupalPostForm(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\UiHelperTrait::drupalPostForm() with $edit set to NULL is deprecated in drupal:9.1.0 and the method is removed in drupal:10.0.0. Use $this->submitForm() instead. See https://www.drupal.org/node/3168858');
     $this->drupalPostForm(NULL, NULL, '');
   }
 
@@ -899,10 +899,10 @@ public function testDeprecationHeaders() {
    * Tests legacy assertFieldByName() and assertNoFieldByName().
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertFieldByName() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldExists() or $this->assertSession()->buttonExists() or $this->assertSession()->fieldValueEquals() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation AssertLegacyTrait::assertNoFieldByName() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldNotExists() or $this->assertSession()->buttonNotExists() or $this->assertSession()->fieldValueNotEquals() instead. See https://www.drupal.org/node/3129738
    */
   public function testLegacyFieldAssertsByName() {
+    $this->expectDeprecation('AssertLegacyTrait::assertFieldByName() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldExists() or $this->assertSession()->buttonExists() or $this->assertSession()->fieldValueEquals() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('AssertLegacyTrait::assertNoFieldByName() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->fieldNotExists() or $this->assertSession()->buttonNotExists() or $this->assertSession()->fieldValueNotEquals() instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('test-field-xpath');
     $this->assertFieldByName('checkbox_enabled', TRUE);
     $this->assertNoFieldByName('checkbox_enabled', FALSE);
diff --git a/core/tests/Drupal/FunctionalTests/Core/Test/AssertLegacyTraitDeprecatedTest.php b/core/tests/Drupal/FunctionalTests/Core/Test/AssertLegacyTraitDeprecatedTest.php
index f01b8ccc1f..5341a9ac25 100644
--- a/core/tests/Drupal/FunctionalTests/Core/Test/AssertLegacyTraitDeprecatedTest.php
+++ b/core/tests/Drupal/FunctionalTests/Core/Test/AssertLegacyTraitDeprecatedTest.php
@@ -26,10 +26,9 @@ class AssertLegacyTraitDeprecatedTest extends BrowserTestBase {
 
   /**
    * Tests getAllOptions().
-   *
-   * @expectedDeprecation AssertLegacyTrait::getAllOptions() is deprecated in drupal:8.5.0 and is removed from drupal:10.0.0. Use $element->findAll('xpath', 'option') instead. See https://www.drupal.org/node/3129738
    */
   public function testGetAllOptions() {
+    $this->expectDeprecation('AssertLegacyTrait::getAllOptions() is deprecated in drupal:8.5.0 and is removed from drupal:10.0.0. Use $element->findAll(\'xpath\', \'option\') instead. See https://www.drupal.org/node/3129738');
     $this->drupalGet('/form-test/select');
     $this->assertCount(6, $this->getAllOptions($this->cssSelect('select[name="opt_groups"]')[0]));
   }
diff --git a/core/tests/Drupal/FunctionalTests/Core/Test/PhpUnitBridgeTest.php b/core/tests/Drupal/FunctionalTests/Core/Test/PhpUnitBridgeTest.php
index 0a814e3cb1..f00a79b822 100644
--- a/core/tests/Drupal/FunctionalTests/Core/Test/PhpUnitBridgeTest.php
+++ b/core/tests/Drupal/FunctionalTests/Core/Test/PhpUnitBridgeTest.php
@@ -21,16 +21,18 @@ class PhpUnitBridgeTest extends BrowserTestBase {
   protected $defaultTheme = 'stark';
 
   /**
-   * @expectedDeprecation This is the deprecation message for deprecation_test_function().
+   * Tests deprecation message from deprecation_test_function().
    */
   public function testSilencedError() {
+    $this->expectDeprecation('This is the deprecation message for deprecation_test_function().');
     $this->assertEquals('known_return_value', deprecation_test_function());
   }
 
   /**
-   * @expectedDeprecation This is the deprecation message for deprecation_test_function().
+   * Tests deprecation message from deprecated route.
    */
   public function testErrorOnSiteUnderTest() {
+    $this->expectDeprecation('This is the deprecation message for deprecation_test_function().');
     $this->drupalGet(Url::fromRoute('deprecation_test.route'));
   }
 
diff --git a/core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php b/core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php
index c7c34018a6..80f04103f8 100644
--- a/core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Asset/LibraryDiscoveryIntegrationTest.php
@@ -217,13 +217,12 @@ public function testLibrariesExtend() {
    * Test deprecated libraries.
    *
    * @group legacy
-   *
-   * @expectedDeprecation Theme "theme_test" is overriding a deprecated library. The "theme_test/deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com
-   * @expectedDeprecation Theme "theme_test" is extending a deprecated library. The "theme_test/another_deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com
-   * @expectedDeprecation The "theme_test/deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com
-   * @expectedDeprecation The "theme_test/another_deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com
    */
   public function testDeprecatedLibrary() {
+    $this->expectDeprecation('Theme "theme_test" is overriding a deprecated library. The "theme_test/deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com');
+    $this->expectDeprecation('Theme "theme_test" is extending a deprecated library. The "theme_test/another_deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com');
+    $this->expectDeprecation('The "theme_test/deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com');
+    $this->expectDeprecation('The "theme_test/another_deprecated_library" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com');
     $this->activateTheme('test_legacy_theme');
     $this->libraryDiscovery->getLibraryByName('theme_test', 'deprecated_library');
     $this->libraryDiscovery->getLibraryByName('theme_test', 'another_deprecated_library');
diff --git a/core/tests/Drupal/KernelTests/Core/Config/ConfigSchemaDeprecationTest.php b/core/tests/Drupal/KernelTests/Core/Config/ConfigSchemaDeprecationTest.php
index d2ce47daf6..5f2d983161 100644
--- a/core/tests/Drupal/KernelTests/Core/Config/ConfigSchemaDeprecationTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Config/ConfigSchemaDeprecationTest.php
@@ -21,10 +21,9 @@ class ConfigSchemaDeprecationTest extends KernelTestBase {
 
   /**
    * Tests config schema deprecation.
-   *
-   * @expectedDeprecation The 'complex_structure_deprecated' config schema is deprecated in drupal:9.1.0 and is removed from drupal 10.0.0. Use the 'complex_structure' config schema instead. See http://drupal.org/node/the-change-notice-nid.
    */
   public function testConfigSchemaDeprecation() {
+    $this->expectDeprecation('The \'complex_structure_deprecated\' config schema is deprecated in drupal:9.1.0 and is removed from drupal 10.0.0. Use the \'complex_structure\' config schema instead. See http://drupal.org/node/the-change-notice-nid.');
     $config = $this->config('config_schema_deprecated_test.settings');
     $config
       ->set('complex_structure_deprecated.type', 'fruits')
diff --git a/core/tests/Drupal/KernelTests/Core/Config/ConfigStorageStagingTest.php b/core/tests/Drupal/KernelTests/Core/Config/ConfigStorageStagingTest.php
index 46dc6b0537..fb7c4d290d 100644
--- a/core/tests/Drupal/KernelTests/Core/Config/ConfigStorageStagingTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Config/ConfigStorageStagingTest.php
@@ -14,9 +14,10 @@
 class ConfigStorageStagingTest extends KernelTestBase {
 
   /**
-   * @expectedDeprecation The "config.storage.staging" service is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use the "config.storage.sync" service instead. See https://www.drupal.org/node/2574957
+   * Tests deprecation of the "config.storage.staging" service.
    */
   public function testConfigStorageStagingDeprecation() {
+    $this->expectDeprecation('The "config.storage.staging" service is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use the "config.storage.sync" service instead. See https://www.drupal.org/node/2574957');
     $storage_staging = \Drupal::service('config.storage.staging');
     // Ensure at least one assertion.
     $this->assertInstanceOf(FileStorage::class, $storage_staging);
diff --git a/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php b/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php
index 1a9a929e6c..c92ed67764 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php
@@ -122,10 +122,10 @@ public function testConnectionOptions() {
    * Tests the deprecation of the 'transactions' connection option.
    *
    * @group legacy
-   * @expectedDeprecation Passing a 'transactions' connection option to Drupal\Core\Database\Connection::__construct is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745
-   * @expectedDeprecation Drupal\Core\Database\Connection::supportsTransactions is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745
    */
   public function testTransactionsOptionDeprecation() {
+    $this->expectDeprecation('Passing a \'transactions\' connection option to Drupal\Core\Database\Connection::__construct is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745');
+    $this->expectDeprecation('Drupal\Core\Database\Connection::supportsTransactions is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745');
     $connection_info = Database::getConnectionInfo('default');
     $connection_info['default']['transactions'] = FALSE;
     Database::addConnectionInfo('default', 'foo', $connection_info['default']);
diff --git a/core/tests/Drupal/KernelTests/Core/Database/DatabaseExceptionWrapperTest.php b/core/tests/Drupal/KernelTests/Core/Database/DatabaseExceptionWrapperTest.php
index 1b2984ed4f..0f4c06a328 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/DatabaseExceptionWrapperTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/DatabaseExceptionWrapperTest.php
@@ -17,9 +17,9 @@ class DatabaseExceptionWrapperTest extends KernelTestBase {
    * Tests deprecation of Connection::prepare.
    *
    * @group legacy
-   * @expectedDeprecation Connection::prepare() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Database drivers should instantiate \PDOStatement objects by calling \PDO::prepare in their Connection::prepareStatement method instead. \PDO::prepare should not be called outside of driver code. See https://www.drupal.org/node/3137786
    */
   public function testPrepare() {
+    $this->expectDeprecation('Connection::prepare() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Database drivers should instantiate \PDOStatement objects by calling \PDO::prepare in their Connection::prepareStatement method instead. \PDO::prepare should not be called outside of driver code. See https://www.drupal.org/node/3137786');
     $connection = Database::getConnection();
     try {
       // SQLite validates the syntax upon preparing a statement already.
@@ -41,9 +41,9 @@ public function testPrepare() {
    * Tests deprecation of Connection::prepareQuery.
    *
    * @group legacy
-   * @expectedDeprecation Connection::prepareQuery() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use ::prepareStatement() instead. See https://www.drupal.org/node/3137786
    */
   public function testPrepareQuery() {
+    $this->expectDeprecation('Connection::prepareQuery() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use ::prepareStatement() instead. See https://www.drupal.org/node/3137786');
     $this->expectException(\PDOException::class);
     $stmt = Database::getConnection()->prepareQuery('bananas');
     $stmt->execute();
diff --git a/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookTest.php b/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookTest.php
index 18245634ac..c7e3ba4aa3 100644
--- a/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookTest.php
@@ -18,9 +18,9 @@ class ModuleHandlerDeprecatedHookTest extends KernelTestBase {
 
   /**
    * @covers ::invokeDeprecated
-   * @expectedDeprecation The deprecated hook hook_deprecated_hook() is implemented in these functions: deprecation_test_deprecated_hook(). Use something else.
    */
   public function testInvokeDeprecated() {
+    $this->expectDeprecation('The deprecated hook hook_deprecated_hook() is implemented in these functions: deprecation_test_deprecated_hook(). Use something else.');
     /* @var $module_handler \Drupal\Core\Extension\ModuleHandlerInterface */
     $module_handler = $this->container->get('module_handler');
     $arg = 'an_arg';
@@ -32,9 +32,9 @@ public function testInvokeDeprecated() {
 
   /**
    * @covers ::invokeAllDeprecated
-   * @expectedDeprecation The deprecated hook hook_deprecated_hook() is implemented in these functions: deprecation_test_deprecated_hook(). Use something else.
    */
   public function testInvokeAllDeprecated() {
+    $this->expectDeprecation('The deprecated hook hook_deprecated_hook() is implemented in these functions: deprecation_test_deprecated_hook(). Use something else.');
     /* @var $module_handler \Drupal\Core\Extension\ModuleHandlerInterface */
     $module_handler = $this->container->get('module_handler');
     $arg = 'an_arg';
@@ -46,9 +46,9 @@ public function testInvokeAllDeprecated() {
 
   /**
    * @covers ::alterDeprecated
-   * @expectedDeprecation The deprecated alter hook hook_deprecated_alter_alter() is implemented in these functions: deprecation_test_deprecated_alter_alter. Alter something else.
    */
   public function testAlterDeprecated() {
+    $this->expectDeprecation('The deprecated alter hook hook_deprecated_alter_alter() is implemented in these functions: deprecation_test_deprecated_alter_alter. Alter something else.');
     /* @var $module_handler \Drupal\Core\Extension\ModuleHandlerInterface */
     $module_handler = $this->container->get('module_handler');
     $data = [];
diff --git a/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookUnimplementedTest.php b/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookUnimplementedTest.php
index 89ee225606..dfa7de67bc 100644
--- a/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookUnimplementedTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Extension/ModuleHandlerDeprecatedHookUnimplementedTest.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\KernelTests\Core\Extension;
 
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\KernelTests\KernelTestBase;
 
 /**
@@ -17,13 +18,13 @@ class ModuleHandlerDeprecatedHookUnimplementedTest extends KernelTestBase {
    * @covers ::alterDeprecated
    * @covers ::invokeAllDeprecated
    * @covers ::invokeDeprecated
-   * @doesNotPerformAssertions
    */
   public function testUnimplementedHooks() {
     $unimplemented_hook_name = 'unimplemented_hook_name';
 
     /* @var $module_handler \Drupal\Core\Extension\ModuleHandlerInterface */
     $module_handler = $this->container->get('module_handler');
+    $this->assertInstanceOf(ModuleHandlerInterface::class, $module_handler);
 
     $module_handler->invokeDeprecated('Use something else.', 'deprecation_test', $unimplemented_hook_name);
     $module_handler->invokeAllDeprecated('Use something else.', $unimplemented_hook_name);
diff --git a/core/tests/Drupal/KernelTests/Core/Extension/UpdateDeprecationTest.php b/core/tests/Drupal/KernelTests/Core/Extension/UpdateDeprecationTest.php
index e51e35e05f..98f4035c6a 100644
--- a/core/tests/Drupal/KernelTests/Core/Extension/UpdateDeprecationTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Extension/UpdateDeprecationTest.php
@@ -24,10 +24,9 @@ protected function setUp(): void {
 
   /**
    * Tests update_check_incompatibility() function.
-   *
-   * @expectedDeprecation update_check_incompatibility() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3150727
    */
   public function testUpdateCheckIncompatibility() {
+    $this->expectDeprecation('update_check_incompatibility() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3150727');
     $this->assertTrue(update_check_incompatibility('incompatible_module'));
     $this->assertFalse(update_check_incompatibility('system'));
   }
diff --git a/core/tests/Drupal/KernelTests/Core/File/MimeTypeTest.php b/core/tests/Drupal/KernelTests/Core/File/MimeTypeTest.php
index 1099dd0656..4772d39475 100644
--- a/core/tests/Drupal/KernelTests/Core/File/MimeTypeTest.php
+++ b/core/tests/Drupal/KernelTests/Core/File/MimeTypeTest.php
@@ -93,12 +93,12 @@ public function testFileMimeTypeDetection() {
    * Test deprecations.
    *
    * @group legacy
-   * @expectedDeprecation The "Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" class is deprecated since Symfony 4.3, use "Symfony\Component\Mime\MimeTypes" instead.
-   * @expectedDeprecation The "Symfony\Component\HttpFoundation\File\MimeType\FileBinaryMimeTypeGuesser" class is deprecated since Symfony 4.3, use "Symfony\Component\Mime\FileBinaryMimeTypeGuesser" instead.
-   * @expectedDeprecation The "Symfony\Component\HttpFoundation\File\MimeType\FileinfoMimeTypeGuesser" class is deprecated since Symfony 4.3, use "Symfony\Component\Mime\FileinfoMimeTypeGuesser" instead.
-   * @expectedDeprecation Drupal\Core\File\MimeType\MimeTypeGuesser::guess() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use ::guessMimeType() instead. See https://www.drupal.org/node/3133341
    */
   public function testFileMimeTypeDetectionDeprecation() {
+    $this->expectDeprecation('The "Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" class is deprecated since Symfony 4.3, use "Symfony\Component\Mime\MimeTypes" instead.');
+    $this->expectDeprecation('The "Symfony\Component\HttpFoundation\File\MimeType\FileBinaryMimeTypeGuesser" class is deprecated since Symfony 4.3, use "Symfony\Component\Mime\FileBinaryMimeTypeGuesser" instead.');
+    $this->expectDeprecation('The "Symfony\Component\HttpFoundation\File\MimeType\FileinfoMimeTypeGuesser" class is deprecated since Symfony 4.3, use "Symfony\Component\Mime\FileinfoMimeTypeGuesser" instead.');
+    $this->expectDeprecation('Drupal\Core\File\MimeType\MimeTypeGuesser::guess() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use ::guessMimeType() instead. See https://www.drupal.org/node/3133341');
     $guesser = $this->container->get('file.mime_type.guesser');
     $output = $guesser->guess('public://test.jar');
     $this->assertSame('application/java-archive', $output);
diff --git a/core/tests/Drupal/KernelTests/Core/LegacyServiceTest.php b/core/tests/Drupal/KernelTests/Core/LegacyServiceTest.php
index 8bc6271553..5ec267b018 100644
--- a/core/tests/Drupal/KernelTests/Core/LegacyServiceTest.php
+++ b/core/tests/Drupal/KernelTests/Core/LegacyServiceTest.php
@@ -14,21 +14,19 @@ class LegacyServiceTest extends KernelTestBase {
 
   /**
    * Tests the site.path service.
-   *
-   * @expectedDeprecation The "site.path" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the site.path parameter instead. See https://www.drupal.org/node/3080612
-   * @expectedDeprecation The "site.path.factory" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the site.path parameter instead. See https://www.drupal.org/node/3080612
    */
   public function testSitePath() {
+    $this->expectDeprecation('The "site.path" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the site.path parameter instead. See https://www.drupal.org/node/3080612');
+    $this->expectDeprecation('The "site.path.factory" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the site.path parameter instead. See https://www.drupal.org/node/3080612');
     $this->assertSame($this->container->get('site.path'), (string) $this->container->getParameter('site.path'));
   }
 
   /**
    * Tests the app.root service.
-   *
-   * @expectedDeprecation The "app.root" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the app.root parameter instead. See https://www.drupal.org/node/3080612
-   * @expectedDeprecation The "app.root.factory" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the app.root parameter instead. See https://www.drupal.org/node/3080612
    */
   public function testAppRoot() {
+    $this->expectDeprecation('The "app.root" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the app.root parameter instead. See https://www.drupal.org/node/3080612');
+    $this->expectDeprecation('The "app.root.factory" service is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Use the app.root parameter instead. See https://www.drupal.org/node/3080612');
     $this->assertSame($this->container->get('app.root'), (string) $this->container->getParameter('app.root'));
   }
 
diff --git a/core/tests/Drupal/KernelTests/Core/Routing/RouteProviderTest.php b/core/tests/Drupal/KernelTests/Core/Routing/RouteProviderTest.php
index c32a411be1..c724ebc55d 100644
--- a/core/tests/Drupal/KernelTests/Core/Routing/RouteProviderTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Routing/RouteProviderTest.php
@@ -736,9 +736,9 @@ public function testGetRoutesByPatternWithLongPatterns() {
    * Tests getRoutesPaged().
    *
    * @group legacy
-   * @expectedDeprecation Drupal\Core\Routing\RouteProvider::getRoutesPaged() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3151009
    */
   public function testGetRoutesPaged() {
+    $this->expectDeprecation('Drupal\Core\Routing\RouteProvider::getRoutesPaged() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3151009');
     $connection = Database::getConnection();
     $provider = new RouteProvider($connection, $this->state, $this->currentPath, $this->cache, $this->pathProcessor, $this->cacheTagsInvalidator, 'test_routes');
 
@@ -766,9 +766,9 @@ public function testGetRoutesPaged() {
    * Tests getRoutesCount().
    *
    * @group legacy
-   * @expectedDeprecation Drupal\Core\Routing\RouteProvider::getRoutesCount() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3151009
    */
   public function testGetRoutesCount() {
+    $this->expectDeprecation('Drupal\Core\Routing\RouteProvider::getRoutesCount() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3151009');
     $connection = Database::getConnection();
     $provider = new RouteProvider($connection, $this->state, $this->currentPath, $this->cache, $this->pathProcessor, $this->cacheTagsInvalidator, 'test_routes');
 
diff --git a/core/tests/Drupal/KernelTests/Core/Test/PhpUnitBridgeTest.php b/core/tests/Drupal/KernelTests/Core/Test/PhpUnitBridgeTest.php
index 2942eaace9..3341556e9c 100644
--- a/core/tests/Drupal/KernelTests/Core/Test/PhpUnitBridgeTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Test/PhpUnitBridgeTest.php
@@ -15,18 +15,14 @@ class PhpUnitBridgeTest extends KernelTestBase {
 
   protected static $modules = ['deprecation_test'];
 
-  /**
-   * @expectedDeprecation Drupal\deprecation_test\Deprecation\FixtureDeprecatedClass is deprecated.
-   */
   public function testDeprecatedClass() {
+    $this->expectDeprecation('Drupal\deprecation_test\Deprecation\FixtureDeprecatedClass is deprecated.');
     $deprecated = new FixtureDeprecatedClass();
     $this->assertEquals('test', $deprecated->testFunction());
   }
 
-  /**
-   * @expectedDeprecation This is the deprecation message for deprecation_test_function().
-   */
   public function testDeprecatedFunction() {
+    $this->expectDeprecation('This is the deprecation message for deprecation_test_function().');
     $this->assertEquals('known_return_value', \deprecation_test_function());
   }
 
diff --git a/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php b/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php
index 350f2accb4..5cfa3ca27b 100644
--- a/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php
@@ -26,10 +26,9 @@ class RegistryLegacyTest extends KernelTestBase {
 
   /**
    * Tests the theme registry with theme functions and multiple subthemes.
-   *
-   * @expectedDeprecation Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test(). See https://www.drupal.org/node/1831138
    */
   public function testMultipleSubThemes() {
+    $this->expectDeprecation('Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test(). See https://www.drupal.org/node/1831138');
     $theme_handler = \Drupal::service('theme_handler');
     \Drupal::service('module_installer')->install(['theme_legacy_test']);
     \Drupal::service('theme_installer')->install(['test_basetheme']);
@@ -46,10 +45,9 @@ public function testMultipleSubThemes() {
 
   /**
    * Tests the theme registry with theme functions with suggestions.
-   *
-   * @expectedDeprecation Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of test_legacy_theme_theme_test_preprocess_suggestions__kitten__meerkat(). See https://www.drupal.org/node/1831138
    */
   public function testSuggestionPreprocessFunctions() {
+    $this->expectDeprecation('Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of test_legacy_theme_theme_test_preprocess_suggestions__kitten__meerkat(). See https://www.drupal.org/node/1831138');
     $theme_handler = \Drupal::service('theme_handler');
     \Drupal::service('theme_installer')->install(['test_legacy_theme']);
 
diff --git a/core/tests/Drupal/KernelTests/KernelTestBase.php b/core/tests/Drupal/KernelTests/KernelTestBase.php
index 86644ee69e..2627d73dac 100644
--- a/core/tests/Drupal/KernelTests/KernelTestBase.php
+++ b/core/tests/Drupal/KernelTests/KernelTestBase.php
@@ -30,6 +30,7 @@
 use org\bovigo\vfs\visitor\vfsStreamPrintVisitor;
 use Drupal\Core\Routing\RouteObjectInterface;
 use Symfony\Component\Routing\Route;
+use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 /**
  * Base class for functional integration tests.
@@ -81,6 +82,7 @@ abstract class KernelTestBase extends TestCase implements ServiceProviderInterfa
   use TestRequirementsTrait;
   use PhpUnitWarnings;
   use PhpUnitCompatibilityTrait;
+  use ExpectDeprecationTrait;
 
   /**
    * {@inheritdoc}
diff --git a/core/tests/Drupal/KernelTests/KernelTestBaseTest.php b/core/tests/Drupal/KernelTests/KernelTestBaseTest.php
index e1c5711e7e..8d4e14411f 100644
--- a/core/tests/Drupal/KernelTests/KernelTestBaseTest.php
+++ b/core/tests/Drupal/KernelTests/KernelTestBaseTest.php
@@ -322,9 +322,9 @@ public function testProfileModules() {
    * Tests the deprecation of AssertLegacyTrait::assert.
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assert() is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use $this->assertTrue() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssert() {
+    $this->expectDeprecation('AssertLegacyTrait::assert() is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use $this->assertTrue() instead. See https://www.drupal.org/node/3129738');
     $this->assert(TRUE);
   }
 
@@ -332,9 +332,9 @@ public function testAssert() {
    * Tests the deprecation of AssertLegacyTrait::assertIdenticalObject.
    *
    * @group legacy
-   * @expectedDeprecation AssertLegacyTrait::assertIdenticalObject() is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use $this->assertEquals() instead. See https://www.drupal.org/node/3129738
     */
   public function testAssertIdenticalObject() {
+    $this->expectDeprecation('AssertLegacyTrait::assertIdenticalObject() is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use $this->assertEquals() instead. See https://www.drupal.org/node/3129738');
     $this->assertIdenticalObject((object) ['foo' => 'bar'], (object) ['foo' => 'bar']);
   }
 
@@ -342,9 +342,9 @@ public function testAssertIdenticalObject() {
    * Tests the deprecation of ::installSchema with the tables key_value(_expire).
    *
    * @group legacy
-   * @expectedDeprecation Installing the tables key_value and key_value_expire with the method KernelTestBase::installSchema() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. The tables are now lazy loaded and therefore will be installed automatically when used. See https://www.drupal.org/node/3143286
     */
   public function testKernelTestBaseInstallSchema() {
+    $this->expectDeprecation('Installing the tables key_value and key_value_expire with the method KernelTestBase::installSchema() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. The tables are now lazy loaded and therefore will be installed automatically when used. See https://www.drupal.org/node/3143286');
     $this->enableModules(['system']);
     $this->installSchema('system', ['key_value', 'key_value_expire']);
     $this->assertFalse(Database::getConnection()->schema()->tableExists('key_value'));
diff --git a/core/tests/Drupal/Tests/AssertHelperTraitTest.php b/core/tests/Drupal/Tests/AssertHelperTraitTest.php
index 27dbee19ef..7e14a8aff9 100644
--- a/core/tests/Drupal/Tests/AssertHelperTraitTest.php
+++ b/core/tests/Drupal/Tests/AssertHelperTraitTest.php
@@ -15,9 +15,9 @@ class AssertHelperTraitTest extends UnitTestCase {
   /**
    * @covers ::castSafeStrings
    * @dataProvider providerCastSafeStrings
-   * @expectDeprecation AssertHelperTrait::castSafeStrings() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. There is no replacement; assertEquals() will automatically cast MarkupInterface to strings when needed. See https://www.drupal.org/node/3123638
    */
   public function testCastSafeStrings($expected, $value) {
+    $this->expectDeprecation('AssertHelperTrait::castSafeStrings() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. There is no replacement; assertEquals() will automatically cast MarkupInterface to strings when needed. See https://www.drupal.org/node/3123638');
     $class = new AssertHelperTestClass();
     $this->assertSame($expected, $class->testMethod($value));
   }
diff --git a/core/tests/Drupal/Tests/BrowserTestBase.php b/core/tests/Drupal/Tests/BrowserTestBase.php
index 73aeb23d3f..8b64583b9b 100644
--- a/core/tests/Drupal/Tests/BrowserTestBase.php
+++ b/core/tests/Drupal/Tests/BrowserTestBase.php
@@ -23,6 +23,7 @@
 use PHPUnit\Framework\TestCase;
 use Psr\Http\Message\RequestInterface;
 use Psr\Http\Message\ResponseInterface;
+use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 use Symfony\Component\CssSelector\CssSelectorConverter;
 
 /**
@@ -66,6 +67,7 @@ abstract class BrowserTestBase extends TestCase {
   use XdebugRequestTrait;
   use PhpUnitWarnings;
   use PhpUnitCompatibilityTrait;
+  use ExpectDeprecationTrait;
 
   /**
    * The database prefix of this test run.
diff --git a/core/tests/Drupal/Tests/Component/EventDispatcher/ContainerAwareEventDispatcherTest.php b/core/tests/Drupal/Tests/Component/EventDispatcher/ContainerAwareEventDispatcherTest.php
index 31fb5a5f8f..2ace4fdb58 100644
--- a/core/tests/Drupal/Tests/Component/EventDispatcher/ContainerAwareEventDispatcherTest.php
+++ b/core/tests/Drupal/Tests/Component/EventDispatcher/ContainerAwareEventDispatcherTest.php
@@ -11,6 +11,7 @@
 use Symfony\Component\EventDispatcher\Event as SymfonyEvent;
 use Symfony\Component\EventDispatcher\GenericEvent;
 use Drupal\Component\EventDispatcher\Event;
+use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 /**
  * Unit tests for the ContainerAwareEventDispatcher.
@@ -25,6 +26,8 @@
  */
 class ContainerAwareEventDispatcherTest extends TestCase {
 
+  use ExpectDeprecationTrait;
+
   /* Some pseudo events */
   const PREFOO = 'pre.foo';
   const POSTFOO = 'post.foo';
@@ -146,9 +149,9 @@ public function testGetListenersWithServices() {
    * Tests argument order deprecation.
    *
    * @group legacy
-   * @expectedDeprecation Calling the Symfony\Component\EventDispatcher\EventDispatcherInterface::dispatch() method with a string event name as the first argument is deprecated in drupal:9.1.0, an Event object will be required instead in drupal:10.0.0. See https://www.drupal.org/node/3154407
    */
   public function testDispatchArgumentOrderDeprecation() {
+    $this->expectDeprecation('Calling the Symfony\Component\EventDispatcher\EventDispatcherInterface::dispatch() method with a string event name as the first argument is deprecated in drupal:9.1.0, an Event object will be required instead in drupal:10.0.0. See https://www.drupal.org/node/3154407');
     $container = new ContainerBuilder();
     $dispatcher = new ContainerAwareEventDispatcher($container, []);
     $dispatcher->dispatch('foo');
@@ -158,9 +161,9 @@ public function testDispatchArgumentOrderDeprecation() {
    * Tests deprecation notice for Symfony Event class.
    *
    * @group legacy
-   * @expectedDeprecation Symfony\Component\EventDispatcher\Event is deprecated in drupal:9.1.0 and will be replaced by Symfony\Contracts\EventDispatcher\Event in drupal:10.0.0. A new Drupal\Component\EventDispatcher\Event class is available to bridge the two versions of the class. See https://www.drupal.org/node/3159012
    */
   public function testSymfonyEventDeprecation() {
+    $this->expectDeprecation('Symfony\Component\EventDispatcher\Event is deprecated in drupal:9.1.0 and will be replaced by Symfony\Contracts\EventDispatcher\Event in drupal:10.0.0. A new Drupal\Component\EventDispatcher\Event class is available to bridge the two versions of the class. See https://www.drupal.org/node/3159012');
     $container = new ContainerBuilder();
     $dispatcher = new ContainerAwareEventDispatcher($container, []);
     $dispatcher->dispatch(new SymfonyEvent());
@@ -179,9 +182,9 @@ public function testSymfonyEventDispatching() {
    * Tests deprecation notice for Symfony Event class inheritance.
    *
    * @group legacy
-   * @expectedDeprecation Symfony\Component\EventDispatcher\Event is deprecated in drupal:9.1.0 and will be replaced by Symfony\Contracts\EventDispatcher\Event in drupal:10.0.0. A new Drupal\Component\EventDispatcher\Event class is available to bridge the two versions of the class. See https://www.drupal.org/node/3159012
    */
   public function testSymfonyInheritedEventDeprecation() {
+    $this->expectDeprecation('Symfony\Component\EventDispatcher\Event is deprecated in drupal:9.1.0 and will be replaced by Symfony\Contracts\EventDispatcher\Event in drupal:10.0.0. A new Drupal\Component\EventDispatcher\Event class is available to bridge the two versions of the class. See https://www.drupal.org/node/3159012');
     $container = new ContainerBuilder();
     $dispatcher = new ContainerAwareEventDispatcher($container, []);
     $dispatcher->dispatch(new SymfonyInheritedEvent());
diff --git a/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php b/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php
index f1479c8c18..fc285287e1 100644
--- a/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php
+++ b/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php
@@ -4,6 +4,7 @@
 
 use Drupal\Component\Render\FormattableMarkup;
 use PHPUnit\Framework\TestCase;
+use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 /**
  * Tests the TranslatableMarkup class.
@@ -13,6 +14,8 @@
  */
 class FormattableMarkupTest extends TestCase {
 
+  use ExpectDeprecationTrait;
+
   /**
    * The error message of the last error in the error handler.
    *
@@ -100,10 +103,10 @@ public function providerTestUnexpectedPlaceholder() {
   }
 
   /**
-   * @expectedDeprecation Support for keys without a placeholder prefix is deprecated in Drupal 9.1.0 and will be removed in Drupal 10.0.0. Invalid placeholder (foo) with string: "No replacements"
    * @group legacy
    */
   public function testNoReplacementUnsupportedVariable() {
+    $this->expectDeprecation('Support for keys without a placeholder prefix is deprecated in Drupal 9.1.0 and will be removed in Drupal 10.0.0. Invalid placeholder (foo) with string: "No replacements"');
     $markup = new FormattableMarkup('No replacements', ['foo' => 'bar']);
     // Cast it to a string which will generate the deprecation notice.
     $output = (string) $markup;
diff --git a/core/tests/Drupal/Tests/Component/Utility/BytesTest.php b/core/tests/Drupal/Tests/Component/Utility/BytesTest.php
index 626fdd6aa2..fac651e91c 100644
--- a/core/tests/Drupal/Tests/Component/Utility/BytesTest.php
+++ b/core/tests/Drupal/Tests/Component/Utility/BytesTest.php
@@ -4,6 +4,7 @@
 
 use Drupal\Component\Utility\Bytes;
 use PHPUnit\Framework\TestCase;
+use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 // cspell:ignore zettabytes
 
@@ -16,6 +17,8 @@
  */
 class BytesTest extends TestCase {
 
+  use ExpectDeprecationTrait;
+
   /**
    * Tests \Drupal\Component\Utility\Bytes::toInt().
    *
@@ -30,9 +33,9 @@ class BytesTest extends TestCase {
    * @covers ::toInt
    *
    * @group legacy
-   * @expectedDeprecation \Drupal\Component\Utility\Bytes::toInt() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\Component\Utility\Bytes::toNumber() instead. See https://www.drupal.org/node/3162663
    */
   public function testToInt($size, $expected_int) {
+    $this->expectDeprecation('\Drupal\Component\Utility\Bytes::toInt() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Drupal\Component\Utility\Bytes::toNumber() instead. See https://www.drupal.org/node/3162663');
     $this->assertEquals($expected_int, Bytes::toInt($size));
   }
 
diff --git a/core/tests/Drupal/Tests/Core/Assert/AssertLegacyTraitTest.php b/core/tests/Drupal/Tests/Core/Assert/AssertLegacyTraitTest.php
index 9be0f386b2..66917051ca 100644
--- a/core/tests/Drupal/Tests/Core/Assert/AssertLegacyTraitTest.php
+++ b/core/tests/Drupal/Tests/Core/Assert/AssertLegacyTraitTest.php
@@ -56,45 +56,45 @@ public function setUp(): void {
 
   /**
    * @covers ::assertTextHelper
-   * @expectedDeprecation AssertLegacyTrait::assertTextHelper() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->pageTextContains() or $this->assertSession()->pageTextNotContains() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertTextHelper() {
+    $this->expectDeprecation('AssertLegacyTrait::assertTextHelper() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->pageTextContains() or $this->assertSession()->pageTextNotContains() instead. See https://www.drupal.org/node/3129738');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->assertTextHelper('foo', FALSE);
   }
 
   /**
    * @covers ::assertRaw
-   * @expectedDeprecation Calling AssertLegacyTrait::assertRaw() with more that one argument is deprecated in drupal:8.2.0 and the method is removed from drupal:10.0.0. Use $this->assertSession()->responseContains() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertRaw() {
+    $this->expectDeprecation('Calling AssertLegacyTrait::assertRaw() with more that one argument is deprecated in drupal:8.2.0 and the method is removed from drupal:10.0.0. Use $this->assertSession()->responseContains() instead. See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->assertRaw('foo', '\'foo\' should be present.');
   }
 
   /**
    * @covers ::assertNoRaw
-   * @expectedDeprecation Calling AssertLegacyTrait::assertNoRaw() with more that one argument is deprecated in drupal:8.2.0 and the method is removed from drupal:10.0.0. Use $this->assertSession()->responseNotContains() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertNoRaw() {
+    $this->expectDeprecation('Calling AssertLegacyTrait::assertNoRaw() with more that one argument is deprecated in drupal:8.2.0 and the method is removed from drupal:10.0.0. Use $this->assertSession()->responseNotContains() instead. See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->assertNoRaw('qux', '\'qux\' should not be present.');
   }
 
   /**
    * @covers ::assertUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertUniqueText() {
+    $this->expectDeprecation('AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->assertUniqueText('foo');
   }
 
   /**
    * @covers ::assertUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertUniqueTextFail() {
+    $this->expectDeprecation('AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->expectException(ExpectationFailedException::class);
     $this->assertUniqueText('bar');
@@ -102,9 +102,9 @@ public function testAssertUniqueTextFail() {
 
   /**
    * @covers ::assertUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertUniqueTextUnknown() {
+    $this->expectDeprecation('AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->expectException(ExpectationFailedException::class);
     $this->assertUniqueText('alice');
@@ -112,9 +112,9 @@ public function testAssertUniqueTextUnknown() {
 
   /**
    * @covers ::assertUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertUniqueTextMarkup() {
+    $this->expectDeprecation('AssertLegacyTrait::assertUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->getSession()->pageTextContainsOnce() or $this->getSession()->pageTextMatchesCount() instead. See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $markupObject = $this->prophesize(MarkupInterface::class);
     $markupObject->__toString()->willReturn('foo');
@@ -123,18 +123,18 @@ public function testAssertUniqueTextMarkup() {
 
   /**
    * @covers ::assertNoUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738
    */
   public function testAssertNoUniqueText() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->assertNoUniqueText('bar');
   }
 
   /**
    * @covers ::assertNoUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738
    */
   public function testAssertNoUniqueTextFail() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->expectException(ExpectationFailedException::class);
     $this->assertNoUniqueText('foo');
@@ -142,9 +142,9 @@ public function testAssertNoUniqueTextFail() {
 
   /**
    * @covers ::assertNoUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738
    */
   public function testAssertNoUniqueTextUnknown() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $this->expectException(ExpectationFailedException::class);
     $this->assertNoUniqueText('alice');
@@ -152,9 +152,9 @@ public function testAssertNoUniqueTextUnknown() {
 
   /**
    * @covers ::assertNoUniqueText
-   * @expectedDeprecation AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738
    */
   public function testAssertNoUniqueTextMarkup() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoUniqueText() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Instead, use $this->getSession()->pageTextMatchesCount() if you know the cardinality in advance, or $this->getSession()->getPage()->getText() and substr_count(). See https://www.drupal.org/node/3129738');
     $this->page->getText()->willReturn('foo bar bar');
     $markupObject = $this->prophesize(MarkupInterface::class);
     $markupObject->__toString()->willReturn('bar');
@@ -163,9 +163,9 @@ public function testAssertNoUniqueTextMarkup() {
 
   /**
    * @covers ::assertOptionSelected
-   * @expectedDeprecation AssertLegacyTrait::assertOptionSelected() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead and check the "selected" attribute. See https://www.drupal.org/node/3129738
    */
   public function testAssertOptionSelected() {
+    $this->expectDeprecation('AssertLegacyTrait::assertOptionSelected() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead and check the "selected" attribute. See https://www.drupal.org/node/3129738');
     $option_field = $this->prophesize(NodeElement::class);
     $option_field->hasAttribute('selected')->willReturn(TRUE);
 
@@ -178,9 +178,9 @@ public function testAssertOptionSelected() {
 
   /**
    * @covers ::assertOptionSelected
-   * @expectedDeprecation AssertLegacyTrait::assertOptionSelected() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead and check the "selected" attribute. See https://www.drupal.org/node/3129738
    */
   public function testAssertOptionSelectedFail() {
+    $this->expectDeprecation('AssertLegacyTrait::assertOptionSelected() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->optionExists() instead and check the "selected" attribute. See https://www.drupal.org/node/3129738');
     $option_field = $this->prophesize(NodeElement::class);
     $option_field->hasAttribute('selected')->willReturn(FALSE);
 
@@ -194,9 +194,9 @@ public function testAssertOptionSelectedFail() {
 
   /**
    * @covers ::assertNoPattern
-   * @expectedDeprecation AssertLegacyTrait::assertNoPattern() is deprecated in drupal:8.4.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseNotMatches() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertNoPattern() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoPattern() is deprecated in drupal:8.4.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseNotMatches() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->responseNotMatches('/.*foo$/')
       ->shouldBeCalled();
@@ -206,9 +206,9 @@ public function testAssertNoPattern() {
 
   /**
    * @covers ::assertCacheTag
-   * @expectedDeprecation AssertLegacyTrait::assertCacheTag() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseHeaderContains() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertCacheTag() {
+    $this->expectDeprecation('AssertLegacyTrait::assertCacheTag() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseHeaderContains() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->responseHeaderContains('X-Drupal-Cache-Tags', 'some-cache-tag')
       ->shouldBeCalled();
@@ -218,9 +218,9 @@ public function testAssertCacheTag() {
 
   /**
    * @covers ::assertNoCacheTag
-   * @expectedDeprecation AssertLegacyTrait::assertNoCacheTag() is deprecated in drupal:8.4.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseHeaderNotContains() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertNoCacheTag() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoCacheTag() is deprecated in drupal:8.4.0 and is removed from drupal:10.0.0. Use $this->assertSession()->responseHeaderNotContains() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->responseHeaderNotContains('X-Drupal-Cache-Tags', 'some-cache-tag')
       ->shouldBeCalled();
@@ -230,10 +230,10 @@ public function testAssertNoCacheTag() {
 
   /**
    * @covers ::assertUrl
-   * @expectedDeprecation AssertLegacyTrait::assertUrl() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->addressEquals() instead. See https://www.drupal.org/node/3129738
-   * @expectedDeprecation Calling AssertLegacyTrait::assertUrl() with more than one argument is deprecated in drupal:8.2.0 and the method is removed from drupal:10.0.0. Use $this->assertSession()->addressEquals() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertUrl() {
+    $this->expectDeprecation('AssertLegacyTrait::assertUrl() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->addressEquals() instead. See https://www.drupal.org/node/3129738');
+    $this->expectDeprecation('Calling AssertLegacyTrait::assertUrl() with more than one argument is deprecated in drupal:8.2.0 and the method is removed from drupal:10.0.0. Use $this->assertSession()->addressEquals() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->addressEquals('bingo')
       ->shouldBeCalled();
@@ -243,9 +243,9 @@ public function testAssertUrl() {
 
   /**
    * @covers ::assertElementPresent
-   * @expectedDeprecation AssertLegacyTrait::assertElementPresent() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->elementExists() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertElementPresent() {
+    $this->expectDeprecation('AssertLegacyTrait::assertElementPresent() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->elementExists() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->elementExists('css', '.pager')
       ->shouldBeCalled();
@@ -255,9 +255,9 @@ public function testAssertElementPresent() {
 
   /**
    * @covers ::assertElementNotPresent
-   * @expectedDeprecation AssertLegacyTrait::assertElementNotPresent() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->elementNotExists() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertElementNotPresent() {
+    $this->expectDeprecation('AssertLegacyTrait::assertElementNotPresent() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->elementNotExists() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->elementNotExists('css', '.pager')
       ->shouldBeCalled();
@@ -267,17 +267,17 @@ public function testAssertElementNotPresent() {
 
   /**
    * @covers ::pass
-   * @expectedDeprecation AssertLegacyTrait::pass() is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. PHPUnit interrupts a test as soon as a test assertion fails, so there is usually no need to call this method. If a test's logic relies on this method, refactor the test. See https://www.drupal.org/node/3129738
    */
   public function testPass() {
+    $this->expectDeprecation('AssertLegacyTrait::pass() is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. PHPUnit interrupts a test as soon as a test assertion fails, so there is usually no need to call this method. If a test\'s logic relies on this method, refactor the test. See https://www.drupal.org/node/3129738');
     $this->pass('Passed.');
   }
 
   /**
    * @covers ::assertLinkByHref
-   * @expectedDeprecation AssertLegacyTrait::assertLinkByHref() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->linkByHrefExists() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertLinkByHref() {
+    $this->expectDeprecation('AssertLegacyTrait::assertLinkByHref() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->linkByHrefExists() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->linkByHrefExists('boo', 0)
       ->shouldBeCalled();
@@ -287,9 +287,9 @@ public function testAssertLinkByHref() {
 
   /**
    * @covers ::assertNoLinkByHref
-   * @expectedDeprecation AssertLegacyTrait::assertNoLinkByHref() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->linkByHrefNotExists() instead. See https://www.drupal.org/node/3129738
    */
   public function testAssertNoLinkByHref() {
+    $this->expectDeprecation('AssertLegacyTrait::assertNoLinkByHref() is deprecated in drupal:8.2.0 and is removed from drupal:10.0.0. Use $this->assertSession()->linkByHrefNotExists() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->linkByHrefNotExists('boo')
       ->shouldBeCalled();
@@ -299,9 +299,9 @@ public function testAssertNoLinkByHref() {
 
   /**
    * @covers ::constructFieldXpath
-   * @expectedDeprecation AssertLegacyTrait::constructFieldXpath() is deprecated in drupal:8.5.0 and is removed from drupal:10.0.0. Use $this->getSession()->getPage()->findField() instead. See https://www.drupal.org/node/3129738
    */
   public function testConstructFieldXpath() {
+    $this->expectDeprecation('AssertLegacyTrait::constructFieldXpath() is deprecated in drupal:8.5.0 and is removed from drupal:10.0.0. Use $this->getSession()->getPage()->findField() instead. See https://www.drupal.org/node/3129738');
     $this->webAssert
       ->buildXPathQuery(Argument::any(), Argument::any())
       ->willReturn('qux');
diff --git a/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php b/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php
index 8149b0a9ee..bb5de5fc43 100644
--- a/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php
+++ b/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php
@@ -57,36 +57,36 @@ public function setUp(): void {
 
   /**
    * @covers ::buttonExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::buttonExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testButtonExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::buttonExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->findButton(Argument::any())->willReturn('bar');
     $this->webAssert->buttonExists('foo', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::buttonNotExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::buttonNotExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testButtonNotExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::buttonNotExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->findButton(Argument::any())->willReturn(NULL);
     $this->webAssert->buttonNotExists('qux', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::selectExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::selectExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testSelectExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::selectExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->find(Argument::any(), Argument::any())->willReturn('bar');
     $this->webAssert->selectExists('foo', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::optionExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::optionExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testOptionExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::optionExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $select = $this->prophesize(Element::class);
     $select->find(Argument::any(), Argument::any())->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($select->reveal());
@@ -95,9 +95,9 @@ public function testOptionExists(): void {
 
   /**
    * @covers ::optionNotExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::optionNotExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testOptionNotExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::optionNotExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $select = $this->prophesize(Element::class);
     $select->find(Argument::any(), Argument::any())->willReturn(NULL);
     $this->page->find(Argument::any(), Argument::any())->willReturn($select->reveal());
@@ -106,9 +106,9 @@ public function testOptionNotExists(): void {
 
   /**
    * @covers ::titleEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::titleEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testTitleEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::titleEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $title = $this->prophesize(Element::class);
     $title->getText()->willReturn('foo');
     $this->page->find(Argument::any(), Argument::any())->willReturn($title->reveal());
@@ -117,45 +117,45 @@ public function testTitleEquals(): void {
 
   /**
    * @covers ::assertNoEscaped
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::assertNoEscaped with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testAssertNoEscaped(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::assertNoEscaped with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->webAssert->assertNoEscaped('qux', 'Extra argument');
   }
 
   /**
    * @covers ::assertEscaped
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::assertEscaped with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testAssertEscaped(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::assertEscaped with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->webAssert->assertEscaped('foo', 'Extra argument');
   }
 
   /**
    * @covers ::responseContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->webAssert->responseContains('foo', 'Extra argument');
   }
 
   /**
    * @covers ::responseNotContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseNotContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseNotContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseNotContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->webAssert->responseNotContains('qux', 'Extra argument');
   }
 
   /**
    * @covers ::fieldDisabled
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::fieldDisabled with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testFieldDisabled(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::fieldDisabled with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->hasAttribute('disabled')->willReturn(TRUE);
     $this->page->findField(Argument::any())->willReturn($field->reveal());
@@ -164,9 +164,9 @@ public function testFieldDisabled(): void {
 
   /**
    * @covers ::fieldEnabled
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::fieldEnabled with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testFieldEnabled(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::fieldEnabled with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->hasAttribute('disabled')->willReturn(FALSE);
     $this->page->findField(Argument::any())->willReturn($field->reveal());
@@ -175,27 +175,27 @@ public function testFieldEnabled(): void {
 
   /**
    * @covers ::hiddenFieldExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::hiddenFieldExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testHiddenFieldExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::hiddenFieldExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->find(Argument::any(), Argument::any())->willReturn('bar');
     $this->webAssert->hiddenFieldExists('foo', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::hiddenFieldNotExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::hiddenFieldNotExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testHiddenFieldNotExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::hiddenFieldNotExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->find(Argument::any(), Argument::any())->willReturn(NULL);
     $this->webAssert->hiddenFieldNotExists('qux', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::hiddenFieldValueEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::hiddenFieldValueEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testHiddenFieldValueEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::hiddenFieldValueEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->getValue()->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($field->reveal());
@@ -204,9 +204,9 @@ public function testHiddenFieldValueEquals(): void {
 
   /**
    * @covers ::hiddenFieldValueNotEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::hiddenFieldValueNotEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testHiddenFieldValueNotEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::hiddenFieldValueNotEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->getValue()->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($field->reveal());
@@ -215,216 +215,216 @@ public function testHiddenFieldValueNotEquals(): void {
 
   /**
    * @covers ::pageTextContainsOnce
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::pageTextContainsOnce with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testPageTextContainsOnce(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextContainsOnce with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getText()->willReturn('foo bar bar');
     $this->webAssert->pageTextContainsOnce('foo', 'Extra argument');
   }
 
   /**
    * @covers ::addressEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::addressEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testAddressEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::addressEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getCurrentUrl()->willReturn('foo');
     $this->webAssert->addressEquals('foo', 'Extra argument');
   }
 
   /**
    * @covers ::addressNotEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::addressNotEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testAddressNotEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::addressNotEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getCurrentUrl()->willReturn('foo');
     $this->webAssert->addressNotEquals('qux', 'Extra argument');
   }
 
   /**
    * @covers ::addressMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::addressMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testAddressMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::addressMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getCurrentUrl()->willReturn('foo');
     $this->webAssert->addressMatches('/foo/', 'Extra argument');
   }
 
   /**
    * @covers ::cookieEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::cookieEquals with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testCookieEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::cookieEquals with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getCookie('foo')->willReturn('bar');
     $this->webAssert->cookieEquals('foo', 'bar', 'Extra argument');
   }
 
   /**
    * @covers ::cookieExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::cookieExists with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testCookieExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::cookieExists with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getCookie('foo')->willReturn('bar');
     $this->webAssert->cookieExists('foo', 'Extra argument');
   }
 
   /**
    * @covers ::statusCodeEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::statusCodeEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testStatusCodeEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::statusCodeEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getStatusCode()->willReturn(200);
     $this->webAssert->statusCodeEquals(200, 'Extra argument');
   }
 
   /**
    * @covers ::statusCodeNotEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::statusCodeNotEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testStatusCodeNotEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::statusCodeNotEquals with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getStatusCode()->willReturn(200);
     $this->webAssert->statusCodeNotEquals(403, 'Extra argument');
   }
 
   /**
    * @covers ::responseHeaderEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseHeaderEquals with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseHeaderEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseHeaderEquals with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getResponseHeader('foo')->willReturn('bar');
     $this->webAssert->responseHeaderEquals('foo', 'bar', 'Extra argument');
   }
 
   /**
    * @covers ::responseHeaderNotEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseHeaderNotEquals with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseHeaderNotEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseHeaderNotEquals with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getResponseHeader('foo')->willReturn('bar');
     $this->webAssert->responseHeaderNotEquals('foo', 'qux', 'Extra argument');
   }
 
   /**
    * @covers ::responseHeaderContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseHeaderContains with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseHeaderContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseHeaderContains with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getResponseHeader('foo')->willReturn('bar');
     $this->webAssert->responseHeaderContains('foo', 'ar', 'Extra argument');
   }
 
   /**
    * @covers ::responseHeaderNotContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseHeaderNotContains with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseHeaderNotContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseHeaderNotContains with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getResponseHeader('foo')->willReturn('bar');
     $this->webAssert->responseHeaderNotContains('foo', 'qu', 'Extra argument');
   }
 
   /**
    * @covers ::responseHeaderMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseHeaderMatches with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseHeaderMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseHeaderMatches with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getResponseHeader('foo')->willReturn('bar');
     $this->webAssert->responseHeaderMatches('foo', '/bar/', 'Extra argument');
   }
 
   /**
    * @covers ::responseHeaderNotMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseHeaderNotMatches with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseHeaderNotMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseHeaderNotMatches with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->session->getResponseHeader('foo')->willReturn('bar');
     $this->webAssert->responseHeaderNotMatches('foo', '/qux/', 'Extra argument');
   }
 
   /**
    * @covers ::pageTextContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::pageTextContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testPageTextContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getText()->willReturn('foo bar bar');
     $this->webAssert->pageTextContains('foo', 'Extra argument');
   }
 
   /**
    * @covers ::pageTextNotContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::pageTextNotContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testPageTextNotContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextNotContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getText()->willReturn('foo bar bar');
     $this->webAssert->pageTextNotContains('qux', 'Extra argument');
   }
 
   /**
    * @covers ::pageTextMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::pageTextMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testPageTextMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getText()->willReturn('foo bar bar');
     $this->webAssert->pageTextMatches('/foo/', 'Extra argument');
   }
 
   /**
    * @covers ::pageTextNotMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::pageTextNotMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testPageTextNotMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextNotMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getText()->willReturn('foo bar bar');
     $this->webAssert->pageTextNotMatches('/qux/', 'Extra argument');
   }
 
   /**
    * @covers ::responseMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->webAssert->responseMatches('/foo/', 'Extra argument');
   }
 
   /**
    * @covers ::responseNotMatches
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::responseNotMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testResponseNotMatches(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::responseNotMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->getContent()->willReturn('foo bar bar');
     $this->webAssert->responseNotMatches('/qux/', 'Extra argument');
   }
 
   /**
    * @covers ::elementsCount
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementsCount with more than four arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementsCount(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementsCount with more than four arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->findAll(Argument::any(), Argument::any())->willReturn(['bar']);
     $this->webAssert->elementsCount('xpath', '//foo', 1, NULL, 'Extra argument');
   }
 
   /**
    * @covers ::elementExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->find(Argument::any(), Argument::any())->willReturn('bar');
     $this->webAssert->elementExists('xpath', '//foo', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::elementNotExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementNotExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementNotExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementNotExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->find(Argument::any(), Argument::any())->willReturn(NULL);
     $this->webAssert->elementNotExists('xpath', '//foo', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::elementTextContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementTextContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementTextContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementTextContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->getText()->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($element->reveal());
@@ -433,9 +433,9 @@ public function testElementTextContains(): void {
 
   /**
    * @covers ::elementTextNotContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementTextNotContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementTextNotContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementTextNotContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->getText()->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($element->reveal());
@@ -444,9 +444,9 @@ public function testElementTextNotContains(): void {
 
   /**
    * @covers ::elementContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->getHtml()->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($element->reveal());
@@ -455,9 +455,9 @@ public function testElementContains(): void {
 
   /**
    * @covers ::elementNotContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementNotContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementNotContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementNotContains with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->getHtml()->willReturn('bar');
     $this->page->find(Argument::any(), Argument::any())->willReturn($element->reveal());
@@ -466,9 +466,9 @@ public function testElementNotContains(): void {
 
   /**
    * @covers ::elementAttributeExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementAttributeExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementAttributeExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementAttributeExists with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->hasAttribute('bar')->willReturn(TRUE);
     $this->page->find(Argument::any(), Argument::any())->willReturn($element->reveal());
@@ -477,9 +477,9 @@ public function testElementAttributeExists(): void {
 
   /**
    * @covers ::elementAttributeContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementAttributeContains with more than four arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementAttributeContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementAttributeContains with more than four arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->hasAttribute('bar')->willReturn(TRUE);
     $element->getAttribute('bar')->willReturn('baz');
@@ -489,9 +489,9 @@ public function testElementAttributeContains(): void {
 
   /**
    * @covers ::elementAttributeNotContains
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::elementAttributeNotContains with more than four arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testElementAttributeNotContains(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::elementAttributeNotContains with more than four arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $element = $this->prophesize(NodeElement::class);
     $element->hasAttribute('bar')->willReturn(TRUE);
     $element->getAttribute('bar')->willReturn('baz');
@@ -501,27 +501,27 @@ public function testElementAttributeNotContains(): void {
 
   /**
    * @covers ::fieldExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::fieldExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testFieldExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::fieldExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->findField(Argument::any())->willReturn('bar');
     $this->webAssert->fieldExists('foo', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::fieldNotExists
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::fieldNotExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testFieldNotExists(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::fieldNotExists with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $this->page->findField(Argument::any())->willReturn();
     $this->webAssert->fieldNotExists('qux', NULL, 'Extra argument');
   }
 
   /**
    * @covers ::fieldValueEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::fieldValueEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testFieldValueEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::fieldValueEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->getValue()->willReturn('bar');
     $this->page->findField(Argument::any())->willReturn($field->reveal());
@@ -530,9 +530,9 @@ public function testFieldValueEquals(): void {
 
   /**
    * @covers ::fieldValueNotEquals
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::fieldValueNotEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testFieldValueNotEquals(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::fieldValueNotEquals with more than three arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->getValue()->willReturn('bar');
     $this->page->findField(Argument::any())->willReturn($field->reveal());
@@ -541,9 +541,9 @@ public function testFieldValueNotEquals(): void {
 
   /**
    * @covers ::checkboxChecked
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::checkboxChecked with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testCheckboxChecked(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::checkboxChecked with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->isChecked()->willReturn(TRUE);
     $this->page->findField(Argument::any())->willReturn($field->reveal());
@@ -552,9 +552,9 @@ public function testCheckboxChecked(): void {
 
   /**
    * @covers ::checkboxNotChecked
-   * @expectedDeprecation Calling Drupal\Tests\WebAssert::checkboxNotChecked with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537
    */
   public function testCheckboxNotChecked(): void {
+    $this->expectDeprecation('Calling Drupal\Tests\WebAssert::checkboxNotChecked with more than two arguments is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
     $field = $this->prophesize(NodeElement::class);
     $field->isChecked()->willReturn(FALSE);
     $this->page->findField(Argument::any())->willReturn($field->reveal());
diff --git a/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryCollectorTest.php b/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryCollectorTest.php
index 972de51d3b..f83b1499f0 100644
--- a/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryCollectorTest.php
+++ b/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryCollectorTest.php
@@ -216,10 +216,9 @@ public function testLibrariesExtend() {
    * @covers ::applyLibrariesExtend
    *
    * @group legacy
-   *
-   * @expectedDeprecation Theme "test" is extending a deprecated library. The "test/test_4" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use the test_3 library instead. See https://www.example.com
    */
   public function testLibrariesExtendDeprecated() {
+    $this->expectDeprecation('Theme "test" is extending a deprecated library. The "test/test_4" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use the test_3 library instead. See https://www.example.com');
     $this->activeTheme = $this->getMockBuilder(ActiveTheme::class)
       ->disableOriginalConstructor()
       ->getMock();
diff --git a/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php b/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php
index 99a930b5ee..fc5d60b12e 100644
--- a/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php
+++ b/core/tests/Drupal/Tests/Core/Asset/LibraryDiscoveryParserTest.php
@@ -607,10 +607,9 @@ public function testLibraryOverride() {
    * @covers ::applyLibrariesOverride
    *
    * @group legacy
-   *
-   * @expectedDeprecation Theme "deprecated" is overriding a deprecated library. The "deprecated/deprecated" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com
    */
   public function testLibraryOverrideDeprecated() {
+    $this->expectDeprecation('Theme "deprecated" is overriding a deprecated library. The "deprecated/deprecated" asset library is deprecated in drupal:X.0.0 and is removed from drupal:Y.0.0. Use another library instead. See https://www.example.com');
     $mock_theme_path = 'mocked_themes/kittens';
     $this->themeManager = $this->createMock(ThemeManagerInterface::class);
     $this->activeTheme = $this->getMockBuilder(ActiveTheme::class)
diff --git a/core/tests/Drupal/Tests/Core/Database/ConditionTest.php b/core/tests/Drupal/Tests/Core/Database/ConditionTest.php
index 1306e9e9bb..614a501d1c 100644
--- a/core/tests/Drupal/Tests/Core/Database/ConditionTest.php
+++ b/core/tests/Drupal/Tests/Core/Database/ConditionTest.php
@@ -208,9 +208,9 @@ class_alias('MockCondition', $mocked_namespace);
    * Tests the deprecation of the class Condition.
    *
    * @group legacy
-   * @expectedDeprecation Creating an instance of this class is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. Use Database::getConnection()->condition() instead. See https://www.drupal.org/node/3159568
    */
   public function testConditionClassDeprecation() {
+    $this->expectDeprecation('Creating an instance of this class is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. Use Database::getConnection()->condition() instead. See https://www.drupal.org/node/3159568');
     $condition = new Condition('OR');
     $this->assertSame('Drupal\Core\Database\Query\Condition', get_class($condition));
   }
diff --git a/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php b/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php
index c5cdabdf12..c4e4a1c268 100644
--- a/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php
+++ b/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php
@@ -323,9 +323,9 @@ public function testSchema($expected, $driver, $namespace) {
    * Test Connection::destroy().
    *
    * @group legacy
-   * @expectedDeprecation Drupal\Core\Database\Connection::destroy() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Move custom database destruction logic to __destruct(). See https://www.drupal.org/node/3142866
    */
   public function testDestroy() {
+    $this->expectDeprecation('Drupal\Core\Database\Connection::destroy() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Move custom database destruction logic to __destruct(). See https://www.drupal.org/node/3142866');
     $mock_pdo = $this->createMock('Drupal\Tests\Core\Database\Stub\StubPDO');
     // Mocking StubConnection gives us access to the $schema attribute.
     $connection = new StubConnection($mock_pdo, ['namespace' => 'Drupal\\Tests\\Core\\Database\\Stub\\Driver']);
@@ -345,9 +345,9 @@ public function testDestroy() {
    * Test Connection::__destruct().
    *
    * @group legacy
-   * @expectedDeprecation Drupal\Core\Database\Connection::destroy() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Move custom database destruction logic to __destruct(). See https://www.drupal.org/node/3142866
    */
   public function testDestructBcLayer() {
+    $this->expectDeprecation('Drupal\Core\Database\Connection::destroy() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Move custom database destruction logic to __destruct(). See https://www.drupal.org/node/3142866');
     $mock_pdo = $this->createMock(StubPDO::class);
     $fake_connection = new class($mock_pdo, ['namespace' => Driver::class]) extends StubConnection {
 
@@ -567,10 +567,10 @@ public function testEscapeDatabase($expected, $name, array $identifier_quote = [
 
   /**
    * @covers ::__construct
-   * @expectedDeprecation In drupal:10.0.0 not setting the $identifierQuotes property in the concrete Connection class will result in an RuntimeException. See https://www.drupal.org/node/2986894
    * @group legacy
    */
   public function testIdentifierQuotesDeprecation() {
+    $this->expectDeprecation('In drupal:10.0.0 not setting the $identifierQuotes property in the concrete Connection class will result in an RuntimeException. See https://www.drupal.org/node/2986894');
     $mock_pdo = $this->createMock(StubPDO::class);
     new StubConnection($mock_pdo, [], NULL);
   }
@@ -675,9 +675,9 @@ public function provideQueriesToTrim() {
    * Tests the deprecation of Drupal 8 style database drivers.
    *
    * @group legacy
-   * @expectedDeprecation Support for database drivers located in the "drivers/lib/Drupal/Driver/Database" directory is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. Contributed and custom database drivers should be provided by modules and use the namespace "Drupal\MODULE_NAME\Driver\Database\DRIVER_NAME". See https://www.drupal.org/node/3123251
    */
   public function testLegacyDatabaseDriverInRootDriversDirectory() {
+    $this->expectDeprecation('Support for database drivers located in the "drivers/lib/Drupal/Driver/Database" directory is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. Contributed and custom database drivers should be provided by modules and use the namespace "Drupal\MODULE_NAME\Driver\Database\DRIVER_NAME". See https://www.drupal.org/node/3123251');
     $namespace = 'Drupal\\Driver\\Database\\Stub';
     $mock_pdo = $this->createMock(StubPDO::class);
     $connection = new StubConnection($mock_pdo, ['namespace' => $namespace], ['"', '"']);
diff --git a/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php b/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php
index 6526135f89..6d8cd07de9 100644
--- a/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php
+++ b/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php
@@ -25,10 +25,9 @@ protected function buildContainer($environment = 'dev') {
 
   /**
    * Tests backwards compatibility shim for MimeTypeGuesser interface changes.
-   *
-   * @expectedDeprecation The "Drupal\Tests\Core\DependencyInjection\Compiler\LegacyMimeTypeGuesser" class implements "Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface" that is deprecated since Symfony 4.3, use {@link MimeTypesInterface} instead.
    */
   public function testProcessLegacy() {
+    $this->expectDeprecation('The "Drupal\Tests\Core\DependencyInjection\Compiler\LegacyMimeTypeGuesser" class implements "Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface" that is deprecated since Symfony 4.3, use {@link MimeTypesInterface} instead.');
     $container = $this->buildContainer();
     $container
       ->register('file.mime_type.guesser', MimeTypeGuesser::class);
diff --git a/core/tests/Drupal/Tests/Core/Entity/EntityTypeTest.php b/core/tests/Drupal/Tests/Core/Entity/EntityTypeTest.php
index 2125210427..77f3f753e7 100644
--- a/core/tests/Drupal/Tests/Core/Entity/EntityTypeTest.php
+++ b/core/tests/Drupal/Tests/Core/Entity/EntityTypeTest.php
@@ -501,9 +501,9 @@ public function testEntityClassImplements() {
   /**
    * @covers ::isSubclassOf
    * @group legacy
-   * @expectedDeprecation Drupal\Core\Entity\EntityType::isSubclassOf() is deprecated in drupal:8.3.0 and is removed from drupal:10.0.0. Use Drupal\Core\Entity\EntityTypeInterface::entityClassImplements() instead. See https://www.drupal.org/node/2842808
    */
   public function testIsSubClassOf() {
+    $this->expectDeprecation('Drupal\Core\Entity\EntityType::isSubclassOf() is deprecated in drupal:8.3.0 and is removed from drupal:10.0.0. Use Drupal\Core\Entity\EntityTypeInterface::entityClassImplements() instead. See https://www.drupal.org/node/2842808');
     $entity_type = $this->setUpEntityType(['class' => EntityFormMode::class]);
     $this->assertTrue($entity_type->isSubclassOf(ConfigEntityInterface::class));
     $this->assertFalse($entity_type->isSubclassOf(\DateTimeInterface::class));
diff --git a/core/tests/Drupal/Tests/Core/Routing/CompiledRouteLegacyTest.php b/core/tests/Drupal/Tests/Core/Routing/CompiledRouteLegacyTest.php
index 51807014c5..5a11bbccdb 100644
--- a/core/tests/Drupal/Tests/Core/Routing/CompiledRouteLegacyTest.php
+++ b/core/tests/Drupal/Tests/Core/Routing/CompiledRouteLegacyTest.php
@@ -53,9 +53,9 @@ protected function setUp(): void {
    * Tests for deprecated message and no PHP error.
    *
    * @covers ::getOptions
-   * @expectedDeprecation Drupal\Core\Routing\CompiledRoute::getOptions() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706
    */
   public function testOptionsDeprecated() {
+    $this->expectDeprecation('Drupal\Core\Routing\CompiledRoute::getOptions() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706');
     $this->expectNotice();
     $this->expectNoticeMessage('Undefined property: Drupal\Core\Routing\CompiledRoute::$route');
     $this->compiled_route->getOptions();
@@ -65,9 +65,9 @@ public function testOptionsDeprecated() {
    * Tests to make sure we get an array when dynamically setting.
    *
    * @covers ::getOptions
-   * @expectedDeprecation Drupal\Core\Routing\CompiledRoute::getOptions() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706
    */
   public function testOptionsDynamicallySet() {
+    $this->expectDeprecation('Drupal\Core\Routing\CompiledRoute::getOptions() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706');
     $this->compiled_route->route = $this->mocked_route;
     $this->compiled_route->getOptions();
   }
@@ -76,9 +76,9 @@ public function testOptionsDynamicallySet() {
    * Tests for deprecated message and no PHP error.
    *
    * @covers ::getDefaults
-   * @expectedDeprecation Drupal\Core\Routing\CompiledRoute::getDefaults() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706
    */
   public function testDefaultsDeprecated() {
+    $this->expectDeprecation('Drupal\Core\Routing\CompiledRoute::getDefaults() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706');
     $this->expectNotice();
     $this->expectNoticeMessage('Undefined property: Drupal\Core\Routing\CompiledRoute::$route');
     $this->compiled_route->getDefaults();
@@ -88,18 +88,18 @@ public function testDefaultsDeprecated() {
    * Tests to make sure we get an array when dynamically setting.
    *
    * @covers ::getDefaults
-   * @expectedDeprecation Drupal\Core\Routing\CompiledRoute::getDefaults() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706
    */
   public function testDefaultsDynamicallySet() {
+    $this->expectDeprecation('Drupal\Core\Routing\CompiledRoute::getDefaults() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706');
     $this->compiled_route->route = $this->mocked_route;
     $this->compiled_route->getDefaults();
   }
 
   /**
    * @covers ::getRequirements
-   * @expectedDeprecation Drupal\Core\Routing\CompiledRoute::getRequirements() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706
    */
   public function testRequirementsDeprecated() {
+    $this->expectDeprecation('Drupal\Core\Routing\CompiledRoute::getRequirements() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706');
     $this->expectNotice();
     $this->expectNoticeMessage('Undefined property: Drupal\Core\Routing\CompiledRoute::$route');
     $this->compiled_route->getRequirements();
@@ -109,9 +109,9 @@ public function testRequirementsDeprecated() {
    * Tests to make sure we get an array when dynamically setting.
    *
    * @covers ::getRequirements
-   * @expectedDeprecation Drupal\Core\Routing\CompiledRoute::getRequirements() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706
    */
   public function testRequirementsDynamicallySet() {
+    $this->expectDeprecation('Drupal\Core\Routing\CompiledRoute::getRequirements() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. No direct replacement is provided. See https://www.drupal.org/node/3159706');
     $this->compiled_route->route = $this->mocked_route;
     $this->compiled_route->getRequirements();
   }
diff --git a/core/tests/Drupal/Tests/Core/Routing/RouterLegacyTest.php b/core/tests/Drupal/Tests/Core/Routing/RouterLegacyTest.php
index de2d903224..550866ef84 100644
--- a/core/tests/Drupal/Tests/Core/Routing/RouterLegacyTest.php
+++ b/core/tests/Drupal/Tests/Core/Routing/RouterLegacyTest.php
@@ -18,9 +18,9 @@ class RouterLegacyTest extends UnitTestCase {
 
   /**
    * @covers ::generate
-   * @expectedDeprecation Drupal\Core\Routing\Router::generate() is deprecated in drupal:8.3.0 and will throw an exception from drupal:10.0.0. Use the \Drupal\Core\Url object instead. See https://www.drupal.org/node/2820197
    */
   public function testGenerateDeprecated() {
+    $this->expectDeprecation('Drupal\Core\Routing\Router::generate() is deprecated in drupal:8.3.0 and will throw an exception from drupal:10.0.0. Use the \Drupal\Core\Url object instead. See https://www.drupal.org/node/2820197');
     $route_provider = $this->prophesize(RouteProviderInterface::class);
     $current_path_stack = $this->prophesize(CurrentPathStack::class);
     $url_generator = $this->prophesize(UrlGeneratorInterface::class);
diff --git a/core/tests/Drupal/Tests/Core/Security/DoTrustedCallbackTraitTest.php b/core/tests/Drupal/Tests/Core/Security/DoTrustedCallbackTraitTest.php
index cccc87182a..eaaed89c80 100644
--- a/core/tests/Drupal/Tests/Core/Security/DoTrustedCallbackTraitTest.php
+++ b/core/tests/Drupal/Tests/Core/Security/DoTrustedCallbackTraitTest.php
@@ -77,9 +77,9 @@ public function testException($callback) {
   /**
    * @dataProvider errorTypeProvider
    * @group legacy
-   * @expectedDeprecation Drupal\Tests\Core\Security\UntrustedObject::callback is not trusted
    */
   public function testSilencedDeprecation($callback) {
+    $this->expectDeprecation('Drupal\Tests\Core\Security\UntrustedObject::callback is not trusted');
     $this->doTrustedCallback($callback, [], '%s is not trusted', TrustedCallbackInterface::TRIGGER_SILENCED_DEPRECATION);
   }
 
diff --git a/core/tests/Drupal/Tests/Core/Site/SettingsTest.php b/core/tests/Drupal/Tests/Core/Site/SettingsTest.php
index 230b678993..bad1d17a34 100644
--- a/core/tests/Drupal/Tests/Core/Site/SettingsTest.php
+++ b/core/tests/Drupal/Tests/Core/Site/SettingsTest.php
@@ -5,7 +5,6 @@
 use Drupal\Core\Site\Settings;
 use Drupal\Tests\UnitTestCase;
 use org\bovigo\vfs\vfsStream;
-use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 /**
  * @coversDefaultClass \Drupal\Core\Site\Settings
@@ -14,8 +13,6 @@
  */
 class SettingsTest extends UnitTestCase {
 
-  use ExpectDeprecationTrait;
-
   /**
    * Simple settings array to test against.
    *
diff --git a/core/tests/Drupal/Tests/Core/StringTranslation/TranslationWrapperTest.php b/core/tests/Drupal/Tests/Core/StringTranslation/TranslationWrapperTest.php
index 7d9a575e1e..432778a3b5 100644
--- a/core/tests/Drupal/Tests/Core/StringTranslation/TranslationWrapperTest.php
+++ b/core/tests/Drupal/Tests/Core/StringTranslation/TranslationWrapperTest.php
@@ -17,9 +17,9 @@ class TranslationWrapperTest extends UnitTestCase {
   /**
    * @covers ::__construct
    * @group legacy
-   * @expectedDeprecation Drupal\Core\StringTranslation\TranslationWrapper is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use the \Drupal\Core\StringTranslation\TranslatableMarkup class instead. See https://www.drupal.org/node/2571255
    */
   public function testTranslationWrapper() {
+    $this->expectDeprecation('Drupal\Core\StringTranslation\TranslationWrapper is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use the \Drupal\Core\StringTranslation\TranslatableMarkup class instead. See https://www.drupal.org/node/2571255');
     $object = new TranslationWrapper('Deprecated');
     $this->assertInstanceOf(TranslatableMarkup::class, $object);
   }
diff --git a/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeIsolatedTest.php b/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeIsolatedTest.php
index 28e331af37..edba3f56ba 100644
--- a/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeIsolatedTest.php
+++ b/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeIsolatedTest.php
@@ -16,10 +16,8 @@
  */
 class PhpUnitBridgeIsolatedTest extends UnitTestCase {
 
-  /**
-   * @expectedDeprecation Drupal\deprecation_test\Deprecation\FixtureDeprecatedClass is deprecated.
-   */
   public function testDeprecatedClass() {
+    $this->expectDeprecation('Drupal\deprecation_test\Deprecation\FixtureDeprecatedClass is deprecated.');
     $deprecated = new FixtureDeprecatedClass();
     $this->assertEquals('test', $deprecated->testFunction());
   }
diff --git a/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeTest.php b/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeTest.php
index d001cfb83a..b8fc2823de 100644
--- a/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeTest.php
+++ b/core/tests/Drupal/Tests/Core/Test/PhpUnitBridgeTest.php
@@ -14,9 +14,10 @@
 class PhpUnitBridgeTest extends UnitTestCase {
 
   /**
-   * @expectedDeprecation Drupal\deprecation_test\Deprecation\FixtureDeprecatedClass is deprecated.
+   * Tests class-level deprecation.
    */
   public function testDeprecatedClass() {
+    $this->expectDeprecation('Drupal\deprecation_test\Deprecation\FixtureDeprecatedClass is deprecated.');
     $deprecated = new FixtureDeprecatedClass();
     $this->assertEquals('test', $deprecated->testFunction());
   }
diff --git a/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php b/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php
index 20fdd80c08..638a0b1a7c 100644
--- a/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php
+++ b/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php
@@ -82,10 +82,9 @@ protected function setUp(): void {
 
   /**
    * Tests getting legacy theme function registry data defined by a module.
-   *
-   * @expectedDeprecation Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test(). See https://www.drupal.org/node/1831138
    */
   public function testGetLegacyThemeFunctionRegistryForModule() {
+    $this->expectDeprecation('Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test(). See https://www.drupal.org/node/1831138');
     $test_theme = new ActiveTheme([
       'name' => 'test_legacy_theme',
       'path' => 'core/modules/system/tests/themes/test_legacy_theme/test_legacy_theme.info.yml',
diff --git a/core/tests/Drupal/Tests/ExpectDeprecationTest.php b/core/tests/Drupal/Tests/ExpectDeprecationTest.php
index 49c07c933b..ff2190b3f5 100644
--- a/core/tests/Drupal/Tests/ExpectDeprecationTest.php
+++ b/core/tests/Drupal/Tests/ExpectDeprecationTest.php
@@ -19,9 +19,9 @@ class ExpectDeprecationTest extends UnitTestCase {
 
   /**
    * @covers ::addExpectedDeprecationMessage
-   * @expectedDeprecation Drupal\Tests\Traits\ExpectDeprecationTrait::addExpectedDeprecationMessage() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901
    */
   public function testExpectDeprecation() {
+    $this->expectDeprecation('Drupal\Tests\Traits\ExpectDeprecationTrait::addExpectedDeprecationMessage() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901');
     $this->addExpectedDeprecationMessage('Test deprecation');
     @trigger_error('Test deprecation', E_USER_DEPRECATED);
   }
@@ -30,10 +30,10 @@ public function testExpectDeprecation() {
    * @covers ::addExpectedDeprecationMessage
    * @runInSeparateProcess
    * @preserveGlobalState disabled
-   * @expectedDeprecation Drupal\Tests\Traits\ExpectDeprecationTrait::addExpectedDeprecationMessage() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901
-   * @expectedDeprecation Drupal\Tests\Traits\ExpectDeprecationTrait::expectedDeprecations() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901
    */
   public function testExpectDeprecationInIsolation() {
+    $this->expectDeprecation('Drupal\Tests\Traits\ExpectDeprecationTrait::addExpectedDeprecationMessage() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901');
+    $this->expectDeprecation('Drupal\Tests\Traits\ExpectDeprecationTrait::expectedDeprecations() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901');
     $this->addExpectedDeprecationMessage('Test isolated deprecation');
     $this->expectedDeprecations(['Test isolated deprecation2']);
     @trigger_error('Test isolated deprecation', E_USER_DEPRECATED);
diff --git a/core/tests/Drupal/Tests/Listeners/DrupalListener.php b/core/tests/Drupal/Tests/Listeners/DrupalListener.php
index ab02b79a2e..0b288bce96 100644
--- a/core/tests/Drupal/Tests/Listeners/DrupalListener.php
+++ b/core/tests/Drupal/Tests/Listeners/DrupalListener.php
@@ -76,6 +76,12 @@ public function addSkippedTest(Test $test, \Throwable $t, float $time): void {
    * {@inheritdoc}
    */
   public function startTest(Test $test): void {
+    // Check for deprecated @expectedDeprecation annotations before the
+    // Symfony error handler has a chance to swallow this deprecation notice.
+    $annotations = UtilTest::parseTestMethodAnnotations(get_class($test), $test->getName(FALSE));
+    if (isset($annotations['method']['expectedDeprecation'])) {
+      @trigger_error('The @expectedDeprecation annotation on ' . get_class($test) . '::' . $test->getName(FALSE) . '() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use the expectDeprecation() method instead. See https://www.drupal.org/node/3176667', E_USER_DEPRECATED);
+    }
     // The Drupal error handler has to be registered prior to the Symfony error
     // handler that is registered in
     // \Symfony\Bridge\PhpUnit\Legacy\SymfonyTestsListenerTrait::startTest()
diff --git a/core/tests/Drupal/Tests/PhpUnitWarningsTest.php b/core/tests/Drupal/Tests/PhpUnitWarningsTest.php
index 45d298ca36..90e223400d 100644
--- a/core/tests/Drupal/Tests/PhpUnitWarningsTest.php
+++ b/core/tests/Drupal/Tests/PhpUnitWarningsTest.php
@@ -3,7 +3,6 @@
 namespace Drupal\Tests;
 
 use Drupal\TestTools\PhpUnitCompatibility\RunnerVersion;
-use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 /**
  * @coversDefaultClass \Drupal\Tests\Traits\PhpUnitWarnings
@@ -11,12 +10,11 @@
  */
 class PhpUnitWarningsTest extends UnitTestCase {
 
-  use ExpectDeprecationTrait;
-
   /**
-   * @expectedDeprecation Test warning for \Drupal\Tests\PhpUnitWarningsTest::testAddWarning()
+   * Tests that selected PHPUnit warning is converted to deprecation.
    */
   public function testAddWarning() {
+    $this->expectDeprecation('Test warning for \Drupal\Tests\PhpUnitWarningsTest::testAddWarning()');
     $this->addWarning('Test warning for \Drupal\Tests\PhpUnitWarningsTest::testAddWarning()');
   }
 
diff --git a/core/tests/Drupal/Tests/Traits/ExpectDeprecationTrait.php b/core/tests/Drupal/Tests/Traits/ExpectDeprecationTrait.php
index 7dbb17665f..7542b1496f 100644
--- a/core/tests/Drupal/Tests/Traits/ExpectDeprecationTrait.php
+++ b/core/tests/Drupal/Tests/Traits/ExpectDeprecationTrait.php
@@ -2,8 +2,6 @@
 
 namespace Drupal\Tests\Traits;
 
-use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait as SymfonyExpectDeprecationTrait;
-
 /**
  * Adds the ability to dynamically set expected deprecation messages in tests.
  *
@@ -15,7 +13,6 @@
  * @see https://www.drupal.org/node/3161901
  */
 trait ExpectDeprecationTrait {
-  use SymfonyExpectDeprecationTrait;
 
   /**
    * Sets an expected deprecation message.
diff --git a/core/tests/Drupal/Tests/UnitTestCase.php b/core/tests/Drupal/Tests/UnitTestCase.php
index 20dcb1d07a..c365afaf9c 100644
--- a/core/tests/Drupal/Tests/UnitTestCase.php
+++ b/core/tests/Drupal/Tests/UnitTestCase.php
@@ -11,6 +11,7 @@
 use Drupal\Core\StringTranslation\PluralTranslatableMarkup;
 use Drupal\Tests\Traits\PhpUnitWarnings;
 use PHPUnit\Framework\TestCase;
+use Symfony\Bridge\PhpUnit\ExpectDeprecationTrait;
 
 /**
  * Provides a base class and helpers for Drupal unit tests.
@@ -21,6 +22,7 @@ abstract class UnitTestCase extends TestCase {
 
   use PhpUnitWarnings;
   use PhpUnitCompatibilityTrait;
+  use ExpectDeprecationTrait;
 
   /**
    * The random generator.
diff --git a/core/tests/Drupal/Tests/UnitTestCaseTest.php b/core/tests/Drupal/Tests/UnitTestCaseTest.php
index d01264de66..a5ffeb27b8 100644
--- a/core/tests/Drupal/Tests/UnitTestCaseTest.php
+++ b/core/tests/Drupal/Tests/UnitTestCaseTest.php
@@ -13,10 +13,21 @@ class UnitTestCaseTest extends UnitTestCase {
    * Tests deprecation of the ::assertArrayEquals method.
    *
    * @group legacy
-   * @expectedDeprecation Drupal\Tests\UnitTestCase::assertArrayEquals() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use ::assertEquals(), ::assertEqualsCanonicalizing(), or ::assertSame() instead. See https://www.drupal.org/node/3136304
    */
   public function testAssertArrayEquals() {
+    $this->expectDeprecation('Drupal\Tests\UnitTestCase::assertArrayEquals() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use ::assertEquals(), ::assertEqualsCanonicalizing(), or ::assertSame() instead. See https://www.drupal.org/node/3136304');
     $this->assertArrayEquals([], []);
   }
 
+  /**
+   * Tests deprecation of the @expectedDeprecation annotation.
+   *
+   * @group legacy
+   * @expectedDeprecation A fake deprecation message to test deprecation of the annotation.
+   */
+  public function testDeprecatedAnnotationForExpectedDeprecation() {
+    $this->expectDeprecation('The @expectedDeprecation annotation on ::testDeprecatedAnnotationForExpectedDeprecation() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use the expectDeprecation() method instead. See https://www.drupal.org/node/3176667');
+    $this->assertTrue(TRUE);
+  }
+
 }

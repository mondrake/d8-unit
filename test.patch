diff --git a/core/modules/language/tests/src/Functional/ConfigurableLanguageManagerTest.php b/core/modules/language/tests/src/Functional/ConfigurableLanguageManagerTest.php
index 5d96550fbb..3f6e795930 100644
--- a/core/modules/language/tests/src/Functional/ConfigurableLanguageManagerTest.php
+++ b/core/modules/language/tests/src/Functional/ConfigurableLanguageManagerTest.php
@@ -128,20 +128,20 @@ public function testUrlContentTranslationWithPreferredAdminLanguage() {
     // See if the full view of the node in english is present and the
     // string in the Powered By Block is in English.
     $this->drupalGet('/node/1');
-    $assert_session->pageTextContains('English');
+    $assert_session->responseContains('English');
     $assert_session->pageTextContains('Powered by');
 
     // Load the spanish node page again and see if both the node and the string
     // are translated.
     $this->drupalGet('/es/node/1');
-    $assert_session->pageTextContains('Español');
+    $assert_session->responseContains('Español');
     $assert_session->pageTextContains('Funciona con');
     $assert_session->pageTextNotContains('Powered by');
 
     // Check if the Powered by string is shown in English on an
     // administration page, and the node content is shown in Spanish.
     $this->drupalGet('/es/node/1/edit');
-    $assert_session->pageTextContains('Español');
+    $assert_session->responseContains('Español');
     $assert_session->pageTextContains('Powered by');
     $assert_session->pageTextNotContains('Funciona con');
   }
@@ -169,27 +169,27 @@ public function testUrlContentTranslationWithSessionLanguage() {
     // See if the full view of the node in english is present and the
     // string in the Powered By Block is in English.
     $this->drupalGet('/node/1');
-    $assert_session->pageTextContains('English');
+    $assert_session->responseContains('English');
     $assert_session->pageTextContains('Powered by');
 
     // The language session variable has not been set yet, so
     // The string should be in Spanish.
     $this->drupalGet('/es/node/1');
-    $assert_session->pageTextContains('Español');
+    $assert_session->responseContains('Español');
     $assert_session->pageTextNotContains('Powered by');
     $assert_session->pageTextContains('Funciona con');
 
     // Set the session language to Spanish but load the English node page.
     $this->drupalGet('/node/1', ['query' => ['language' => 'es']]);
-    $assert_session->pageTextContains('English');
-    $assert_session->pageTextNotContains('Español');
+    $assert_session->responseContains('English');
+    $assert_session->responseNotContains('Español');
     $assert_session->pageTextContains('Funciona con');
     $assert_session->pageTextNotContains('Powered by');
 
     // Set the session language to English but load the node page in Spanish.
     $this->drupalGet('/es/node/1', ['query' => ['language' => 'en']]);
-    $assert_session->pageTextNotContains('English');
-    $assert_session->pageTextContains('Español');
+    $assert_session->responseNotContains('English');
+    $assert_session->responseContains('Español');
     $assert_session->pageTextNotContains('Funciona con');
     $assert_session->pageTextContains('Powered by');
   }
diff --git a/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTest.php b/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTest.php
index bd417da448..0031108e84 100644
--- a/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTest.php
+++ b/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTest.php
@@ -461,7 +461,7 @@ public function testHtmlEntityFormControllerDecoration() {
     // Install module that decorates controller.entity_form.
     \Drupal::service('module_installer')->install(['layout_builder_decoration_test']);
     $this->drupalGet('admin/structure/types/manage/bundle_with_section_field/display/default');
-    $assert_session->pageTextContains('Manage Display');
+    $assert_session->responseContains('Manage Display');
   }
 
   /**
@@ -489,11 +489,11 @@ public function testAccess() {
     $node->save();
     $this->drupalGet('node/1');
     $assert_session->pageTextNotContains('The first node body');
-    $assert_session->pageTextContains('Access denied');
+    $assert_session->responseContains('Access denied');
 
     $this->drupalGet('node/1/layout');
     $assert_session->pageTextNotContains('The first node body');
-    $assert_session->pageTextContains('Access denied');
+    $assert_session->responseContains('Access denied');
   }
 
   /**
@@ -948,10 +948,10 @@ public function testPendingRevision() {
     // The original node title is available when viewing the node, but the
     // pending title is visible within the Layout Builder UI.
     $this->drupalGet('node/1');
-    $assert_session->pageTextContains('The first node title');
+    $assert_session->responseContains('The first node title');
     $page->clickLink('Layout');
-    $assert_session->pageTextNotContains('The first node title');
-    $assert_session->pageTextContains('The pending title of the first node');
+    $assert_session->responseNotContains('The first node title');
+    $assert_session->responseContains('The pending title of the first node');
   }
 
   /**
@@ -987,7 +987,7 @@ public function testDeletedView() {
     View::load('test_block_view')->delete();
     $this->drupalGet('node/1');
     // Node can be loaded after deleting the View.
-    $assert_session->pageTextContains(Node::load(1)->getTitle());
+    $assert_session->responseContains(Node::load(1)->getTitle());
     $assert_session->pageTextNotContains('Test Block View');
   }
 
diff --git a/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTranslationTest.php b/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTranslationTest.php
index 16c15993e6..dd78f2dc2d 100644
--- a/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTranslationTest.php
+++ b/core/modules/layout_builder/tests/src/Functional/LayoutBuilderTranslationTest.php
@@ -69,7 +69,7 @@ public function testTranslationBeforeLayoutOverride() {
     $assert_session->linkNotExists('Layout');
 
     $this->drupalGet($translated_layout_url);
-    $assert_session->pageTextContains('Access denied');
+    $assert_session->responseContains('Access denied');
 
     $this->addLayoutOverride();
 
@@ -119,7 +119,7 @@ public function testLayoutOverrideBeforeTranslation() {
     $assert_session->linkNotExists('Layout');
 
     $this->drupalGet($translated_layout_url);
-    $assert_session->pageTextContains('Access denied');
+    $assert_session->responseContains('Access denied');
   }
 
   /**
diff --git a/core/modules/layout_builder/tests/src/FunctionalJavascript/InlineBlockTestBase.php b/core/modules/layout_builder/tests/src/FunctionalJavascript/InlineBlockTestBase.php
index dbf68d6179..196c095b46 100644
--- a/core/modules/layout_builder/tests/src/FunctionalJavascript/InlineBlockTestBase.php
+++ b/core/modules/layout_builder/tests/src/FunctionalJavascript/InlineBlockTestBase.php
@@ -115,7 +115,7 @@ protected function removeInlineBlockFromLayout() {
     $page = $this->getSession()->getPage();
     $block_text = $page->find('css', static::INLINE_BLOCK_LOCATOR)->getText();
     $this->assertNotEmpty($block_text);
-    $assert_session->pageTextContains($block_text);
+    $assert_session->responseContains($block_text);
     $this->clickContextualLink(static::INLINE_BLOCK_LOCATOR, 'Remove block');
     $assert_session->waitForElement('css', "#drupal-off-canvas input[value='Remove']");
     $assert_session->assertWaitOnAjaxRequest();
diff --git a/core/modules/node/tests/src/Functional/NodeCreationTest.php b/core/modules/node/tests/src/Functional/NodeCreationTest.php
index 60f2addeeb..88c79a9392 100644
--- a/core/modules/node/tests/src/Functional/NodeCreationTest.php
+++ b/core/modules/node/tests/src/Functional/NodeCreationTest.php
@@ -54,7 +54,10 @@ public function testNodeAddPageOrder() {
     $admin_content_types = $this->drupalCreateUser(['bypass node access']);
     $this->drupalLogin($admin_content_types);
     $this->drupalGet('node/add');
+    global $xxx;
+    $xxx = TRUE;
     $this->assertSession()->pageTextMatches('/Aaa Bundle 2(.*)Bundle 1/');
+    $xxx = FALSE;
   }
 
   /**
diff --git a/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php b/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php
index 0f87ff0ccc..d830e61c15 100644
--- a/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php
+++ b/core/modules/system/tests/src/Functional/UpdateSystem/UpdatePathTestBaseFilledTest.php
@@ -311,7 +311,7 @@ public function testUpdatedSite() {
     $this->drupalGet('admin/config/system/actions');
     $this->assertSession()->pageTextContains('Test action');
     $this->drupalGet('admin/config/system/actions/configure/test_action');
-    $this->assertSession()->pageTextContains('test_action');
+    $this->assertSession()->responseContains('test_action');
     $this->assertRaw('drupal.org');
 
     // Make sure our ban still exists.
diff --git a/core/modules/tour/tests/src/Functional/TourTest.php b/core/modules/tour/tests/src/Functional/TourTest.php
index 05ec3c5dcc..6061af80ba 100644
--- a/core/modules/tour/tests/src/Functional/TourTest.php
+++ b/core/modules/tour/tests/src/Functional/TourTest.php
@@ -207,7 +207,7 @@ public function testTourFunctionality() {
     $this->assertCount(1, $elements, 'Found code tip was weighted last and had "End tour".');
 
     // Test hook_tour_alter().
-    $this->assertSession()->pageTextContains('Altered by hook_tour_tips_alter');
+    $this->assertSession()->responseContains('Altered by hook_tour_tips_alter');
 
     // Navigate to tour-test-3 and verify the tour_test_1 tip is found with
     // appropriate classes.
diff --git a/core/modules/workflows/tests/src/Functional/WorkflowUiTest.php b/core/modules/workflows/tests/src/Functional/WorkflowUiTest.php
index b6ca2ff04c..07e55b8386 100644
--- a/core/modules/workflows/tests/src/Functional/WorkflowUiTest.php
+++ b/core/modules/workflows/tests/src/Functional/WorkflowUiTest.php
@@ -190,7 +190,7 @@ public function testWorkflowCreation() {
     $workflow = $workflow_storage->loadUnchanged('test');
     $this->assertTrue($workflow->getTypePlugin()->hasTransitionFromStateToState('published', 'published'), 'Can transition from published to published');
     $this->clickLink('Delete');
-    $this->assertSession()->pageTextContains('Are you sure you want to delete Save and publish from Test?');
+    $this->assertSession()->responseContains('Are you sure you want to delete Save and publish from Test?');
     $this->submitForm([], 'Delete');
     $workflow = $workflow_storage->loadUnchanged('test');
     $this->assertFalse($workflow->getTypePlugin()->hasTransitionFromStateToState('published', 'published'), 'Cannot transition from published to published');
@@ -251,7 +251,7 @@ public function testWorkflowCreation() {
 
     // Delete the Draft state.
     $this->clickLink('Delete');
-    $this->assertSession()->pageTextContains('Are you sure you want to delete Draft from Test?');
+    $this->assertSession()->responseContains('Are you sure you want to delete Draft from Test?');
     $this->submitForm([], 'Delete');
     $this->assertSession()->pageTextContains('State Draft deleted.');
     $workflow = $workflow_storage->loadUnchanged('test');
@@ -262,7 +262,7 @@ public function testWorkflowCreation() {
     // be for the workflow.
     $this->assertSession()->linkByHrefNotExists($published_delete_link);
     $this->clickLink('Delete');
-    $this->assertSession()->pageTextContains('Are you sure you want to delete Test?');
+    $this->assertSession()->responseContains('Are you sure you want to delete Test?');
     $this->submitForm([], 'Delete');
     $this->assertSession()->pageTextContains('Workflow Test deleted.');
     $this->assertSession()->pageTextContains('There are no workflows yet.');
diff --git a/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php b/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php
index bb5de5fc43..a4f15df743 100644
--- a/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php
+++ b/core/tests/Drupal/Tests/Core/Assert/WebAssertArgumentsTest.php
@@ -50,6 +50,7 @@ public function setUp(): void {
     parent::setUp();
 
     $this->page = $this->prophesize(DocumentElement::class);
+    $this->page->getHtml()->willReturn('<html/>');
     $this->session = $this->prophesize(Session::class);
     $this->session->getPage()->willReturn($this->page->reveal());
     $this->webAssert = new WebAssert($this->getSession());
@@ -218,7 +219,7 @@ public function testHiddenFieldValueNotEquals(): void {
    */
   public function testPageTextContainsOnce(): void {
     $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextContainsOnce with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
-    $this->page->getText()->willReturn('foo bar bar');
+    $this->page->getHtml()->willReturn('<html><body>foo bar bar</body></html>');
     $this->webAssert->pageTextContainsOnce('foo', 'Extra argument');
   }
 
@@ -344,7 +345,7 @@ public function testResponseHeaderNotMatches(): void {
    */
   public function testPageTextContains(): void {
     $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
-    $this->page->getText()->willReturn('foo bar bar');
+    $this->page->getHtml()->willReturn('<html><body>foo bar bar</body></html>');
     $this->webAssert->pageTextContains('foo', 'Extra argument');
   }
 
@@ -353,7 +354,7 @@ public function testPageTextContains(): void {
    */
   public function testPageTextNotContains(): void {
     $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextNotContains with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
-    $this->page->getText()->willReturn('foo bar bar');
+    $this->page->getHtml()->willReturn('<html><body>foo bar bar</body></html>');
     $this->webAssert->pageTextNotContains('qux', 'Extra argument');
   }
 
@@ -362,7 +363,7 @@ public function testPageTextNotContains(): void {
    */
   public function testPageTextMatches(): void {
     $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
-    $this->page->getText()->willReturn('foo bar bar');
+    $this->page->getHtml()->willReturn('<html><body>foo bar bar</body></html>');
     $this->webAssert->pageTextMatches('/foo/', 'Extra argument');
   }
 
@@ -371,7 +372,7 @@ public function testPageTextMatches(): void {
    */
   public function testPageTextNotMatches(): void {
     $this->expectDeprecation('Calling Drupal\Tests\WebAssert::pageTextNotMatches with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537');
-    $this->page->getText()->willReturn('foo bar bar');
+    $this->page->getHtml()->willReturn('<html><body>foo bar bar</body></html>');
     $this->webAssert->pageTextNotMatches('/qux/', 'Extra argument');
   }
 
diff --git a/core/tests/Drupal/Tests/WebAssert.php b/core/tests/Drupal/Tests/WebAssert.php
index 47a5c283e5..9a2a2a8451 100644
--- a/core/tests/Drupal/Tests/WebAssert.php
+++ b/core/tests/Drupal/Tests/WebAssert.php
@@ -109,8 +109,7 @@ public function responseHeaderDoesNotExist(string $name, string $message = ''):
    *   (Optional) the failure message.
    */
   public function pageTextMatchesCount(int $count, string $regex, string $message = ''): void {
-    $actual = preg_replace('/\s+/u', ' ', $this->session->getPage()->getText());
-    $matches = preg_match_all($regex, $actual);
+    $matches = preg_match_all($regex, $this->getCleanedUpPageText(TRUE));
     if ($message === '') {
       $message = "Failed asserting that the page matches the pattern '$regex' $count time(s), $matches found.";
     }
@@ -877,6 +876,35 @@ public function responseHeaderNotMatches($name, $regex) {
     return parent::responseHeaderNotMatches($name, $regex);
   }
 
+  /**
+   * Returns a Drupal's page text cleaned up of script tags.
+   *
+   * @param bool $pack
+   *   (Optional) If TRUE, packs contiguous spaces and newlines into a single
+   *   space. Defaults to FALSE.
+   *
+   * @return string
+   *   The cleaned up page text.
+   */
+  private function getCleanedUpPageText(bool $pack = FALSE): string {
+    $dom = new \DOMDocument();
+    // Suppress libxml warnings when loading HTML 5 content.
+    @$dom->loadHTML($this->session->getPage()->getHtml());
+    global $xxx;
+    if ($xxx) dump(['pre-', $dom->textContent]);
+    $body = $dom->getElementsByTagName('body')[0];
+    if (!$body) {
+      return '';
+    }
+    $items = $body->getElementsByTagName('script');
+    while ($items->count() > 0) {
+      $items->item(0)->parentNode->removeChild($items->item(0));
+      $items = $body->getElementsByTagName('script');
+    }
+    if ($xxx) dump(['post', ($pack ? preg_replace('/\s+/u', ' ', $body->textContent) : $body->textContent)]);
+    return $pack ? preg_replace('/\s+/u', ' ', $body->textContent) : $body->textContent;
+  }
+
   /**
    * {@inheritdoc}
    */
@@ -884,7 +912,12 @@ public function pageTextContains($text) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextContains($text);
+    $regex = '/' . preg_quote($text, '/') . '/ui';
+    if ((bool) preg_match($regex, $this->getCleanedUpPageText(TRUE))) {
+      return;
+    }
+    $message = sprintf('The text "%s" was not found anywhere in the text of the current page.', $text);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**
@@ -894,7 +927,12 @@ public function pageTextNotContains($text) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextNotContains($text);
+    $regex = '/' . preg_quote($text, '/') . '/ui';
+    if (!preg_match($regex, $this->getCleanedUpPageText(TRUE))) {
+      return;
+    }
+    $message = sprintf('The text "%s" appears in the text of this page, but it should not.', $text);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**
@@ -904,7 +942,11 @@ public function pageTextMatches($regex) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextMatches($regex);
+    if ((bool) preg_match($regex, $this->getCleanedUpPageText(TRUE))) {
+      return;
+    }
+    $message = sprintf('The pattern %s was not found anywhere in the text of the current page.', $regex);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**
@@ -914,7 +956,11 @@ public function pageTextNotMatches($regex) {
     if (func_num_args() > 1) {
       @trigger_error('Calling ' . __METHOD__ . ' with more than one argument is deprecated in drupal:9.1.0 and will throw an \InvalidArgumentException in drupal:10.0.0. See https://www.drupal.org/node/3162537', E_USER_DEPRECATED);
     }
-    return parent::pageTextNotMatches($regex);
+    if (!preg_match($regex, $this->getCleanedUpPageText(TRUE))) {
+      return;
+    }
+    $message = sprintf('The pattern %s was found in the text of the current page, but it should not.', $regex);
+    throw new ResponseTextException($message, $this->session->getDriver());
   }
 
   /**

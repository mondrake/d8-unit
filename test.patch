diff --git a/core/lib/Drupal/Core/Test/Comparator/MarkupInterfaceComparator.php b/core/lib/Drupal/Core/Test/Comparator/MarkupInterfaceComparator.php
new file mode 100644
index 0000000000..e34e564ecd
--- /dev/null
+++ b/core/lib/Drupal/Core/Test/Comparator/MarkupInterfaceComparator.php
@@ -0,0 +1,50 @@
+<?php
+
+namespace Drupal\Core\Test\Comparator;
+
+use Drupal\Component\Render\MarkupInterface;
+use Drupal\Tests\AssertHelperTrait;
+use SebastianBergmann\Comparator\Comparator;
+
+/**
+ * Compares MarkupInterface objects for equality.
+ */
+class MarkupInterfaceComparator extends Comparator {
+
+  use AssertHelperTrait;
+
+  /**
+   * {@inheritdoc}
+   */
+  public function accepts($expected, $actual) {
+    if ($expected instanceof MarkupInterface || $actual instanceof MarkupInterface) {
+      return TRUE;
+    }
+    foreach ([$expected, $actual] as $value) {
+      if (is_array($value)) {
+        $markup_item_found = FALSE;
+        array_walk_recursive($value, function ($item, &$markup_item_found) {
+          if ($item instanceof MarkupInterface) {
+            $markup_item_found = TRUE;
+          }
+        });
+        if ($markup_item_found) {
+          return TRUE;
+        }
+      }
+    }
+    return FALSE;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function assertEquals($expected, $actual, $delta = 0.0, $canonicalize = false, $ignoreCase = false, array &$processed = []) {
+    $expected_safe = static::castSafeStrings($expected);
+    $actual_safe = static::castSafeStrings($actual);
+
+    $comparator = $this->factory->getComparatorFor($expected_safe, $actual_safe);
+    $comparator->assertEquals($expected_safe, $actual_safe, $delta, $canonicalize, $ignoreCase, $processed);
+  }
+
+}
diff --git a/core/tests/Drupal/KernelTests/KernelTestBase.php b/core/tests/Drupal/KernelTests/KernelTestBase.php
index fd26d08a14..e26f5e0e15 100644
--- a/core/tests/Drupal/KernelTests/KernelTestBase.php
+++ b/core/tests/Drupal/KernelTests/KernelTestBase.php
@@ -1096,16 +1096,4 @@ public function __sleep() {
     return [];
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  public static function assertEquals($expected, $actual, $message = '', $delta = 0.0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE) {
-    // Cast objects implementing MarkupInterface to string instead of
-    // relying on PHP casting them to string depending on what they are being
-    // comparing with.
-    $expected = static::castSafeStrings($expected);
-    $actual = static::castSafeStrings($actual);
-    parent::assertEquals($expected, $actual, $message, $delta, $maxDepth, $canonicalize, $ignoreCase);
-  }
-
 }
diff --git a/core/tests/Drupal/Tests/BrowserTestBase.php b/core/tests/Drupal/Tests/BrowserTestBase.php
index 2b1ee867b1..20f31e3d83 100644
--- a/core/tests/Drupal/Tests/BrowserTestBase.php
+++ b/core/tests/Drupal/Tests/BrowserTestBase.php
@@ -678,18 +678,6 @@ protected function getDrupalSettings() {
     return [];
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  public static function assertEquals($expected, $actual, $message = '', $delta = 0.0, $maxDepth = 10, $canonicalize = FALSE, $ignoreCase = FALSE) {
-    // Cast objects implementing MarkupInterface to string instead of
-    // relying on PHP casting them to string depending on what they are being
-    // comparing with.
-    $expected = static::castSafeStrings($expected);
-    $actual = static::castSafeStrings($actual);
-    parent::assertEquals($expected, $actual, $message, $delta, $maxDepth, $canonicalize, $ignoreCase);
-  }
-
   /**
    * Retrieves the current calling line in the class under test.
    *
diff --git a/core/tests/bootstrap.php b/core/tests/bootstrap.php
index 3ea857115e..359facf634 100644
--- a/core/tests/bootstrap.php
+++ b/core/tests/bootstrap.php
@@ -8,6 +8,7 @@
  */
 
 use Drupal\Component\Assertion\Handle;
+use Drupal\Tests\Comparator\MarkupInterfaceComparator;
 use PHPUnit\Framework\AssertionFailedError;
 use PHPUnit\Framework\Constraint\Count;
 use PHPUnit\Framework\Error\Error;
@@ -19,6 +20,7 @@
 use PHPUnit\Framework\TestCase;
 use PHPUnit\Util\Test;
 use PHPUnit\Util\Xml;
+use SebastianBergmann\Comparator\Factory;
 
 /**
  * Finds all valid extension directories recursively within a given directory.
@@ -161,6 +163,10 @@ function drupal_phpunit_populate_class_loader() {
 // Do class loader population.
 drupal_phpunit_populate_class_loader();
 
+// Register any additional Comparator with PHPUnit.
+$comparator_factory = Factory::getInstance();
+$comparator_factory->register(new MarkupInterfaceComparator());
+
 // Set sane locale settings, to ensure consistent string, dates, times and
 // numbers handling.
 // @see \Drupal\Core\DrupalKernel::bootEnvironment()

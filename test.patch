diff --git a/core/lib/Drupal/Core/TypedData/Validation/RecursiveValidator.php b/core/lib/Drupal/Core/TypedData/Validation/RecursiveValidator.php
index f1ed53f6ec..d4bf121914 100644
--- a/core/lib/Drupal/Core/TypedData/Validation/RecursiveValidator.php
+++ b/core/lib/Drupal/Core/TypedData/Validation/RecursiveValidator.php
@@ -89,6 +89,7 @@ public function hasMetadataFor($value): bool {
    * {@inheritdoc}
    */
   public function validate($value, $constraints = NULL, $groups = NULL): ConstraintViolationListInterface {
+dump([__METHOD__, $value, $constraints, $groups]);
     return $this->startContext($value)
       ->validate($value, $constraints, $groups)
       ->getViolations();
diff --git a/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php b/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php
index 161aa10db2..a6cc645ca3 100644
--- a/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php
+++ b/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/RangeConstraint.php
@@ -19,7 +19,16 @@
  */
 class RangeConstraint extends Range {
 
-  public $minMessage = 'This value should be %limit or more.';
-  public $maxMessage = 'This value should be %limit or less.';
+  /**
+   * {@inheritdoc}
+   */
+  public function __construct(array $options = NULL) {
+dump($options);
+    if (!isset($options['min']) || !isset($options['max'])) {
+      $options['minMessage'] = $options['minMessage'] ?? 'This value should be %limit or more.';
+      $options['maxMessage'] = $options['maxMessage'] ?? 'This value should be %limit or less.';
+    }
+    parent::__construct($options);
+  }
 
 }

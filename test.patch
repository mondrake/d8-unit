diff --git a/core/modules/image/tests/src/Functional/ImageDimensionsTest.php b/core/modules/image/tests/src/Functional/ImageDimensionsTest.php
index efa06faf4c..1875e96e8c 100644
--- a/core/modules/image/tests/src/Functional/ImageDimensionsTest.php
+++ b/core/modules/image/tests/src/Functional/ImageDimensionsTest.php
@@ -82,7 +82,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="120" height="60" alt="" loading="lazy" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(120, $image_file->getWidth());
@@ -103,7 +103,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="60" height="120" alt="" loading="lazy" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(60, $image_file->getWidth());
@@ -125,7 +125,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="45" height="90" alt="" loading="lazy" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(45, $image_file->getWidth());
@@ -147,7 +147,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="45" height="90" alt="" loading="lazy" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(45, $image_file->getWidth());
@@ -165,7 +165,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="45" height="90" alt="" loading="lazy" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(45, $image_file->getWidth());
@@ -186,7 +186,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" alt="" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
 
     // Add a crop effect.
@@ -205,7 +205,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="30" height="30" alt="" loading="lazy" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(30, $image_file->getWidth());
@@ -228,7 +228,7 @@ public function testImageDimensions() {
     // $this->assertEquals('<img src="' . $url . '" width="41" height="41" alt="" class="image-style-test" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     // @todo Uncomment this once
@@ -272,7 +272,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="100" height="100" alt="" loading="lazy" class="image-style-test-uri" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(100, $image_file->getWidth());
@@ -286,7 +286,7 @@ public function testImageDimensions() {
     $this->assertEquals('<img src="' . $url . '" width="50" height="50" alt="" loading="lazy" class="image-style-test-uri" />', $this->getImageTag($variables));
     $this->assertFileDoesNotExist($generated_uri);
     $this->drupalGet($this->getAbsoluteUrl($url));
-    $this->assertSession()->statusCodeEquals(200);
+    $this->assertWebStatusCodeEquals(200);
     $this->assertFileExists($generated_uri);
     $image_file = $image_factory->get($generated_uri);
     $this->assertEquals(50, $image_file->getWidth());
diff --git a/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php b/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php
index 7f92b9ed00..ed6bc11554 100644
--- a/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php
+++ b/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php
@@ -186,6 +186,7 @@ protected function createScreenshot($filename, $set_background_color = TRUE) {
    * {@inheritdoc}
    */
   public function assertSession($name = NULL) {
+    @trigger_error('UiHelperTrait::assertSession() is deprecated in drupal:10.1.0 and is removed from drupal:11.0.0. Use #todo instead. See https://www.drupal.org/node/7654321', E_USER_DEPRECATED);
     return new WebDriverWebAssert($this->getSession($name), $this->baseUrl);
   }
 
diff --git a/core/tests/Drupal/Tests/BrowserTestBase.php b/core/tests/Drupal/Tests/BrowserTestBase.php
index 704149fdd2..cf74392781 100644
--- a/core/tests/Drupal/Tests/BrowserTestBase.php
+++ b/core/tests/Drupal/Tests/BrowserTestBase.php
@@ -18,6 +18,7 @@
 use Drupal\Tests\node\Traits\NodeCreationTrait;
 use Drupal\Tests\Traits\PhpUnitWarnings;
 use Drupal\Tests\user\Traits\UserCreationTrait;
+use Drupal\Tests\WebAssert;
 use Drupal\TestTools\Comparator\MarkupInterfaceComparator;
 use Drupal\TestTools\TestVarDumper;
 use GuzzleHttp\Cookie\CookieJar;
@@ -174,6 +175,13 @@ abstract class BrowserTestBase extends TestCase {
    */
   protected $mink;
 
+  /**
+   * The WebAssert object for asserting web page elements.
+   *
+   * @var \Drupal\Tests\WebAssert|null
+   */
+  protected ?WebAssert $webAssert;
+
   /**
    * {@inheritdoc}
    *
@@ -289,6 +297,7 @@ protected function initMink() {
    */
   protected function initFrontPage() {
     $session = $this->getSession();
+    $this->webAssert = new WebAssert($session, $this->baseUrl);
     $session->visit($this->baseUrl);
   }
 
diff --git a/core/tests/Drupal/Tests/UiHelperTrait.php b/core/tests/Drupal/Tests/UiHelperTrait.php
index cd0b7dea74..2a37dd2eca 100644
--- a/core/tests/Drupal/Tests/UiHelperTrait.php
+++ b/core/tests/Drupal/Tests/UiHelperTrait.php
@@ -293,8 +293,14 @@ protected function drupalLogout() {
    *
    * @return \Drupal\Tests\WebAssert
    *   A new web-assert option for asserting the presence of elements with.
+   *
+   * @deprecated in drupal:10.1.0 and is removed from drupal:11.0.0. Use
+   *   #todo instead.
+   *
+   * @see https://www.drupal.org/node/7654321
    */
   public function assertSession($name = NULL) {
+    @trigger_error('UiHelperTrait::assertSession() is deprecated in drupal:10.1.0 and is removed from drupal:11.0.0. Use #todo instead. See https://www.drupal.org/node/7654321', E_USER_DEPRECATED);
     $this->addToAssertionCount(1);
     return new WebAssert($this->getSession($name), $this->baseUrl);
   }
@@ -591,4 +597,14 @@ protected function isTestUsingGuzzleClient() {
     return FALSE;
   }
 
+  /**
+   * Checks that current response code equals to provided one.
+   *
+   * @param int $code
+   *   The expected status code.
+   */
+  public function assertWebStatusCodeEquals(int $code): void {
+    $this->assertWeb->statusCodeEquals($code);
+  }
+
 }

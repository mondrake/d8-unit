diff --git a/core/lib/Drupal/Core/Database/Connection.php b/core/lib/Drupal/Core/Database/Connection.php
index 5cb43e5bc4..16bcd77a18 100644
--- a/core/lib/Drupal/Core/Database/Connection.php
+++ b/core/lib/Drupal/Core/Database/Connection.php
@@ -521,11 +521,13 @@ public function prepareStatement(string $query, array $options, bool $allow_row_
 
     try {
       $query = $this->preprocessStatement($query, $options);
-      return new $this->statementWrapperClass($this, $this->connection, $query, $options['pdo'] ?? [], $allow_row_count);
+      $statement = new $this->statementWrapperClass($this, $this->connection, $query, $options['pdo'] ?? [], $allow_row_count);
     }
     catch (\Exception $e) {
       $this->exceptionHandler()->handleStatementException($e, $query, $options);
     }
+
+    return $statement;
   }
 
   /**
diff --git a/core/lib/Drupal/Core/File/MimeType/MimeTypeGuesser.php b/core/lib/Drupal/Core/File/MimeType/MimeTypeGuesser.php
index d42f7ab901..90a2c4257e 100644
--- a/core/lib/Drupal/Core/File/MimeType/MimeTypeGuesser.php
+++ b/core/lib/Drupal/Core/File/MimeType/MimeTypeGuesser.php
@@ -73,6 +73,8 @@ public function guessMimeType(string $path) : ?string {
         return $mime_type;
       }
     }
+
+    return NULL;
   }
 
   /**
diff --git a/core/lib/Drupal/Core/TypedData/ComputedItemListTrait.php b/core/lib/Drupal/Core/TypedData/ComputedItemListTrait.php
index 09a2dc2679..f1d4d4236b 100644
--- a/core/lib/Drupal/Core/TypedData/ComputedItemListTrait.php
+++ b/core/lib/Drupal/Core/TypedData/ComputedItemListTrait.php
@@ -118,6 +118,7 @@ public function isEmpty() {
   /**
    * {@inheritdoc}
    */
+  #[\ReturnTypeWillChange]
   public function offsetExists($offset) {
     $this->ensureComputedValue();
     return parent::offsetExists($offset);
diff --git a/core/modules/comment/src/CommentFieldItemList.php b/core/modules/comment/src/CommentFieldItemList.php
index 60311ceeba..985f865225 100644
--- a/core/modules/comment/src/CommentFieldItemList.php
+++ b/core/modules/comment/src/CommentFieldItemList.php
@@ -30,6 +30,7 @@ public function get($index) {
   /**
    * {@inheritdoc}
    */
+  #[\ReturnTypeWillChange]
   public function offsetExists($offset) {
     // For consistency with what happens in get(), we force offsetExists() to
     // be TRUE for delta 0.
diff --git a/core/modules/migrate/src/Plugin/migrate/source/EmbeddedDataSource.php b/core/modules/migrate/src/Plugin/migrate/source/EmbeddedDataSource.php
index feca681f59..158b3a8914 100644
--- a/core/modules/migrate/src/Plugin/migrate/source/EmbeddedDataSource.php
+++ b/core/modules/migrate/src/Plugin/migrate/source/EmbeddedDataSource.php
@@ -113,6 +113,7 @@ public function getIds() {
   /**
    * {@inheritdoc}
    */
+  #[\ReturnTypeWillChange]
   public function count($refresh = FALSE) {
     // We do not want this source plugin to have a cacheable count.
     // @see \Drupal\migrate_cache_counts_test\Plugin\migrate\source\CacheableEmbeddedDataSource
diff --git a/core/modules/migrate/tests/modules/migrate_cache_counts_test/src/Plugin/migrate/source/CacheableEmbeddedDataSource.php b/core/modules/migrate/tests/modules/migrate_cache_counts_test/src/Plugin/migrate/source/CacheableEmbeddedDataSource.php
index 510e776000..47dd1b7330 100644
--- a/core/modules/migrate/tests/modules/migrate_cache_counts_test/src/Plugin/migrate/source/CacheableEmbeddedDataSource.php
+++ b/core/modules/migrate/tests/modules/migrate_cache_counts_test/src/Plugin/migrate/source/CacheableEmbeddedDataSource.php
@@ -18,6 +18,7 @@ class CacheableEmbeddedDataSource extends EmbeddedDataSource {
   /**
    * {@inheritdoc}
    */
+  #[\ReturnTypeWillChange]
   public function count($refresh = FALSE) {
     return SourcePluginBase::count($refresh);
   }
diff --git a/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntity.php b/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntity.php
index 28f20a7bcb..798b1eda6b 100644
--- a/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntity.php
+++ b/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntity.php
@@ -242,6 +242,7 @@ public function query() {
   /**
    * {@inheritdoc}
    */
+  #[\ReturnTypeWillChange]
   public function count($refresh = FALSE) {
     // If no translations are included, then a simple query is possible.
     if (!$this->configuration['include_translations']) {
diff --git a/core/tests/Drupal/FunctionalTests/Bootstrap/ErrorContainer.php b/core/tests/Drupal/FunctionalTests/Bootstrap/ErrorContainer.php
index 3cb81e0b29..17cf4b3efc 100644
--- a/core/tests/Drupal/FunctionalTests/Bootstrap/ErrorContainer.php
+++ b/core/tests/Drupal/FunctionalTests/Bootstrap/ErrorContainer.php
@@ -18,11 +18,9 @@ public function get($id, $invalidBehavior = ContainerInterface::EXCEPTION_ON_INV
       // Enforce a recoverable error.
       $callable = function (ErrorContainer $container) {
       };
-      $callable(1);
-    }
-    else {
-      return parent::get($id, $invalidBehavior);
+      return $callable(1);
     }
+    return parent::get($id, $invalidBehavior);
   }
 
 }
diff --git a/core/tests/Drupal/Tests/Component/ProxyBuilder/ProxyBuilderTest.php b/core/tests/Drupal/Tests/Component/ProxyBuilder/ProxyBuilderTest.php
index 2ff8083fee..92c627a8ad 100644
--- a/core/tests/Drupal/Tests/Component/ProxyBuilder/ProxyBuilderTest.php
+++ b/core/tests/Drupal/Tests/Component/ProxyBuilder/ProxyBuilderTest.php
@@ -436,7 +436,7 @@ public function methodWithParameter($parameter) {
 class TestServiceComplexMethod {
 
   public function complexMethod(string $parameter, callable $function, TestServiceNoMethod $test_service = NULL, array &$elements = []): array {
-
+    return [];
   }
 
 }
@@ -444,7 +444,7 @@ public function complexMethod(string $parameter, callable $function, TestService
 class TestServiceNullableTypehintSelf {
 
   public function typehintSelf(?self $parameter): ?self {
-
+    return NULL;
   }
 
 }
diff --git a/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php b/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php
index 121c7d26b3..a92b5a1e2c 100644
--- a/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php
+++ b/core/tests/Drupal/Tests/Core/DependencyInjection/Compiler/MimeTypePassTest.php
@@ -51,9 +51,13 @@ public function testProcessLegacy() {
 
 class NewMimeTypeGuesser implements MimeTypeGuesserInterface {
 
-  public function guessMimeType(string $string): string {}
+  public function guessMimeType(string $string): string {
+    return '';
+  }
 
-  public function isGuesserSupported(): bool {}
+  public function isGuesserSupported(): bool {
+    return TRUE;
+  }
 
 }
 

diff --git a/core/lib/Drupal/Core/Database/Connection.php b/core/lib/Drupal/Core/Database/Connection.php
index e0f9c5f631..1a4dcca10e 100644
--- a/core/lib/Drupal/Core/Database/Connection.php
+++ b/core/lib/Drupal/Core/Database/Connection.php
@@ -67,6 +67,12 @@
    * Index of what driver-specific class to use for various operations.
    *
    * @var array
+   *
+   * @deprecated in drupal:9.3.0 and is removed from drupal:10.0.0. Use
+   *   fully qualified class names in the methods that return database
+   *   operations instead.
+   *
+   * @see https://www.drupal.org/node/3177488
    */
   protected $driverClasses = [];
 
@@ -1056,6 +1062,7 @@ protected function expandArguments(&$query, &$args) {
    *   The name of the class that should be used for this driver.
    */
   public function getDriverClass($class) {
+    @trigger_error('Connection::getDriverClass() is deprecated in drupal:9.3.0 and is removed from drupal:10.0.0. Use fully qualified class names in the methods that return database operations instead. See https://www.drupal.org/node/3137786', E_USER_DEPRECATED);
     if (empty($this->driverClasses[$class])) {
       $driver_class = $this->connectionOptions['namespace'] . '\\' . $class;
       if (class_exists($driver_class)) {
diff --git a/core/lib/Drupal/Core/Database/Driver/mysql/Connection.php b/core/lib/Drupal/Core/Database/Driver/mysql/Connection.php
index 11782fc1ca..252a30717e 100644
--- a/core/lib/Drupal/Core/Database/Driver/mysql/Connection.php
+++ b/core/lib/Drupal/Core/Database/Driver/mysql/Connection.php
@@ -2,15 +2,22 @@
 
 namespace Drupal\Core\Database\Driver\mysql;
 
+use Drupal\Core\Database\Connection as DatabaseConnection;
+use Drupal\Core\Database\Database;
 use Drupal\Core\Database\DatabaseAccessDeniedException;
-use Drupal\Core\Database\IntegrityConstraintViolationException;
+use Drupal\Core\Database\DatabaseException;
 use Drupal\Core\Database\DatabaseExceptionWrapper;
+use Drupal\Core\Database\DatabaseNotFoundException;
+use Drupal\Core\Database\IntegrityConstraintViolationException;
+use Drupal\Core\Database\Query\Condition;
+use Drupal\Core\Database\Query\Delete;
+use Drupal\Core\Database\Query\Merge;
+use Drupal\Core\Database\Query\Select;
+use Drupal\Core\Database\Query\Truncate;
+use Drupal\Core\Database\Query\Update;
 use Drupal\Core\Database\StatementInterface;
 use Drupal\Core\Database\StatementWrapper;
-use Drupal\Core\Database\Database;
-use Drupal\Core\Database\DatabaseNotFoundException;
-use Drupal\Core\Database\DatabaseException;
-use Drupal\Core\Database\Connection as DatabaseConnection;
+use Drupal\Core\Database\Transaction;
 use Drupal\Core\Database\TransactionNoActiveException;
 
 /**
@@ -454,6 +461,86 @@ protected function doCommit() {
     return $success;
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function exceptionHandler() {
+    return new ExceptionHandler();
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function select($table, $alias = NULL, array $options = []) {
+    return new Select($this, $table, $alias, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function insert($table, array $options = []) {
+    return new Insert($this, $table, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function merge($table, array $options = []) {
+    return new Merge($this, $table, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function upsert($table, array $options = []) {
+    return new Upsert($this, $table, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function update($table, array $options = []) {
+    return new Update($this, $table, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function delete($table, array $options = []) {
+    return new Delete($this, $table, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function truncate($table, array $options = []) {
+    return new Truncate($this, $table, $options);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function schema() {
+    if (empty($this->schema)) {
+      $this->schema = new Schema($this);
+    }
+    return $this->schema;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function condition($conjunction) {
+    return new Condition($conjunction, FALSE);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function startTransaction($name = '') {
+    return new Transaction($this, $name);
+  }
+
 }
 
 
diff --git a/core/lib/Drupal/Core/Database/Query/Select.php b/core/lib/Drupal/Core/Database/Query/Select.php
index 94cbf92b14..e907b12c53 100644
--- a/core/lib/Drupal/Core/Database/Query/Select.php
+++ b/core/lib/Drupal/Core/Database/Query/Select.php
@@ -322,6 +322,7 @@ public function extend($extender_name) {
     $class = end($parts);
     $driver_class = $this->connection->getDriverClass($class);
     if ($driver_class !== $class) {
+      @trigger_error('Calling ' . __METHOD__ . " with extender_name:$extender_name driver_class:$driver_classConnection::generateTemporaryTableName() is deprecated in drupal:9.3.0 and is removed from drupal:10.0.0. @todo. See https://www.drupal.org/node/3211781", E_USER_DEPRECATED);
       return new $driver_class($this, $this->connection);
     }
     return new $extender_name($this, $this->connection);
diff --git a/core/lib/Drupal/Core/Database/Query/SelectExtender.php b/core/lib/Drupal/Core/Database/Query/SelectExtender.php
index 0681813f04..91bf2c78ad 100644
--- a/core/lib/Drupal/Core/Database/Query/SelectExtender.php
+++ b/core/lib/Drupal/Core/Database/Query/SelectExtender.php
@@ -225,6 +225,7 @@ public function extend($extender_name) {
     $class = end($parts);
     $driver_class = $this->connection->getDriverClass($class);
     if ($driver_class !== $class) {
+      @trigger_error('Calling ' . __METHOD__ . " with extender_name:$extender_name driver_class:$driver_classConnection::generateTemporaryTableName() is deprecated in drupal:9.3.0 and is removed from drupal:10.0.0. @todo. See https://www.drupal.org/node/3211781", E_USER_DEPRECATED);
       return new $driver_class($this, $this->connection);
     }
     return new $extender_name($this, $this->connection);

diff --git a/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php b/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php
index 05b7b87b..29e93808 100644
--- a/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php
@@ -1217,7 +1217,16 @@ public function testToString() {

     $figures = $this->figures;

-    $expected = <<<EOF
+    $expected = $this->connection->select("entity_test_mulrev", "base_table");
+    $expected->addField("base_table", "revision_id", "revision_id");
+    $expected->addField("base_table", "id", "id");
+    $expected->join("entity_test_mulrev__$figures", "entity_test_mulrev__$figures", "entity_test_mulrev__$figures.entity_id = base_table.id");
+    $expected->join("entity_test_mulrev__$figures", "entity_test_mulrev__{$figures}_2", "entity_test_mulrev__{$figures}_2.entity_id = base_table.id");
+    $expected->leftJoin("entity_test_mulrev__$figures", "entity_test_mulrev__{$figures}_3", "entity_test_mulrev__{$figures}_3.entity_id = base_table.id");
+    $expected->orderBy("base_table.id");
+
+
+/*    $expected = <<<EOF
 SELECT base_table.revision_id AS revision_id, base_table.id AS id
 FROM
 {entity_test_mulrev} base_table
@@ -1229,10 +1238,13 @@ public function testToString() {
 EOF;

     // Apply table prefixes to the expected sql.
-    $expected = \Drupal::database()->prefixTables($expected);
+    $expected = \Drupal::database()->prefixTables($expected);*/
+
     // PostgreSQL adds " NULLS FIRST" to the end of the query so
     // assertContains() is used for maximum compatibility.
-    $this->assertContains($expected, (string) $query);
+
+    $this->assertSame((string) $expected, (string) $query);
+    $this->assertEquals($expected, $query);
   }

 }

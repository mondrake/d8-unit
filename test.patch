diff --git a/core/phpunit.xml.dist b/core/phpunit.xml.dist
index 4bfeb0086f..c864b14357 100644
--- a/core/phpunit.xml.dist
+++ b/core/phpunit.xml.dist
@@ -28,7 +28,7 @@
     <!-- Example SIMPLETEST_DB value: mysql://username:password@localhost/database_name#table_prefix -->
     <env name="SIMPLETEST_DB" value=""/>
     <!-- Example BROWSERTEST_OUTPUT_DIRECTORY value: /path/to/webroot/sites/simpletest/browser_output -->
-    <env name="BROWSERTEST_OUTPUT_DIRECTORY" value=""/>
+    <!-- <env name="BROWSERTEST_OUTPUT_DIRECTORY" value=""/> -->
     <!-- To avoid overcrowding the output in CI environments, browser tests
      will not print the individual links in the test run report by default.
      The output in Drupal testing environment is saved as an artifact that
@@ -65,6 +65,10 @@
     <!-- Example for changing the driver args to webdriver tests MINK_DRIVER_ARGS_WEBDRIVER value: '["chrome", { "goog:chromeOptions": { "w3c": false } }, "http://localhost:4444/wd/hub"]' For using the Firefox browser, replace "chrome" with "firefox" -->
     <env name="MINK_DRIVER_ARGS_WEBDRIVER" value=""/>
   </php>
+  <extensions>
+    <!-- Functional tests HTML output logging. -->
+    <bootstrap class="Drupal\TestTools\Extension\HtmlLogging\HtmlOutputLogger"/>
+  </extensions>
   <testsuites>
     <testsuite name="unit">
       <directory>tests/Drupal/Tests</directory>
diff --git a/core/tests/Drupal/TestTools/Extension/HtmlLogging/HtmlOutputLogger.php b/core/tests/Drupal/TestTools/Extension/HtmlLogging/HtmlOutputLogger.php
index 10a8f5a49b..44c1f2ee3a 100644
--- a/core/tests/Drupal/TestTools/Extension/HtmlLogging/HtmlOutputLogger.php
+++ b/core/tests/Drupal/TestTools/Extension/HtmlLogging/HtmlOutputLogger.php
@@ -4,21 +4,24 @@
 
 namespace Drupal\TestTools\Extension\HtmlLogging;
 
-use PHPUnit\Event\Facade;
 use PHPUnit\Event\TestRunner\Finished as TestRunnerFinished;
 use PHPUnit\Event\TestRunner\Started as TestRunnerStarted;
+use PHPUnit\Runner\Extension\Extension;
+use PHPUnit\Runner\Extension\Facade;
+use PHPUnit\Runner\Extension\ParameterCollection;
+use PHPUnit\TextUI\Configuration\Configuration;
 
 /**
  * Drupal's extension for providing HTML output results for functional tests.
  *
  * @internal
  */
-final class HtmlOutputLogger {
+final class HtmlOutputLogger implements Extension {
 
   /**
-   * The singleton instance.
+   * The status of the extension.
    */
-  private static ?self $instance = NULL;
+  private static bool $enabled = FALSE;
 
   /**
    * A file with list of links to HTML pages generated.
@@ -26,43 +29,42 @@ final class HtmlOutputLogger {
   private ?string $browserOutputFile = NULL;
 
   /**
-   * @throws \PHPUnit\Event\EventFacadeIsSealedException
-   * @throws \PHPUnit\Util\Exception
-   * @throws \PHPUnit\Event\UnknownSubscriberTypeException
-   * @throws \RuntimeException
+   * A file with list of links to HTML pages generated.
    */
-  private function __construct(
-    private readonly string $outputDirectory,
-    private readonly bool $outputVerbose,
-    private readonly Facade $facade,
-  ) {
-    $this->facade->registerSubscriber(new TestRunnerStartedSubscriber($this));
-    $this->facade->registerSubscriber(new TestRunnerFinishedSubscriber($this));
-  }
+  private string $outputDirectory;
 
   /**
-   * Initializes the extension.
+   * Verbosity of the final report.
    *
-   * @param string $outputDirectory
-   *   The directory where the HTML pages should be generated.
-   * @param bool $outputVerbose
-   *   If TRUE, a list of links generated will be output at the end of the test
-   *   run; if FALSE, only a summary with the count of pages generated.
-   *
-   * @throws \PHPUnit\Event\EventFacadeIsSealedException
-   * @throws \PHPUnit\Util\Exception
-   * @throws \PHPUnit\Event\UnknownSubscriberTypeException
-   * @throws \RuntimeException
+   * If TRUE, a list of links generated will be output at the end of the test
+   * run; if FALSE, only a summary with the count of pages generated.
    */
-  public static function init(string $outputDirectory, bool $outputVerbose): void {
-    if (self::$instance === NULL) {
-      $realDirectory = realpath($outputDirectory);
-      if ($realDirectory === FALSE || !is_dir($realDirectory) || !is_writable($realDirectory)) {
-        print "HTML output directory {$outputDirectory} is not a writable directory.\n\n";
-        return;
-      }
-      self::$instance = new self($realDirectory, $outputVerbose, Facade::instance());
+  private bool $outputVerbose;
+
+  /**
+   * {@inheritdoc}
+   */
+  public function bootstrap(
+    Configuration $configuration,
+    Facade $facade,
+    ParameterCollection $parameters,
+  ): void {
+    $browserTestOutputDirectory = getenv('BROWSERTEST_OUTPUT_DIRECTORY');
+dump($browserTestOutputDirectory);
+    if ($browserTestOutputDirectory === FALSE || $browserTestOutputDirectory === "") {
+      return;
+    }
+    $realDirectory = realpath($browserTestOutputDirectory);
+dump($realDirectory);
+    if ($realDirectory === FALSE || !is_dir($realDirectory) || !is_writable($realDirectory)) {
+      print "HTML output directory {$browserTestOutputDirectory} is not a writable directory.\n\n";
+      return;
     }
+    $this->outputDirectory = $realDirectory;
+    $this->outputVerbose = (bool) getenv('BROWSERTEST_OUTPUT_VERBOSE') ?? FALSE;
+    $facade->registerSubscriber(new TestRunnerStartedSubscriber($this));
+    $facade->registerSubscriber(new TestRunnerFinishedSubscriber($this));
+    self::$enabled = TRUE;
   }
 
   /**
@@ -72,7 +74,7 @@ public static function init(string $outputDirectory, bool $outputVerbose): void
    *   TRUE if enabled, FALSE if disabled.
    */
   public static function isEnabled(): bool {
-    return self::$instance !== NULL;
+    return self::$enabled;
   }
 
   /**
@@ -99,6 +101,7 @@ public function testRunnerStarted(TestRunnerStarted $event): void {
     if (!self::isEnabled()) {
       throw new \RuntimeException("HTML output is not enabled");
     }
+dump(__METHOD__);
 
     // Convert to a canonicalized absolute pathname just in case the current
     // working directory is changed.
@@ -121,6 +124,7 @@ public function testRunnerFinished(TestRunnerFinished $event): void {
     if (!self::isEnabled()) {
       throw new \RuntimeException("HTML output is not enabled");
     }
+    dump(__METHOD__);
 
     $contents = file_get_contents($this->browserOutputFile);
     if ($contents) {
diff --git a/core/tests/bootstrap.php b/core/tests/bootstrap.php
index 0d66341040..db54e2dce9 100644
--- a/core/tests/bootstrap.php
+++ b/core/tests/bootstrap.php
@@ -9,7 +9,6 @@
 
 use Drupal\TestTools\ErrorHandler\BootstrapErrorHandler;
 use Drupal\TestTools\Extension\DeprecationBridge\DeprecationHandler;
-use Drupal\TestTools\Extension\HtmlLogging\HtmlOutputLogger;
 use PHPUnit\Runner\ErrorHandler as PhpUnitErrorHandler;
 use Symfony\Component\ErrorHandler\DebugClassLoader;
 
@@ -178,12 +177,6 @@ class_alias('\Drupal\Tests\DocumentElement', '\Behat\Mink\Element\DocumentElemen
   DebugClassLoader::enable();
 }
 
-// Functional tests HTML output logging.
-$browserTestOutputDirectory = getenv('BROWSERTEST_OUTPUT_DIRECTORY');
-if ($browserTestOutputDirectory !== FALSE) {
-  HtmlOutputLogger::init($browserTestOutputDirectory, (bool) getenv('BROWSERTEST_OUTPUT_VERBOSE') ?? FALSE);
-}
-
 // Drupal expects to be run from its root directory. This ensures all test types
 // are consistent.
 chdir(dirname(__DIR__, 2));

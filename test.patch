diff --git a/core/core.services.yml b/core/core.services.yml
index 6ac179594b..c1125ac735 100644
--- a/core/core.services.yml
+++ b/core/core.services.yml
@@ -1750,3 +1750,7 @@ services:
   pager.parameters:
     class: Drupal\Core\Pager\PagerParameters
     arguments: ['@request_stack']
+  select_extender_factory.pager:
+    class: Drupal\Core\Database\Query\PagerSelectExtenderFactory
+    tags:
+      - { name: backend_overridable }
diff --git a/core/lib/Drupal/Core/Database/Query/PagerSelectExtenderFactory.php b/core/lib/Drupal/Core/Database/Query/PagerSelectExtenderFactory.php
new file mode 100644
index 0000000000..4e2be63f45
--- /dev/null
+++ b/core/lib/Drupal/Core/Database/Query/PagerSelectExtenderFactory.php
@@ -0,0 +1,27 @@
+<?php
+
+namespace Drupal\Core\Database\Query;
+
+use Drupal\Core\Database\Connection;
+
+/**
+ * Select extender factory for pager queries.
+ */
+class PagerSelectExtenderFactory {
+
+  /**
+   * Returns a query extender for pager queries.
+   *
+   * @param \Drupal\Core\Database\Query\SelectInterface $query
+   *   Select query object.
+   * @param \Drupal\Core\Database\Connection $connection
+   *   Database connection object.
+   *
+   * @return \Drupal\Core\Database\Query\PagerSelectExtender
+   *   A query extender for pager queries.
+   */
+  public function get(SelectInterface $query, Connection $connection): PagerSelectExtender {
+    return new PagerSelectExtender($query, $connection);
+  }
+
+}
diff --git a/core/lib/Drupal/Core/Database/Query/Select.php b/core/lib/Drupal/Core/Database/Query/Select.php
index 94cbf92b14..c87dd33f2d 100644
--- a/core/lib/Drupal/Core/Database/Query/Select.php
+++ b/core/lib/Drupal/Core/Database/Query/Select.php
@@ -318,7 +318,22 @@ public function havingCompile(Connection $connection) {
    * {@inheritdoc}
    */
   public function extend($extender_name) {
+    if ($extender_name === PagerSelectExtender::class) {
+      @trigger_error("Passing $extender_name to " . __METHOD__ . '() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use the appropriate service. See https://www.drupal.org/node/1234567', E_USER_DEPRECATED);
+    }
+
+    // BC layer.
+    // @todo remove in Drupal 10.
+    // @see
     $parts = explode('\\', $extender_name);
+
+    if (count($parts) === 1) {
+      return \Drupal::service('select_extender_factory.' . $extender_name)->get($this, $this->connection);
+    }
+
+    // BC layer.
+    // @todo remove in Drupal 10.
+    // @see
     $class = end($parts);
     $driver_class = $this->connection->getDriverClass($class);
     if ($driver_class !== $class) {
diff --git a/core/modules/comment/src/CommentStorage.php b/core/modules/comment/src/CommentStorage.php
index 1b2c1b843a..832b9c1529 100644
--- a/core/modules/comment/src/CommentStorage.php
+++ b/core/modules/comment/src/CommentStorage.php
@@ -288,7 +288,7 @@ public function loadThread(EntityInterface $entity, $field_name, $mode, $comment
       ->addMetaData('field_name', $field_name);
 
     if ($comments_per_page) {
-      $query = $query->extend(PagerSelectExtender::class)
+      $query = $query->extend('pager')
         ->limit($comments_per_page);
       if ($pager_id) {
         $query->element($pager_id);
diff --git a/core/modules/system/tests/src/Functional/Database/SelectPagerDefaultTest.php b/core/modules/system/tests/src/Functional/Database/SelectPagerDefaultTest.php
index e261f6e9a3..6f4a657aff 100644
--- a/core/modules/system/tests/src/Functional/Database/SelectPagerDefaultTest.php
+++ b/core/modules/system/tests/src/Functional/Database/SelectPagerDefaultTest.php
@@ -4,7 +4,6 @@
 
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Database\Database;
-use Drupal\Core\Database\Query\PagerSelectExtender;
 use Symfony\Component\HttpFoundation\Request;
 
 /**
@@ -95,7 +94,7 @@ public function testOddPagerQuery() {
   public function testInnerPagerQuery() {
     $connection = Database::getConnection();
     $query = $connection->select('test', 't')
-      ->extend(PagerSelectExtender::class);
+      ->extend('pager');
     $query
       ->fields('t', ['age'])
       ->orderBy('age')
@@ -118,7 +117,7 @@ public function testInnerPagerQuery() {
    */
   public function testHavingPagerQuery() {
     $query = Database::getConnection()->select('test', 't')
-      ->extend(PagerSelectExtender::class);
+      ->extend('pager');
     $query
       ->fields('t', ['name'])
       ->orderBy('name')
@@ -145,7 +144,7 @@ public function testElementNumbers() {
 
     $connection = Database::getConnection();
     $query = $connection->select('test', 't')
-      ->extend(PagerSelectExtender::class)
+      ->extend('pager')
       ->element(2)
       ->fields('t', ['name'])
       ->orderBy('age')
@@ -161,7 +160,7 @@ public function testElementNumbers() {
     // Setting an element smaller than the previous one should not collide with
     // the existing pager.
     $query = $connection->select('test', 't')
-      ->extend(PagerSelectExtender::class)
+      ->extend('pager')
       ->element(1)
       ->fields('t', ['name'])
       ->orderBy('age')
@@ -175,7 +174,7 @@ public function testElementNumbers() {
     $this->assertEquals('George', $name, 'Pager query #2 with a specified element ID returned the correct results.');
 
     $query = $connection->select('test', 't')
-      ->extend(PagerSelectExtender::class)
+      ->extend('pager')
       ->fields('t', ['name'])
       ->orderBy('age')
       ->limit(1);
diff --git a/core/tests/Drupal/KernelTests/Core/Database/SelectComplexTest.php b/core/tests/Drupal/KernelTests/Core/Database/SelectComplexTest.php
index 44ef6ccb47..401595236a 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/SelectComplexTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/SelectComplexTest.php
@@ -4,7 +4,6 @@
 
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Database\Database;
-use Drupal\Core\Database\Query\PagerSelectExtender;
 use Drupal\Core\Database\RowCountException;
 use Drupal\user\Entity\User;
 
@@ -211,7 +210,7 @@ public function testCountQuery() {
    */
   public function testHavingCountQuery() {
     $query = $this->connection->select('test')
-      ->extend(PagerSelectExtender::class)
+      ->extend('pager')
       ->groupBy('age')
       ->having('[age] + 1 > 0');
     $query->addField('test', 'age');
diff --git a/core/tests/Drupal/KernelTests/Core/Database/SelectExtenderTest.php b/core/tests/Drupal/KernelTests/Core/Database/SelectExtenderTest.php
index 5a23f9a250..1372a68d96 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/SelectExtenderTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/SelectExtenderTest.php
@@ -30,12 +30,12 @@ public function providerExtend(): array {
       [
         'Drupal\Core\Database\Query\PagerSelectExtender',
         'Drupal\corefake\Driver\Database\corefake',
-        'Drupal\Core\Database\Query\PagerSelectExtender',
+        'pager',
       ],
       [
         'Drupal\Core\Database\Query\PagerSelectExtender',
         'Drupal\corefake\Driver\Database\corefake',
-        '\Drupal\Core\Database\Query\PagerSelectExtender',
+        'pager',
       ],
       [
         'Drupal\Core\Database\Query\TableSortExtender',
@@ -70,12 +70,12 @@ public function providerExtend(): array {
       [
         'Drupal\corefake\Driver\Database\corefakeWithAllCustomClasses\PagerSelectExtender',
         'Drupal\corefake\Driver\Database\corefakeWithAllCustomClasses',
-        'Drupal\Core\Database\Query\PagerSelectExtender',
+        'pager',
       ],
       [
         'Drupal\corefake\Driver\Database\corefakeWithAllCustomClasses\PagerSelectExtender',
         'Drupal\corefake\Driver\Database\corefakeWithAllCustomClasses',
-        '\Drupal\Core\Database\Query\PagerSelectExtender',
+        'pager',
       ],
       [
         'Drupal\corefake\Driver\Database\corefakeWithAllCustomClasses\TableSortExtender',

diff --git a/core/lib/Drupal/Component/Render/FormattableMarkup.php b/core/lib/Drupal/Component/Render/FormattableMarkup.php
index 404cf7e6bd..d6c42f2b63 100644
--- a/core/lib/Drupal/Component/Render/FormattableMarkup.php
+++ b/core/lib/Drupal/Component/Render/FormattableMarkup.php
@@ -205,6 +205,7 @@ protected static function placeholderFormat($string, array $args) {
           // contexts, may still be an instance of
           // \Drupal\Component\Render\MarkupInterface, so this placeholder type
           // must not be used within HTML attributes, JavaScript, or CSS.
+if ($value === null) throw new \Exception(var_export([$string, $args, $key], true));
           $args[$key] = static::placeholderEscape($value);
           break;
 
@@ -258,7 +259,7 @@ protected static function placeholderFormat($string, array $args) {
    * @return string
    *   The properly escaped replacement value.
    */
-  protected static function placeholderEscape($value) {
+  protected static function placeholderEscape(string $value) {
     return $value instanceof MarkupInterface ? (string) $value : Html::escape($value);
   }
 
diff --git a/core/lib/Drupal/Component/Utility/Html.php b/core/lib/Drupal/Component/Utility/Html.php
index f9bb8e6a23..efc8eb8118 100644
--- a/core/lib/Drupal/Component/Utility/Html.php
+++ b/core/lib/Drupal/Component/Utility/Html.php
@@ -420,7 +420,7 @@ public static function decodeEntities($text) {
    *
    * @ingroup sanitization
    */
-  public static function escape($text) {
+  public static function escape(string $text) {
     return htmlspecialchars($text, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');
   }
 

diff --git a/core/lib/Drupal/Core/Database/Connection.php b/core/lib/Drupal/Core/Database/Connection.php
index 97b528c25b..835ccdb6dc 100644
--- a/core/lib/Drupal/Core/Database/Connection.php
+++ b/core/lib/Drupal/Core/Database/Connection.php
@@ -363,6 +363,7 @@ protected function defaultOptions() {
       'fetch' => \PDO::FETCH_OBJ,
       'allow_delimiter_in_query' => FALSE,
       'allow_square_brackets' => FALSE,
+      'placeholder_format' => PlaceholderType::Named,
       'pdo' => [],
     ];
   }
diff --git a/core/lib/Drupal/Core/Database/PlaceholderType.php b/core/lib/Drupal/Core/Database/PlaceholderType.php
new file mode 100644
index 0000000000..7190103ba9
--- /dev/null
+++ b/core/lib/Drupal/Core/Database/PlaceholderType.php
@@ -0,0 +1,18 @@
+<?php
+
+declare(strict_types=1);
+
+namespace Drupal\Core\Database;
+
+/**
+ * Enumeration of the types of possible placeholders in statements.
+ */
+enum PlaceholderType {
+
+  // Placeholders in the named format ':placeholder'.
+  case Named;
+
+  // Placeholders in the positional format '?'.
+  case Positional;
+
+}
diff --git a/core/lib/Drupal/Core/Database/Query/Insert.php b/core/lib/Drupal/Core/Database/Query/Insert.php
index 58bd8d1811..8ca469660e 100644
--- a/core/lib/Drupal/Core/Database/Query/Insert.php
+++ b/core/lib/Drupal/Core/Database/Query/Insert.php
@@ -132,7 +132,7 @@ public function __toString() {
     $placeholders = [];
     $placeholders = array_pad($placeholders, count($this->defaultFields), 'default');
     $placeholders = array_pad($placeholders, count($this->insertFields), '?');
-
+dump([__METHOD__, $this->queryOptions, $comments . 'INSERT INTO {' . $this->table . '} (' . implode(', ', $insert_fields) . ') VALUES (' . implode(', ', $placeholders) . ')']);
     return $comments . 'INSERT INTO {' . $this->table . '} (' . implode(', ', $insert_fields) . ') VALUES (' . implode(', ', $placeholders) . ')';
   }
 
diff --git a/core/lib/Drupal/Core/Database/Query/Query.php b/core/lib/Drupal/Core/Database/Query/Query.php
index 37bce1a8f9..2ba2ed9d61 100644
--- a/core/lib/Drupal/Core/Database/Query/Query.php
+++ b/core/lib/Drupal/Core/Database/Query/Query.php
@@ -78,6 +78,7 @@ public function __construct(Connection $connection, $options) {
     $this->connectionTarget = $this->connection->getTarget();
 
     $this->queryOptions = $options;
+    $this->queryOptions['placeholder_format'] ??= $this->connection->defaultOptions()['placeholder_format'];
   }
 
   /**
diff --git a/core/modules/mysql/src/Driver/Database/mysql/Insert.php b/core/modules/mysql/src/Driver/Database/mysql/Insert.php
index e14e6d0d28..dbe3c2cf7f 100644
--- a/core/modules/mysql/src/Driver/Database/mysql/Insert.php
+++ b/core/modules/mysql/src/Driver/Database/mysql/Insert.php
@@ -68,12 +68,14 @@ public function __toString() {
     // pass it back, as any remaining options are irrelevant.
     if (!empty($this->fromQuery)) {
       $insert_fields_string = $insert_fields ? ' (' . implode(', ', $insert_fields) . ') ' : ' ';
+dump([__METHOD__, 'a', $comments . 'INSERT INTO {' . $this->table . '}' . $insert_fields_string . $this->fromQuery]);
       return $comments . 'INSERT INTO {' . $this->table . '}' . $insert_fields_string . $this->fromQuery;
     }
 
     $query = $comments . 'INSERT INTO {' . $this->table . '} (' . implode(', ', $insert_fields) . ') VALUES ';
 
     $values = $this->getInsertPlaceholderFragment($this->insertValues, $this->defaultFields);
+dump([__METHOD__, 'b', $this->queryOptions, $query, $values]);
     $query .= implode(', ', $values);
 
     return $query;

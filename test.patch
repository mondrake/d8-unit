diff --git a/core/lib/Drupal/Component/FileCache/FileCacheFactory.php b/core/lib/Drupal/Component/FileCache/FileCacheFactory.php
index ca68757bc8a5237aa3dfa138ad2433685ec1b198..b3da4780dbac40dc8b85b23440bc126adff65ace 100644
--- a/core/lib/Drupal/Component/FileCache/FileCacheFactory.php
+++ b/core/lib/Drupal/Component/FileCache/FileCacheFactory.php
@@ -41,7 +41,7 @@ class FileCacheFactory {
   public static function get($collection, $default_configuration = []) {
     // If there is a special key in the configuration, disable FileCache completely.
     if (!empty(static::$configuration[static::DISABLE_CACHE])) {
-      return new NullFileCache('', '');
+      return new NullFileCache();
     }
 
     $configuration = [];
diff --git a/core/lib/Drupal/Component/FileCache/NullFileCache.php b/core/lib/Drupal/Component/FileCache/NullFileCache.php
index e413038e75152bc38c366341c6f47c162ed278a8..fd7d809e69ae3cfde90b9c0acf2317e20b5a71f8 100644
--- a/core/lib/Drupal/Component/FileCache/NullFileCache.php
+++ b/core/lib/Drupal/Component/FileCache/NullFileCache.php
@@ -7,23 +7,6 @@
  */
 class NullFileCache implements FileCacheInterface {
 
-  /**
-   * Constructs a FileCache object.
-   *
-   * @param string $prefix
-   *   A prefix that is used as a prefix, should be set to a secure, unique key
-   *   to prevent cache pollution by a third party.
-   * @param string $collection
-   *   A collection identifier to ensure that the same files could be cached for
-   *   different purposes without clashing.
-   * @param string|null $cache_backend_class
-   *   (optional) The class that should be used as cache backend.
-   * @param array $cache_backend_configuration
-   *   (optional) The configuration for the backend class.
-   */
-  public function __construct($prefix, $collection, $cache_backend_class = NULL, array $cache_backend_configuration = []) {
-  }
-
   /**
    * {@inheritdoc}
    */
diff --git a/core/lib/Drupal/Core/Cache/NullBackend.php b/core/lib/Drupal/Core/Cache/NullBackend.php
index b0077a50e36444a338773d61441319863c8b2ae0..b607aa99edfb1beaacc9d222e15f02e84fdfdf5d 100644
--- a/core/lib/Drupal/Core/Cache/NullBackend.php
+++ b/core/lib/Drupal/Core/Cache/NullBackend.php
@@ -17,14 +17,6 @@
  */
 class NullBackend implements CacheBackendInterface {
 
-  /**
-   * Constructs a NullBackend object.
-   *
-   * @param string $bin
-   *   The cache bin for which the object is created.
-   */
-  public function __construct($bin) {}
-
   /**
    * {@inheritdoc}
    */
diff --git a/core/lib/Drupal/Core/Cache/NullBackendFactory.php b/core/lib/Drupal/Core/Cache/NullBackendFactory.php
index 909b10531785cb43b57f037a0962d721e9bce33d..1d75247a204526238f1fa61476c862487bf9692a 100644
--- a/core/lib/Drupal/Core/Cache/NullBackendFactory.php
+++ b/core/lib/Drupal/Core/Cache/NullBackendFactory.php
@@ -8,7 +8,7 @@ class NullBackendFactory implements CacheFactoryInterface {
    * {@inheritdoc}
    */
   public function get($bin) {
-    return new NullBackend($bin);
+    return new NullBackend();
   }
 
 }
diff --git a/core/lib/Drupal/Core/Queue/Memory.php b/core/lib/Drupal/Core/Queue/Memory.php
index ba9d2494dbe7d9d6526a9b7f9d040d195a211e8e..f66b5cf5ce485f4d6fba2613212672ff0e898a7a 100644
--- a/core/lib/Drupal/Core/Queue/Memory.php
+++ b/core/lib/Drupal/Core/Queue/Memory.php
@@ -29,11 +29,8 @@ class Memory implements QueueInterface {
 
   /**
    * Constructs a Memory object.
-   *
-   * @param string $name
-   *   An arbitrary string. The name of the queue to work with.
    */
-  public function __construct($name) {
+  public function __construct() {
     $this->queue = [];
     $this->idSequence = 0;
   }
diff --git a/core/lib/Drupal/Core/Template/TwigEnvironment.php b/core/lib/Drupal/Core/Template/TwigEnvironment.php
index 258d9c0222231ca9130c6f45e6c96f1122d0314a..6719a1c6e955875b401e5c7621371e678db136b2 100644
--- a/core/lib/Drupal/Core/Template/TwigEnvironment.php
+++ b/core/lib/Drupal/Core/Template/TwigEnvironment.php
@@ -28,13 +28,6 @@ class TwigEnvironment extends Environment {
    */
   const CACHE_PREFIX_METADATA_KEY = 'twig_extension_hash_prefix';
 
-  /**
-   * The state service.
-   *
-   * @var \Drupal\Core\State\StateInterface
-   */
-  protected $state;
-
   /**
    * Static cache of template classes.
    *
@@ -66,9 +59,14 @@ class TwigEnvironment extends Environment {
    * @param array $options
    *   The options for the Twig environment.
    */
-  public function __construct($root, CacheBackendInterface $cache, $twig_extension_hash, StateInterface $state, LoaderInterface $loader, array $options = []) {
-    $this->state = $state;
-
+  public function __construct(
+    protected string $root,
+    CacheBackendInterface $cache,
+    $twig_extension_hash,
+    protected StateInterface $state,
+    LoaderInterface $loader,
+    array $options = []
+  ) {
     $this->templateClasses = [];
 
     $options += [
diff --git a/core/lib/Drupal/Core/Test/TestRunnerKernel.php b/core/lib/Drupal/Core/Test/TestRunnerKernel.php
index e1729f8250100c7c0f14cde4d5244471d697a4e5..4818b58f770b4d07eb0ea0d0048b9cac6e60e70f 100644
--- a/core/lib/Drupal/Core/Test/TestRunnerKernel.php
+++ b/core/lib/Drupal/Core/Test/TestRunnerKernel.php
@@ -28,7 +28,8 @@ public function __construct($environment, $class_loader, $allow_dumping = FALSE,
     // Force $allow_dumping to FALSE, because the test runner kernel should
     // always have to rebuild its container, and potentially avoid isolation
     // issues against the tests.
-    parent::__construct($environment, $class_loader, FALSE, $app_root);
+    $allow_dumping = FALSE;
+    parent::__construct($environment, $class_loader, $allow_dumping, $app_root);
 
     // Prime the module list and corresponding Extension objects.
     // @todo Remove System module. Needed because
diff --git a/core/modules/link/src/Plugin/migrate/process/FieldLink.php b/core/modules/link/src/Plugin/migrate/process/FieldLink.php
index c3efed474d41e7bf2bc4a7d65bb4dee8f9b31748..c319b6e5d23c54cc324774a89878504958bfdaa3 100644
--- a/core/modules/link/src/Plugin/migrate/process/FieldLink.php
+++ b/core/modules/link/src/Plugin/migrate/process/FieldLink.php
@@ -2,7 +2,6 @@
 
 namespace Drupal\link\Plugin\migrate\process;
 
-use Drupal\migrate\Plugin\MigrationInterface;
 use Drupal\migrate\MigrateExecutableInterface;
 use Drupal\migrate\ProcessPluginBase;
 use Drupal\migrate\Row;
@@ -42,7 +41,7 @@ class FieldLink extends ProcessPluginBase {
   /**
    * {@inheritdoc}
    */
-  public function __construct(array $configuration, $plugin_id, $plugin_definition, MigrationInterface $migration) {
+  public function __construct(array $configuration, $plugin_id, $plugin_definition) {
     $configuration += ['uri_scheme' => 'http://'];
     parent::__construct($configuration, $plugin_id, $plugin_definition);
   }
diff --git a/core/modules/link/tests/src/Unit/Plugin/migrate/process/FieldLinkTest.php b/core/modules/link/tests/src/Unit/Plugin/migrate/process/FieldLinkTest.php
index 1142ec0c2005193b90ea6ecb852b2cbda6e7dff6..c7bba839e33b5788f40d1ce7ffea8fe65834f0f5 100644
--- a/core/modules/link/tests/src/Unit/Plugin/migrate/process/FieldLinkTest.php
+++ b/core/modules/link/tests/src/Unit/Plugin/migrate/process/FieldLinkTest.php
@@ -4,7 +4,6 @@
 
 use Drupal\link\Plugin\migrate\process\FieldLink;
 use Drupal\migrate\MigrateExecutableInterface;
-use Drupal\migrate\Plugin\MigrationInterface;
 use Drupal\migrate\Row;
 use Drupal\Tests\UnitTestCase;
 
@@ -19,7 +18,7 @@ class FieldLinkTest extends UnitTestCase {
    * @dataProvider canonicalizeUriDataProvider
    */
   public function testCanonicalizeUri($url, $expected, $configuration = []) {
-    $link_plugin = new FieldLink($configuration, '', [], $this->createMock(MigrationInterface::class));
+    $link_plugin = new FieldLink($configuration, '', []);
     $transformed = $link_plugin->transform([
       'url' => $url,
       'title' => '',
@@ -109,7 +108,7 @@ public function canonicalizeUriDataProvider() {
    * Tests the attributes that are deeply serialized are discarded.
    */
   public function testCanonicalizeUriSerialized() {
-    $link_plugin = new FieldLink([], '', [], $this->createMock(MigrationInterface::class));
+    $link_plugin = new FieldLink([], '', []);
     $migrate_executable = $this->createMock(MigrateExecutableInterface::class);
     $row = new Row();
 
diff --git a/core/modules/media/tests/src/Unit/ResourceFetcherTest.php b/core/modules/media/tests/src/Unit/ResourceFetcherTest.php
index 8cd96683c9fbe36d1e4ac8d96bf0307d2afaed3e..63f04e6f34ddc441a9b9bb90e5e4c4f8a11d2171 100644
--- a/core/modules/media/tests/src/Unit/ResourceFetcherTest.php
+++ b/core/modules/media/tests/src/Unit/ResourceFetcherTest.php
@@ -43,7 +43,7 @@ public function testFetchTimeout(): void {
     $fetcher = new ResourceFetcher(
       $client->reveal(),
       $this->createMock('\Drupal\media\OEmbed\ProviderRepositoryInterface'),
-      new NullBackend('default')
+      new NullBackend()
     );
     $fetcher->fetchResource($url);
   }
@@ -80,7 +80,7 @@ public function testUnknownContentTypeHeader(): void {
     ]);
     $providers = $this->createMock('\Drupal\media\OEmbed\ProviderRepositoryInterface');
 
-    $fetcher = new ResourceFetcher($client, $providers, new NullBackend('default'));
+    $fetcher = new ResourceFetcher($client, $providers, new NullBackend());
     /** @var \Drupal\media\OEmbed\Resource $resource */
     $resource = $fetcher->fetchResource('valid');
     // The resource should have been successfully decoded as JSON.
diff --git a/core/modules/menu_link_content/src/Form/MenuLinkContentForm.php b/core/modules/menu_link_content/src/Form/MenuLinkContentForm.php
index 6bffb46a373fe41077b9e092c654fb5a0cf7e60f..9dabd4542098193d09307d6867271104d43466b1 100644
--- a/core/modules/menu_link_content/src/Form/MenuLinkContentForm.php
+++ b/core/modules/menu_link_content/src/Form/MenuLinkContentForm.php
@@ -26,40 +26,31 @@ class MenuLinkContentForm extends ContentEntityForm {
    */
   protected $entity;
 
-  /**
-   * The parent form selector service.
-   *
-   * @var \Drupal\Core\Menu\MenuParentFormSelectorInterface
-   */
-  protected $menuParentSelector;
-
-  /**
-   * The path validator.
-   *
-   * @var \Drupal\Core\Path\PathValidatorInterface
-   */
-  protected $pathValidator;
-
   /**
    * Constructs a MenuLinkContentForm object.
    *
    * @param \Drupal\Core\Entity\EntityRepositoryInterface $entity_repository
    *   The entity repository.
-   * @param \Drupal\Core\Menu\MenuParentFormSelectorInterface $menu_parent_selector
+   * @param \Drupal\Core\Menu\MenuParentFormSelectorInterface $menuParentSelector
    *   The menu parent form selector service.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
    *   The language manager.
-   * @param \Drupal\Core\Path\PathValidatorInterface $path_validator
+   * @param \Drupal\Core\Path\PathValidatorInterface $pathValidator
    *   The path validator.
    * @param \Drupal\Core\Entity\EntityTypeBundleInfoInterface $entity_type_bundle_info
    *   The entity type bundle service.
    * @param \Drupal\Component\Datetime\TimeInterface $time
    *   The time service.
    */
-  public function __construct(EntityRepositoryInterface $entity_repository, MenuParentFormSelectorInterface $menu_parent_selector, LanguageManagerInterface $language_manager, PathValidatorInterface $path_validator, EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL, TimeInterface $time = NULL) {
+  public function __construct(
+    EntityRepositoryInterface $entity_repository,
+    protected MenuParentFormSelectorInterface $menuParentSelector,
+    protected LanguageManagerInterface $languageManager,
+    protected PathValidatorInterface $pathValidator,
+    EntityTypeBundleInfoInterface $entity_type_bundle_info = NULL,
+    TimeInterface $time = NULL
+  ) {
     parent::__construct($entity_repository, $entity_type_bundle_info, $time);
-    $this->menuParentSelector = $menu_parent_selector;
-    $this->pathValidator = $path_validator;
   }
 
   /**
diff --git a/core/modules/migrate/src/MigrateException.php b/core/modules/migrate/src/MigrateException.php
index 526fe043b6f379390ca10c9e1efa8d937879b842..3083a24315d507632d34a8fddef0423b435162d2 100644
--- a/core/modules/migrate/src/MigrateException.php
+++ b/core/modules/migrate/src/MigrateException.php
@@ -50,7 +50,7 @@ class MigrateException extends \Exception {
   public function __construct($message = '', $code = 0, \Exception $previous = NULL, $level = MigrationInterface::MESSAGE_ERROR, $status = MigrateIdMapInterface::STATUS_FAILED) {
     $this->level = $level;
     $this->status = $status;
-    parent::__construct($message);
+    parent::__construct($message, $code, $previous);
   }
 
   /**
diff --git a/core/modules/migrate/src/Plugin/MigrationPluginManager.php b/core/modules/migrate/src/Plugin/MigrationPluginManager.php
index 6f53b87f50434f43b12b691376c54c0395d29f86..dce9a83548251794a3689b1070b9239c00a4fcce 100644
--- a/core/modules/migrate/src/Plugin/MigrationPluginManager.php
+++ b/core/modules/migrate/src/Plugin/MigrationPluginManager.php
@@ -6,7 +6,6 @@
 use Drupal\Component\Plugin\PluginBase;
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
-use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
 use Drupal\Core\Plugin\Discovery\ContainerDerivativeDiscoveryDecorator;
 use Drupal\migrate\Plugin\Discovery\ProviderFilterDecorator;
@@ -49,10 +48,8 @@ class MigrationPluginManager extends DefaultPluginManager implements MigrationPl
    *   The module handler.
    * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
    *   The cache backend for the definitions.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
-   *   The language manager.
    */
-  public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend, LanguageManagerInterface $language_manager) {
+  public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend) {
     $this->factory = new ContainerFactory($this, $this->pluginInterface);
     $this->alterInfo('migration_plugins');
     $this->setCacheBackend($cache_backend, 'migration_plugins', ['migration_plugins']);
diff --git a/core/modules/migrate/tests/src/Unit/MigrationPluginManagerTest.php b/core/modules/migrate/tests/src/Unit/MigrationPluginManagerTest.php
index 49eb4bbd39d56d1bdda54653f3a871d8ea290123..a6034b74b7c479251ca1ed4bb0444ede4f0875ff 100644
--- a/core/modules/migrate/tests/src/Unit/MigrationPluginManagerTest.php
+++ b/core/modules/migrate/tests/src/Unit/MigrationPluginManagerTest.php
@@ -28,8 +28,7 @@ protected function setUp(): void {
     // Get a plugin manager for testing.
     $module_handler = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');
     $cache_backend = $this->createMock('Drupal\Core\Cache\CacheBackendInterface');
-    $language_manager = $this->createMock('Drupal\Core\Language\LanguageManagerInterface');
-    $this->pluginManager = new MigrationPluginManager($module_handler, $cache_backend, $language_manager);
+    $this->pluginManager = new MigrationPluginManager($module_handler, $cache_backend);
   }
 
   /**
diff --git a/core/modules/migrate_drupal/src/MigrationPluginManager.php b/core/modules/migrate_drupal/src/MigrationPluginManager.php
index 0233de21a13c32f7e0de310545b88c16c23150f8..d18cbe7b926f52ab76fbe66a7e6bb165ca33ff50 100644
--- a/core/modules/migrate_drupal/src/MigrationPluginManager.php
+++ b/core/modules/migrate_drupal/src/MigrationPluginManager.php
@@ -25,20 +25,6 @@
  */
 class MigrationPluginManager extends BaseMigrationPluginManager {
 
-  /**
-   * The Migrate source plugin manager service.
-   *
-   * @var \Drupal\migrate\Plugin\MigrateSourcePluginManager
-   */
-  protected $sourceManager;
-
-  /**
-   * The config factory service.
-   *
-   * @var \Drupal\Core\Config\ConfigFactoryInterface
-   */
-  protected $configFactory;
-
   /**
    * The migration tags which will trigger source_module enforcement.
    *
@@ -53,17 +39,21 @@ class MigrationPluginManager extends BaseMigrationPluginManager {
    *   The module handler service.
    * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
    *   The cache backend.
-   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   * @param \Drupal\Core\Language\LanguageManagerInterface $languageManager
    *   The language manager service.
-   * @param \Drupal\migrate\Plugin\MigrateSourcePluginManager $source_manager
+   * @param \Drupal\migrate\Plugin\MigrateSourcePluginManager $sourceManager
    *   The Migrate source plugin manager service.
-   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
    *   The config factory service.
    */
-  public function __construct(ModuleHandlerInterface $module_handler, CacheBackendInterface $cache_backend, LanguageManagerInterface $language_manager, MigrateSourcePluginManager $source_manager, ConfigFactoryInterface $config_factory) {
-    parent::__construct($module_handler, $cache_backend, $language_manager);
-    $this->sourceManager = $source_manager;
-    $this->configFactory = $config_factory;
+  public function __construct(
+    ModuleHandlerInterface $module_handler,
+    CacheBackendInterface $cache_backend,
+    protected LanguageManagerInterface $languageManager,
+    protected MigrateSourcePluginManager $sourceManager,
+    protected ConfigFactoryInterface $configFactory
+  ) {
+    parent::__construct($module_handler, $cache_backend);
   }
 
   /**
diff --git a/core/modules/migrate_drupal/src/Plugin/migrate/EntityReferenceTranslationDeriver.php b/core/modules/migrate_drupal/src/Plugin/migrate/EntityReferenceTranslationDeriver.php
index e66c8a170b0f896ed6904f088a86008ca073c584..fc2c017fa7082e115ea81b79dbb02dfc6f33efde 100644
--- a/core/modules/migrate_drupal/src/Plugin/migrate/EntityReferenceTranslationDeriver.php
+++ b/core/modules/migrate_drupal/src/Plugin/migrate/EntityReferenceTranslationDeriver.php
@@ -47,33 +47,21 @@ class EntityReferenceTranslationDeriver extends DeriverBase implements Container
 
   use StringTranslationTrait;
 
-  /**
-   * The entity field manager.
-   *
-   * @var \Drupal\Core\Entity\EntityFieldManagerInterface
-   */
-  protected $entityFieldManager;
-
-  /**
-   * The entity type manager.
-   *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
-   */
-  protected $entityTypeManager;
-
   /**
    * EntityReferenceTranslationDeriver constructor.
    *
-   * @param string $base_plugin_id
+   * @param string $basePluginId
    *   The base plugin ID.
-   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entity_field_manager
+   * @param \Drupal\Core\Entity\EntityFieldManagerInterface $entityFieldManager
    *   The entity field manager.
-   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
+   * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
-  public function __construct($base_plugin_id, EntityFieldManagerInterface $entity_field_manager, EntityTypeManagerInterface $entity_type_manager) {
-    $this->entityFieldManager = $entity_field_manager;
-    $this->entityTypeManager = $entity_type_manager;
+  public function __construct(
+    protected string $basePluginId,
+    protected EntityFieldManagerInterface $entityFieldManager,
+    protected EntityTypeManagerInterface $entityTypeManager
+  ) {
   }
 
   /**
diff --git a/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntityDeriver.php b/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntityDeriver.php
index 2740441f8a8a05b56d2a7f0d7df88b564fa5ec50..ceb7646a7806f21b63a9beb2d1d5665458002d7f 100644
--- a/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntityDeriver.php
+++ b/core/modules/migrate_drupal/src/Plugin/migrate/source/ContentEntityDeriver.php
@@ -13,23 +13,17 @@
  */
 class ContentEntityDeriver extends DeriverBase implements ContainerDeriverInterface {
 
-  /**
-   * The entity type manager.
-   *
-   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
-   */
-  protected $entityTypeManager;
-
   /**
    * Constructs a new ContentEntityDeriver.
    *
-   * @param string $base_plugin_id
+   * @param string $basePluginId
    *   The base plugin ID.
    * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entityTypeManager
    *   The entity type manager.
    */
-  public function __construct($base_plugin_id, EntityTypeManagerInterface $entityTypeManager) {
-    $this->entityTypeManager = $entityTypeManager;
+  public function __construct(
+    protected string $basePluginId,
+    protected EntityTypeManagerInterface $entityTypeManager) {
   }
 
   /**
diff --git a/core/modules/system/src/Form/CronForm.php b/core/modules/system/src/Form/CronForm.php
index 177d973e6716ee38c384f747b16af16442b8a081..964dcc817dfd88eb482d4179a0265ec89a960d69 100644
--- a/core/modules/system/src/Form/CronForm.php
+++ b/core/modules/system/src/Form/CronForm.php
@@ -22,34 +22,6 @@ class CronForm extends FormBase {
 
   use ConfigFormBaseTrait;
 
-  /**
-   * Stores the state storage service.
-   *
-   * @var \Drupal\Core\State\StateInterface
-   */
-  protected $state;
-
-  /**
-   * The cron service.
-   *
-   * @var \Drupal\Core\CronInterface
-   */
-  protected $cron;
-
-  /**
-   * The date formatter service.
-   *
-   * @var \Drupal\Core\Datetime\DateFormatterInterface
-   */
-  protected $dateFormatter;
-
-  /**
-   * The module handler service.
-   *
-   * @var \Drupal\Core\Extension\ModuleHandlerInterface
-   */
-  protected $moduleHandler;
-
   /**
    * Constructs a CronForm object.
    *
@@ -59,16 +31,19 @@ class CronForm extends FormBase {
    *   The state key value store.
    * @param \Drupal\Core\CronInterface $cron
    *   The cron service.
-   * @param \Drupal\Core\Datetime\DateFormatterInterface $date_formatter
+   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
    *   The date formatter service.
-   * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
+   * @param \Drupal\Core\Extension\ModuleHandlerInterface $moduleHandler
    *   The module handler service.
    */
-  public function __construct(ConfigFactoryInterface $config_factory, StateInterface $state, CronInterface $cron, DateFormatterInterface $date_formatter, ModuleHandlerInterface $module_handler) {
-    $this->state = $state;
-    $this->cron = $cron;
-    $this->dateFormatter = $date_formatter;
-    $this->moduleHandler = $module_handler;
+  public function __construct(
+    ConfigFactoryInterface $config_factory,
+    protected StateInterface $state,
+    protected CronInterface $cron,
+    protected DateFormatterInterface $dateFormatter,
+    protected ModuleHandlerInterface $moduleHandler
+  ) {
+    $this->configFactory = $config_factory;
   }
 
   /**
diff --git a/core/modules/system/tests/modules/lazy_route_provider_install_test/lazy_route_provider_install_test.services.yml b/core/modules/system/tests/modules/lazy_route_provider_install_test/lazy_route_provider_install_test.services.yml
index 2de99d39e124c125f9be2da4457e3229527daf97..89ed9ddacfed7ac33cb7f822c8cabfbb707d5760 100644
--- a/core/modules/system/tests/modules/lazy_route_provider_install_test/lazy_route_provider_install_test.services.yml
+++ b/core/modules/system/tests/modules/lazy_route_provider_install_test/lazy_route_provider_install_test.services.yml
@@ -2,4 +2,3 @@ services:
   plugin.manager.lazy_route_provider_install_test:
     class: '\Drupal\lazy_route_provider_install_test\PluginManager'
     parent: default_plugin_manager
-    arguments: ['@url_generator']
diff --git a/core/modules/system/tests/modules/lazy_route_provider_install_test/src/PluginManager.php b/core/modules/system/tests/modules/lazy_route_provider_install_test/src/PluginManager.php
index cac59a7324ff42f92808736ef4ce41aa7cdc8763..565cb3f5f7e8e562ab8d0029a6fc1a293f282626 100644
--- a/core/modules/system/tests/modules/lazy_route_provider_install_test/src/PluginManager.php
+++ b/core/modules/system/tests/modules/lazy_route_provider_install_test/src/PluginManager.php
@@ -6,7 +6,6 @@
 use Drupal\Core\Cache\CacheBackendInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Plugin\DefaultPluginManager;
-use Drupal\Core\Routing\UrlGeneratorInterface;
 use Drupal\Core\Url;
 
 class PluginManager extends DefaultPluginManager {
@@ -25,15 +24,14 @@ class PluginManager extends DefaultPluginManager {
    *   A cache backend.
    * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_handler
    *   The module handler.
-   * @param \Drupal\Core\Routing\UrlGeneratorInterface $url_generator
-   *   The URL generator.
    */
-  public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler, UrlGeneratorInterface $url_generator) {
+  public function __construct(\Traversable $namespaces, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler) {
     // Generate a URL during construction to prove that URL generation works. If
     // the route was missing an exception would be thrown. This also forces the
     // route provider to be initialized very early during a module install.
     \Drupal::state()->set(__CLASS__, Url::fromRoute('system.admin')->toString());
     parent::__construct('Plugin/LazyRouteProviderInstallTest', $namespaces, $module_handler, NULL, PluginID::class);
+    $this->cacheBackend = $cache_backend;
   }
 
 }
diff --git a/core/modules/system/tests/src/Kernel/System/CronQueueTest.php b/core/modules/system/tests/src/Kernel/System/CronQueueTest.php
index c424552e21afb45e265485477ec02dbf81641b8f..e7e595eec2dddce85e3a393a15de90c059e4fba3 100644
--- a/core/modules/system/tests/src/Kernel/System/CronQueueTest.php
+++ b/core/modules/system/tests/src/Kernel/System/CronQueueTest.php
@@ -66,7 +66,7 @@ protected function setUp(): void {
     $realQueueFactory = $this->container->get('queue');
     $queue_factory = $this->prophesize(get_class($realQueueFactory));
     $database = new DatabaseQueue('cron_queue_test_database_delay_exception', $this->connection);
-    $memory = new Memory('cron_queue_test_memory_delay_exception');
+    $memory = new Memory();
     $queue_factory->get('cron_queue_test_database_delay_exception', Argument::cetera())->willReturn($database);
     $queue_factory->get('cron_queue_test_memory_delay_exception', Argument::cetera())->willReturn($memory);
     $queue_factory->get(Argument::any(), Argument::cetera())->will(function ($args) use ($realQueueFactory) {
diff --git a/core/modules/views/src/Plugin/views/display/DisplayPluginBase.php b/core/modules/views/src/Plugin/views/display/DisplayPluginBase.php
index 11cbaf44901be7c0e09ba1206fa5def80a92956a..90ba0a8b445f3d5e90130d60a92f334e283d4b86 100644
--- a/core/modules/views/src/Plugin/views/display/DisplayPluginBase.php
+++ b/core/modules/views/src/Plugin/views/display/DisplayPluginBase.php
@@ -151,7 +151,8 @@ abstract class DisplayPluginBase extends PluginBase implements DisplayPluginInte
    *   The plugin implementation definition.
    */
   public function __construct(array $configuration, $plugin_id, $plugin_definition) {
-    parent::__construct([], $plugin_id, $plugin_definition);
+    $configuration = [];
+    parent::__construct($configuration, $plugin_id, $plugin_definition);
   }
 
   /**
diff --git a/core/phpstan-baseline.neon b/core/phpstan-baseline.neon
index c6272077f13bbabbbe1996792a1550532abc8a65..326ce852fc1082ef2e35b19c47fa00420636cf1c 100644
--- a/core/phpstan-baseline.neon
+++ b/core/phpstan-baseline.neon
@@ -160,26 +160,6 @@ parameters:
 			count: 3
 			path: lib/Drupal/Component/Diff/Engine/DiffEngine.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\Component\\\\FileCache\\\\NullFileCache has an unused parameter \\$cache_backend_class\\.$#"
-			count: 1
-			path: lib/Drupal/Component/FileCache/NullFileCache.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Component\\\\FileCache\\\\NullFileCache has an unused parameter \\$cache_backend_configuration\\.$#"
-			count: 1
-			path: lib/Drupal/Component/FileCache/NullFileCache.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Component\\\\FileCache\\\\NullFileCache has an unused parameter \\$collection\\.$#"
-			count: 1
-			path: lib/Drupal/Component/FileCache/NullFileCache.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Component\\\\FileCache\\\\NullFileCache has an unused parameter \\$prefix\\.$#"
-			count: 1
-			path: lib/Drupal/Component/FileCache/NullFileCache.php
-
 		-
 			message: "#^Method Drupal\\\\Component\\\\Gettext\\\\PoMemoryWriter\\:\\:getHeader\\(\\) should return Drupal\\\\Component\\\\Gettext\\\\PoHeader but return statement is missing\\.$#"
 			count: 1
@@ -275,11 +255,6 @@ parameters:
 			count: 1
 			path: lib/Drupal/Core/Cache/MemoryBackend.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\Core\\\\Cache\\\\NullBackend has an unused parameter \\$bin\\.$#"
-			count: 1
-			path: lib/Drupal/Core/Cache/NullBackend.php
-
 		-
 			message: "#^Call to deprecated constant REQUEST_TIME\\: Deprecated in drupal\\:8\\.3\\.0 and is removed from drupal\\:10\\.0\\.0\\. Use \\\\Drupal\\:\\:time\\(\\)\\-\\>getRequestTime\\(\\); $#"
 			count: 2
@@ -675,11 +650,6 @@ parameters:
 			count: 1
 			path: lib/Drupal/Core/Menu/MenuTreeStorage.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\Core\\\\Queue\\\\Memory has an unused parameter \\$name\\.$#"
-			count: 1
-			path: lib/Drupal/Core/Queue/Memory.php
-
 		-
 			message: "#^Variable \\$sort in isset\\(\\) always exists and is not nullable\\.$#"
 			count: 1
@@ -740,21 +710,11 @@ parameters:
 			count: 1
 			path: lib/Drupal/Core/Template/AttributeValueBase.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\Core\\\\Template\\\\TwigEnvironment has an unused parameter \\$root\\.$#"
-			count: 1
-			path: lib/Drupal/Core/Template/TwigEnvironment.php
-
 		-
 			message: "#^Call to deprecated constant REQUEST_TIME\\: Deprecated in drupal\\:8\\.3\\.0 and is removed from drupal\\:10\\.0\\.0\\. Use \\\\Drupal\\:\\:time\\(\\)\\-\\>getRequestTime\\(\\); $#"
 			count: 1
 			path: lib/Drupal/Core/Template/TwigPhpStorageCache.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\Core\\\\Test\\\\TestRunnerKernel has an unused parameter \\$allow_dumping\\.$#"
-			count: 1
-			path: lib/Drupal/Core/Test/TestRunnerKernel.php
-
 		-
 			message: "#^Method Drupal\\\\Core\\\\Theme\\\\ThemeInitialization\\:\\:resolveStyleSheetPlaceholders\\(\\) should return string but return statement is missing\\.$#"
 			count: 1
@@ -1485,11 +1445,6 @@ parameters:
 			count: 1
 			path: modules/layout_builder/tests/src/Unit/DefaultsSectionStorageTest.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\link\\\\Plugin\\\\migrate\\\\process\\\\FieldLink has an unused parameter \\$migration\\.$#"
-			count: 1
-			path: modules/link/src/Plugin/migrate/process/FieldLink.php
-
 		-
 			message: "#^Function locale_config_batch_update_components\\(\\) should return array but return statement is missing\\.$#"
 			count: 1
@@ -1590,11 +1545,6 @@ parameters:
 			count: 1
 			path: modules/media_library/tests/src/FunctionalJavascript/EmbeddedFormWidgetTest.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\menu_link_content\\\\Form\\\\MenuLinkContentForm has an unused parameter \\$language_manager\\.$#"
-			count: 1
-			path: modules/menu_link_content/src/Form/MenuLinkContentForm.php
-
 		-
 			message: "#^Method Drupal\\\\menu_link_content\\\\Form\\\\MenuLinkContentForm\\:\\:save\\(\\) should return int but return statement is missing\\.$#"
 			count: 1
@@ -1615,21 +1565,6 @@ parameters:
 			count: 1
 			path: modules/menu_ui/src/MenuForm.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\migrate\\\\MigrateException has an unused parameter \\$code\\.$#"
-			count: 1
-			path: modules/migrate/src/MigrateException.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\migrate\\\\MigrateException has an unused parameter \\$previous\\.$#"
-			count: 1
-			path: modules/migrate/src/MigrateException.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\migrate\\\\Plugin\\\\MigrationPluginManager has an unused parameter \\$language_manager\\.$#"
-			count: 1
-			path: modules/migrate/src/Plugin/MigrationPluginManager.php
-
 		-
 			message: "#^Method Drupal\\\\migrate\\\\Plugin\\\\migrate\\\\destination\\\\ComponentEntityDisplayBase\\:\\:fields\\(\\) should return array but return statement is missing\\.$#"
 			count: 1
@@ -1685,16 +1620,6 @@ parameters:
 			count: 1
 			path: modules/migrate_drupal/src/NodeMigrateType.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\migrate_drupal\\\\Plugin\\\\migrate\\\\EntityReferenceTranslationDeriver has an unused parameter \\$base_plugin_id\\.$#"
-			count: 1
-			path: modules/migrate_drupal/src/Plugin/migrate/EntityReferenceTranslationDeriver.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\migrate_drupal\\\\Plugin\\\\migrate\\\\source\\\\ContentEntityDeriver has an unused parameter \\$base_plugin_id\\.$#"
-			count: 1
-			path: modules/migrate_drupal/src/Plugin/migrate/source/ContentEntityDeriver.php
-
 		-
 			message: "#^Variable \\$patterns might not be defined\\.$#"
 			count: 1
@@ -2065,11 +1990,6 @@ parameters:
 			count: 1
 			path: modules/system/src/DateFormatListBuilder.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\system\\\\Form\\\\CronForm has an unused parameter \\$config_factory\\.$#"
-			count: 1
-			path: modules/system/src/Form/CronForm.php
-
 		-
 			message: "#^Call to deprecated constant REQUEST_TIME\\: Deprecated in drupal\\:8\\.3\\.0 and is removed from drupal\\:10\\.0\\.0\\. Use \\\\Drupal\\:\\:time\\(\\)\\-\\>getRequestTime\\(\\); $#"
 			count: 1
@@ -2150,16 +2070,6 @@ parameters:
 			count: 1
 			path: modules/system/tests/modules/form_test/src/Form/FormTestTableSelectJsSelectForm.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\lazy_route_provider_install_test\\\\PluginManager has an unused parameter \\$cache_backend\\.$#"
-			count: 1
-			path: modules/system/tests/modules/lazy_route_provider_install_test/src/PluginManager.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\lazy_route_provider_install_test\\\\PluginManager has an unused parameter \\$url_generator\\.$#"
-			count: 1
-			path: modules/system/tests/modules/lazy_route_provider_install_test/src/PluginManager.php
-
 		-
 			message: "#^Configuration entity must define a `config_export` key\\. See https\\://www\\.drupal\\.org/node/2481909$#"
 			count: 1
@@ -2515,11 +2425,6 @@ parameters:
 			count: 1
 			path: modules/views/src/Plugin/views/cache/Time.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\views\\\\Plugin\\\\views\\\\display\\\\DisplayPluginBase has an unused parameter \\$configuration\\.$#"
-			count: 1
-			path: modules/views/src/Plugin/views/display/DisplayPluginBase.php
-
 		-
 			message: "#^Variable \\$pager in isset\\(\\) always exists and is not nullable\\.$#"
 			count: 1
@@ -3095,66 +3000,6 @@ parameters:
 			count: 1
 			path: tests/Drupal/Tests/Component/Annotation/Doctrine/DocParserTest.php
 
-		-
-			message: "#^Constructor of class Symfony\\\\Component\\\\ExpressionLanguage\\\\Expression has an unused parameter \\$expression\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/DependencyInjection/Dumper/OptimizedPhpArrayDumperTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsAllNull has an unused parameter \\$charismatic\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsAllNull has an unused parameter \\$delightful\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsAllNull has an unused parameter \\$demure\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsAllNull has an unused parameter \\$electrostatic\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsConfigArrayKey has an unused parameter \\$config_name\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsMany has an unused parameter \\$configuration\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsMany has an unused parameter \\$foo\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsMany has an unused parameter \\$plugin_definition\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsMany has an unused parameter \\$plugin_id\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsMany has an unused parameter \\$what_am_i_doing_here\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Component\\\\Plugin\\\\Factory\\\\ArgumentsPluginId has an unused parameter \\$plugin_id\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
-
 		-
 			message: "#^Result of static method Drupal\\\\Composer\\\\Composer\\:\\:ensureComposerVersion\\(\\) \\(void\\) is used\\.$#"
 			count: 1
@@ -3190,16 +3035,6 @@ parameters:
 			count: 1
 			path: tests/Drupal/Tests/Core/Plugin/CategorizingPluginManagerTraitTest.php
 
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Core\\\\Plugin\\\\Discovery\\\\TestContainerDerivativeDiscovery has an unused parameter \\$example_service\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Core/Plugin/Discovery/TestContainerDerivativeDiscovery.php
-
-		-
-			message: "#^Constructor of class Drupal\\\\Tests\\\\Core\\\\Plugin\\\\TestPluginManager has an unused parameter \\$namespaces\\.$#"
-			count: 1
-			path: tests/Drupal/Tests/Core/Plugin/TestPluginManager.php
-
 		-
 			message: "#^Anonymous function has an unused use \\$self\\.$#"
 			count: 1
diff --git a/core/tests/Drupal/KernelTests/Core/Queue/QueueTest.php b/core/tests/Drupal/KernelTests/Core/Queue/QueueTest.php
index 89ccc4bc3db47e83076778a0fbecece64784e851..f9ac5a94d21c5d037feacf2e24d8245fd1c79e36 100644
--- a/core/tests/Drupal/KernelTests/Core/Queue/QueueTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Queue/QueueTest.php
@@ -32,9 +32,9 @@ public function testSystemQueue() {
    */
   public function testMemoryQueue() {
     // Create two queues.
-    $queue1 = new Memory($this->randomMachineName());
+    $queue1 = new Memory();
     $queue1->createQueue();
-    $queue2 = new Memory($this->randomMachineName());
+    $queue2 = new Memory();
     $queue2->createQueue();
 
     $this->runQueueTest($queue1, $queue2);
diff --git a/core/tests/Drupal/Tests/Component/DependencyInjection/Dumper/OptimizedPhpArrayDumperTest.php b/core/tests/Drupal/Tests/Component/DependencyInjection/Dumper/OptimizedPhpArrayDumperTest.php
index 4fc0ec6a3b0050ffdbeef01844d2fb8e993917f3..cb414602dc56585c0deb2539cddb816e51a87554 100644
--- a/core/tests/Drupal/Tests/Component/DependencyInjection/Dumper/OptimizedPhpArrayDumperTest.php
+++ b/core/tests/Drupal/Tests/Component/DependencyInjection/Dumper/OptimizedPhpArrayDumperTest.php
@@ -540,7 +540,7 @@ public function testGetServiceDefinitionForDecoratedService() {
      * @covers ::dumpValue
      */
     public function testGetServiceDefinitionForExpression() {
-      $expression = new Expression('');
+      $expression = new Expression();
 
       $bar_definition = new Definition('\stdClass');
       $bar_definition->setPublic(TRUE);
@@ -725,9 +725,6 @@ protected function getRaw($value) {
      */
     class Expression {
 
-      public function __construct($expression) {
-      }
-
       /**
        * Gets the string representation of the expression.
        */
diff --git a/core/tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php b/core/tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
index 45d27708fa924dfbda60db63636ea6813b6f0233..ac0a2db1b2838b83592d72d96d79b0b99e53829f 100644
--- a/core/tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
+++ b/core/tests/Drupal/Tests/Component/Plugin/Factory/ReflectionFactoryTest.php
@@ -159,7 +159,9 @@ public static function getPluginClass($plugin_id, $plugin_definition = NULL, $re
  */
 class ArgumentsPluginId {
 
-  public function __construct($plugin_id) {
+  public function __construct(
+    protected $plugin_id
+  ) {
     // No-op.
   }
 
@@ -172,7 +174,13 @@ public function __construct($plugin_id) {
  */
 class ArgumentsMany {
 
-  public function __construct($configuration, $plugin_definition, $plugin_id, $foo = 'default_value', $what_am_i_doing_here = 'what_default') {
+  public function __construct(
+    protected $configuration,
+    protected $plugin_definition,
+    protected $plugin_id,
+    protected $foo = 'default_value',
+    protected $what_am_i_doing_here = 'what_default'
+  ) {
     // No-op.
   }
 
@@ -185,7 +193,9 @@ public function __construct($configuration, $plugin_definition, $plugin_id, $foo
  */
 class ArgumentsConfigArrayKey {
 
-  public function __construct($config_name) {
+  public function __construct(
+    protected $config_name
+  ) {
     // No-op.
   }
 
@@ -198,7 +208,12 @@ public function __construct($config_name) {
  */
 class ArgumentsAllNull {
 
-  public function __construct($charismatic, $demure, $delightful, $electrostatic) {
+  public function __construct(
+    protected $charismatic,
+    protected $demure,
+    protected $delightful,
+    protected $electrostatic
+  ) {
     // No-op.
   }
 
diff --git a/core/tests/Drupal/Tests/Core/Cache/NullBackendTest.php b/core/tests/Drupal/Tests/Core/Cache/NullBackendTest.php
index bf79f70903db368efd7bc8829326ba86324fde3f..ac28900c4e7573945a82da3b5b8be5140f493f2a 100644
--- a/core/tests/Drupal/Tests/Core/Cache/NullBackendTest.php
+++ b/core/tests/Drupal/Tests/Core/Cache/NullBackendTest.php
@@ -16,7 +16,7 @@ class NullBackendTest extends UnitTestCase {
    * Tests that the NullBackend does not actually store variables.
    */
   public function testNullBackend() {
-    $null_cache = new NullBackend('test');
+    $null_cache = new NullBackend();
 
     $key = $this->randomMachineName();
     $value = $this->randomMachineName();
diff --git a/core/tests/Drupal/Tests/Core/Config/CachedStorageTest.php b/core/tests/Drupal/Tests/Core/Config/CachedStorageTest.php
index a33c05187e56a26e36e9548efd0093b828fa4ac6..da0c522d7efaa67cec2e80155f4fe190915bc8a7 100644
--- a/core/tests/Drupal/Tests/Core/Config/CachedStorageTest.php
+++ b/core/tests/Drupal/Tests/Core/Config/CachedStorageTest.php
@@ -31,7 +31,7 @@ public function testListAllStaticCache() {
       ->with($prefix)
       ->willReturn($response);
 
-    $cache = new NullBackend(__FUNCTION__);
+    $cache = new NullBackend();
 
     $cachedStorage = new CachedStorage($storage, $cache);
     $this->assertEquals($response, $cachedStorage->listAll($prefix));
diff --git a/core/tests/Drupal/Tests/Core/CronTest.php b/core/tests/Drupal/Tests/Core/CronTest.php
index 835eb74fab50de15bf0b3b65b00abc978d54d700..f83d4afc853a16d7bddeacb96453366c680718c2 100644
--- a/core/tests/Drupal/Tests/Core/CronTest.php
+++ b/core/tests/Drupal/Tests/Core/CronTest.php
@@ -115,7 +115,7 @@ protected function setUp(): void {
     ];
 
     // Create a queue instance for this queue worker.
-    $this->queue = new Memory($queue_worker);
+    $this->queue = new Memory();
     $queue_factory->get($queue_worker)->willReturn($this->queue);
 
     // Create a mock queue worker plugin instance based on above definition.
diff --git a/core/tests/Drupal/Tests/Core/Extension/ThemeExtensionListTest.php b/core/tests/Drupal/Tests/Core/Extension/ThemeExtensionListTest.php
index 51057ea77c33bec032ca9fe6fc7a87e85ec901b2..3775ccb53529b820190ed8f02bb688a66a1db1dd 100644
--- a/core/tests/Drupal/Tests/Core/Extension/ThemeExtensionListTest.php
+++ b/core/tests/Drupal/Tests/Core/Extension/ThemeExtensionListTest.php
@@ -76,10 +76,10 @@ public function testRebuildThemeDataWithThemeParents() {
       ],
     ]);
 
-    $theme_engine_list = new TestThemeEngineExtensionList($this->root, 'theme_engine', new NullBackend('test'), $info_parser->reveal(), $module_handler->reveal(), $state, $config_factory);
+    $theme_engine_list = new TestThemeEngineExtensionList($this->root, 'theme_engine', new NullBackend(), $info_parser->reveal(), $module_handler->reveal(), $state, $config_factory);
     $theme_engine_list->setExtensionDiscovery($extension_discovery->reveal());
 
-    $theme_list = new TestThemeExtensionList($this->root, 'theme', new NullBackend('test'), $info_parser->reveal(), $module_handler->reveal(), $state, $config_factory, $theme_engine_list, 'testing');
+    $theme_list = new TestThemeExtensionList($this->root, 'theme', new NullBackend(), $info_parser->reveal(), $module_handler->reveal(), $state, $config_factory, $theme_engine_list, 'testing');
     $theme_list->setExtensionDiscovery($extension_discovery->reveal());
 
     $theme_data = $theme_list->reset()->getList();
@@ -122,7 +122,7 @@ public function testGetBaseThemes(array $themes, $theme, array $expected) {
     $state = new State(new KeyValueMemoryFactory());
     $config_factory = $this->getConfigFactoryStub([]);
     $theme_engine_list = $this->prophesize(ThemeEngineExtensionList::class);
-    $theme_listing = new ThemeExtensionList($this->root, 'theme', new NullBackend('test'), new InfoParser($this->root), $module_handler->reveal(), $state, $config_factory, $theme_engine_list->reveal(), 'test');
+    $theme_listing = new ThemeExtensionList($this->root, 'theme', new NullBackend(), new InfoParser($this->root), $module_handler->reveal(), $state, $config_factory, $theme_engine_list->reveal(), 'test');
 
     $base_themes = $theme_listing->getBaseThemes($themes, $theme);
 
diff --git a/core/tests/Drupal/Tests/Core/Plugin/Context/ContextDefinitionIsSatisfiedTest.php b/core/tests/Drupal/Tests/Core/Plugin/Context/ContextDefinitionIsSatisfiedTest.php
index af5f1a1cc0a8539b354c6063932ece9b26b00fce..1b65f4cf04f3b12c84981fe645654ea73b11c2f4 100644
--- a/core/tests/Drupal/Tests/Core/Plugin/Context/ContextDefinitionIsSatisfiedTest.php
+++ b/core/tests/Drupal/Tests/Core/Plugin/Context/ContextDefinitionIsSatisfiedTest.php
@@ -33,7 +33,7 @@ protected function setUp(): void {
       'Drupal\\Core\\Validation' => $this->root . '/core/lib/Drupal/Core/Validation',
       'Drupal\\Tests\\Core\\Plugin\\Fixtures' => $this->root . '/core/tests/Drupal/Tests/Core/Plugin/Fixtures',
     ]);
-    $cache_backend = new NullBackend('cache');
+    $cache_backend = new NullBackend();
     $module_handler = $this->prophesize(ModuleHandlerInterface::class);
 
     $class_resolver = $this->prophesize(ClassResolverInterface::class);
diff --git a/core/tests/Drupal/Tests/Core/Plugin/Context/EntityContextDefinitionIsSatisfiedTest.php b/core/tests/Drupal/Tests/Core/Plugin/Context/EntityContextDefinitionIsSatisfiedTest.php
index 7f9a23df2221611cf22f21d5c5a6e8f62397ad8a..035a9922be54cb95b100924527368e8c468d9359 100644
--- a/core/tests/Drupal/Tests/Core/Plugin/Context/EntityContextDefinitionIsSatisfiedTest.php
+++ b/core/tests/Drupal/Tests/Core/Plugin/Context/EntityContextDefinitionIsSatisfiedTest.php
@@ -53,7 +53,7 @@ protected function setUp(): void {
       'Drupal\\Core\\Validation' => $this->root . '/core/lib/Drupal/Core/Validation',
       'Drupal\\Core\\Entity' => $this->root . '/core/lib/Drupal/Core/Entity',
     ]);
-    $cache_backend = new NullBackend('cache');
+    $cache_backend = new NullBackend();
     $module_handler = $this->prophesize(ModuleHandlerInterface::class);
 
     $class_resolver = $this->prophesize(ClassResolverInterface::class);
diff --git a/core/tests/Drupal/Tests/Core/Plugin/ContextHandlerTest.php b/core/tests/Drupal/Tests/Core/Plugin/ContextHandlerTest.php
index 04a8bed22d74750c89a57bd1b6f12c07d7fdcb91..997fbbc97680f566b2262a4c50f02107ef105362 100644
--- a/core/tests/Drupal/Tests/Core/Plugin/ContextHandlerTest.php
+++ b/core/tests/Drupal/Tests/Core/Plugin/ContextHandlerTest.php
@@ -51,7 +51,7 @@ protected function setUp(): void {
       'Drupal\\Core\\TypedData' => $this->root . '/core/lib/Drupal/Core/TypedData',
       'Drupal\\Core\\Validation' => $this->root . '/core/lib/Drupal/Core/Validation',
     ]);
-    $cache_backend = new NullBackend('cache');
+    $cache_backend = new NullBackend();
     $module_handler = $this->prophesize(ModuleHandlerInterface::class);
     $class_resolver = $this->prophesize(ClassResolverInterface::class);
     $class_resolver->getInstanceFromDefinition(Argument::type('string'))->will(function ($arguments) {
diff --git a/core/tests/Drupal/Tests/Core/Plugin/DefaultPluginManagerTest.php b/core/tests/Drupal/Tests/Core/Plugin/DefaultPluginManagerTest.php
index 37799cdfe4f769fc44eba19f725d83657db9e372..4a3bdfef59f9da18d5f1bb9f0fb5b430b3cdda17 100644
--- a/core/tests/Drupal/Tests/Core/Plugin/DefaultPluginManagerTest.php
+++ b/core/tests/Drupal/Tests/Core/Plugin/DefaultPluginManagerTest.php
@@ -77,7 +77,7 @@ public function testDefaultPluginManagerWithPluginExtendingNonInstalledClass() {
     ];
 
     $module_handler = $this->createMock('Drupal\Core\Extension\ModuleHandlerInterface');
-    $plugin_manager = new TestPluginManager($this->namespaces, $definitions, $module_handler, 'test_alter_hook', '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $definitions, $module_handler, 'test_alter_hook');
     $plugin_manager->getDefinition('plugin_test', FALSE);
     $this->assertTrue(TRUE, 'No PHP fatal error occurred when retrieving the definitions of a module with plugins that depend on a non-installed module class should not cause a PHP fatal.');
   }
@@ -102,7 +102,7 @@ public function testDefaultPluginManagerWithDisabledModule() {
       ->with('disabled_module')
       ->willReturn(FALSE);
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $definitions, $module_handler, 'test_alter_hook', '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $definitions, $module_handler, 'test_alter_hook');
 
     $this->assertEmpty($plugin_manager->getDefinition('cherry', FALSE), 'Plugin information of a disabled module is not available');
   }
@@ -127,7 +127,7 @@ public function testDefaultPluginManagerWithObjects() {
       ->with('disabled_module')
       ->willReturn(FALSE);
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $definitions, $module_handler, 'test_alter_hook', '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $definitions, $module_handler, 'test_alter_hook');
 
     $this->assertEmpty($plugin_manager->getDefinition('cherry', FALSE), 'Plugin information is available');
   }
@@ -147,7 +147,7 @@ public function testGetDefinitionPluginNotFoundException() {
    * Tests the plugin manager with no cache and altering.
    */
   public function testDefaultPluginManager() {
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL);
     $this->assertEquals($this->expectedDefinitions, $plugin_manager->getDefinitions());
     $this->assertEquals($this->expectedDefinitions['banana'], $plugin_manager->getDefinition('banana'));
   }
@@ -166,7 +166,7 @@ public function testDefaultPluginManagerWithAlter() {
       ->method('alter')
       ->with($this->equalTo($alter_hook_name), $this->equalTo($this->expectedDefinitions));
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, $module_handler, $alter_hook_name, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, $module_handler, $alter_hook_name);
 
     $this->assertEquals($this->expectedDefinitions, $plugin_manager->getDefinitions());
     $this->assertEquals($this->expectedDefinitions['banana'], $plugin_manager->getDefinition('banana'));
@@ -190,7 +190,7 @@ public function testDefaultPluginManagerWithEmptyCache() {
       ->method('set')
       ->with($cid, $this->expectedDefinitions);
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL);
     $plugin_manager->setCacheBackend($cache_backend, $cid);
 
     $this->assertEquals($this->expectedDefinitions, $plugin_manager->getDefinitions());
@@ -214,7 +214,7 @@ public function testDefaultPluginManagerWithFilledCache() {
       ->expects($this->never())
       ->method('set');
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL);
     $plugin_manager->setCacheBackend($cache_backend, $cid);
 
     $this->assertEquals($this->expectedDefinitions, $plugin_manager->getDefinitions());
@@ -224,7 +224,7 @@ public function testDefaultPluginManagerWithFilledCache() {
    * Tests the plugin manager with caching disabled.
    */
   public function testDefaultPluginManagerNoCache() {
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL);
 
     $cid = $this->randomMachineName();
     $cache_backend = $this->getMockBuilder('Drupal\Core\Cache\MemoryBackend')
@@ -261,7 +261,7 @@ public function testCacheClearWithTags() {
 
     $this->getContainerWithCacheTagsInvalidator($cache_tags_invalidator);
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL);
     $plugin_manager->setCacheBackend($cache_backend, $cid, ['tag']);
 
     $plugin_manager->clearCachedDefinitions();
@@ -273,7 +273,7 @@ public function testCacheClearWithTags() {
    * @covers ::createInstance
    */
   public function testCreateInstanceWithJustValidInterfaces() {
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, NULL, NULL);
 
     foreach ($this->expectedDefinitions as $plugin_id => $definition) {
       $this->assertNotNull($plugin_manager->createInstance($plugin_id));
@@ -303,7 +303,7 @@ public function testCreateInstanceWithInvalidInterfaces() {
     $this->expectedDefinitions['apple']['provider'] = 'plugin_test';
     $this->expectedDefinitions['banana']['provider'] = 'plugin_test';
 
-    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, $module_handler, NULL, '\Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
+    $plugin_manager = new TestPluginManager($this->namespaces, $this->expectedDefinitions, $module_handler, NULL);
     $this->expectException(PluginException::class);
     $this->expectExceptionMessage('Plugin "kale" (Drupal\plugin_test\Plugin\plugin_test\fruit\Kale) must implement interface \Drupal\plugin_test\Plugin\plugin_test\fruit\FruitInterface');
     $plugin_manager->createInstance('kale');
diff --git a/core/tests/Drupal/Tests/Core/Plugin/Discovery/TestContainerDerivativeDiscovery.php b/core/tests/Drupal/Tests/Core/Plugin/Discovery/TestContainerDerivativeDiscovery.php
index 9c3c3c348c4bbc500df003b78956664eae20206d..95110366531f1cda393c272c4de674bbbdc80352 100644
--- a/core/tests/Drupal/Tests/Core/Plugin/Discovery/TestContainerDerivativeDiscovery.php
+++ b/core/tests/Drupal/Tests/Core/Plugin/Discovery/TestContainerDerivativeDiscovery.php
@@ -14,10 +14,12 @@ class TestContainerDerivativeDiscovery extends TestDerivativeDiscovery implement
   /**
    * Constructs a TestContainerDerivativeDiscovery object.
    *
-   * @var \Symfony\Contracts\EventDispatcher\EventDispatcherInterface $example_service
+   * @var \Symfony\Contracts\EventDispatcher\EventDispatcherInterface $exampleService
    *   Some service.
    */
-  public function __construct(EventDispatcherInterface $example_service) {
+  public function __construct(
+    protected EventDispatcherInterface $exampleService
+  ) {
   }
 
   /**
diff --git a/core/tests/Drupal/Tests/Core/Plugin/TestPluginManager.php b/core/tests/Drupal/Tests/Core/Plugin/TestPluginManager.php
index d1ba489d23a4c1d3733c06b40b0b7e75be746f50..d30f83a8996ded335894ad733b0f7ffd394285ad 100644
--- a/core/tests/Drupal/Tests/Core/Plugin/TestPluginManager.php
+++ b/core/tests/Drupal/Tests/Core/Plugin/TestPluginManager.php
@@ -40,6 +40,7 @@ public function __construct(\Traversable $namespaces, array $definitions, Module
       $this->discovery->setDefinition($key, $definition);
     }
 
+    $this->namespaces = $namespaces;
     $this->moduleHandler = $module_handler;
 
     if ($alter_hook) {
diff --git a/core/tests/Drupal/Tests/Core/TypedData/RecursiveContextualValidatorTest.php b/core/tests/Drupal/Tests/Core/TypedData/RecursiveContextualValidatorTest.php
index 5300667181c9c8bf769b173ce42fe7b880408188..5352da21e1542579d6ccc8b4bf9104413b224dbb 100644
--- a/core/tests/Drupal/Tests/Core/TypedData/RecursiveContextualValidatorTest.php
+++ b/core/tests/Drupal/Tests/Core/TypedData/RecursiveContextualValidatorTest.php
@@ -54,7 +54,7 @@ class RecursiveContextualValidatorTest extends UnitTestCase {
   protected function setUp(): void {
     parent::setUp();
 
-    $cache_backend = new NullBackend('cache');
+    $cache_backend = new NullBackend();
     $namespaces = new \ArrayObject([
       'Drupal\\Core\\TypedData' => $this->root . '/core/lib/Drupal/Core/TypedData',
       'Drupal\\Core\\Validation' => $this->root . '/core/lib/Drupal/Core/Validation',

diff --git a/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php b/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php
index 05b7b87b..263df7fe 100644
--- a/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Entity/EntityQueryTest.php
@@ -2,6 +2,7 @@

 namespace Drupal\KernelTests\Core\Entity;

+use Drupal\Core\Database\Database;
 use Drupal\entity_test\Entity\EntityTest;
 use Drupal\entity_test\Entity\EntityTestMulRev;
 use Drupal\field\Entity\FieldConfig;
@@ -1217,7 +1218,19 @@ public function testToString() {

     $figures = $this->figures;

-    $expected = <<<EOF
+    $expected = Database::getConnection()->select("entity_test_mulrev", "base_table");
+    $expected->addField("base_table", "revision_id", "revision_id");
+    $expected->addField("base_table", "id", "id");
+    $expected->join("entity_test_mulrev__$figures", "entity_test_mulrev__$figures", "entity_test_mulrev__$figures.entity_id = base_table.id");
+    $expected->join("entity_test_mulrev__$figures", "entity_test_mulrev__{$figures}_2", "entity_test_mulrev__{$figures}_2.entity_id = base_table.id");
+    $expected->addJoin("LEFT", "entity_test_mulrev__$figures", "entity_test_mulrev__{$figures}_3", "entity_test_mulrev__{$figures}_3.entity_id = base_table.id");
+    $expected->condition("entity_test_mulrev__$figures.{$figures}_color", ["blue"], "IN");
+    $expected->condition("entity_test_mulrev__{$figures}_2.{$figures}_color", ["red"], "IN");
+    $expected->condition("entity_test_mulrev__{$figures}_3.{$figures}_color", NULL);
+    $expected->orderBy("base_table.id");
+
+
+/*    $expected = <<<EOF
 SELECT base_table.revision_id AS revision_id, base_table.id AS id
 FROM
 {entity_test_mulrev} base_table
@@ -1226,13 +1239,16 @@ public function testToString() {
 LEFT JOIN {entity_test_mulrev__{$figures}} entity_test_mulrev__{$figures}_3 ON entity_test_mulrev__{$figures}_3.entity_id = base_table.id
 WHERE (entity_test_mulrev__{$figures}.{$figures}_color IN ('blue')) AND (entity_test_mulrev__{$figures}_2.{$figures}_color IN ('red')) AND (entity_test_mulrev__{$figures}_3.{$figures}_color IS NULL)
 ORDER BY base_table.id ASC
-EOF;
+EOF;*/

     // Apply table prefixes to the expected sql.
-    $expected = \Drupal::database()->prefixTables($expected);
+    $expected_string = \Drupal::database()->prefixTables((string) $expected);
+
     // PostgreSQL adds " NULLS FIRST" to the end of the query so
     // assertContains() is used for maximum compatibility.
-    $this->assertContains($expected, (string) $query);
+
+    $this->assertSame($expected_string, (string) $query);
+    $this->assertEquals($expected, $query);
   }

 }

name: PHPUnit Testing

on:
  push:
    branches: [ test-boh ]

env:
    SIMPLETEST_BASE_URL: "http://localhost:8080"
    BROWSERTEST_OUTPUT_DIRECTORY: "sites/default/files/simpletest"
##    SYMFONY_DEPRECATIONS_HELPER: "ignoreFile=core/.deprecation-ignore.txt&generateBaseline=true&baselineFile=deprecation_baseline.json"
    MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless", "--no-sandbox"]}}, "http://localhost:4444"]'

jobs:

#################################

  test-fu:
    name: "Test"
    runs-on: ubuntu-20.04
    env:
        SIMPLETEST_DB: "sqlite://localhost/test_database#d8t"

# SIMPLETEST_DB: "mysql://root:@0.0.0.0/drupal_db#d8t"
# SIMPLETEST_DB: "pgsql://postgres:postgres@localhost/drupal_db#d8t
# SIMPLETEST_DB: "sqlite://localhost/test_database#d8t"

    strategy:
      matrix:
        php-version:
          - "8.1"

#    services:
#      mysql:
#        image: "mysql:5.7"
#        options: >-
#          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
#          -e MYSQL_DATABASE=drupal_db
#        ports:
#          - "3306:3306"
#      postgres:
#        image: "postgres:14"
#        env:
#          POSTGRES_PASSWORD: "postgres"
#        options: >-
#          --health-cmd "pg_isready"
#        ports:
#          - "5432:5432"

    steps:
#      - name: Install Chrome
#        uses: "browser-actions/setup-chrome@latest"

#      - name: Check Chrome version
#        run: chrome --version

#      - name: Install Chromedriver
#        uses: "nanasess/setup-chromedriver@master"

#      - name: Run Chromedriver
#        run: chromedriver --port=4444 &

#     - name: Setup Postgres database
#       uses: Daniel-Marynicz/postgresql-action@master
#       with:
#           postgres_image_tag: 14
#           postgres_db: drupal_db
#           postgres_extensions: pg_trgm
        
#     - name: Postgres extension
#       run: |
#          sudo PGPASSWORD="postgres" -u postgres psql --command="CREATE EXTENSION IF NOT EXISTS pg_trgm;" --dbname=drupal_db --host=localhost

     - name: Install PHP
       uses: "shivammathur/setup-php@v2"
       with:
           php-version: "${{ matrix.php-version }}"
           coverage: "none"
           extensions: "pdo_mysql,pdo_pgsql,gd"
           ini-values: "zend.assertions=1"

     - name: Checkout Drupal
       run: git clone --depth=5 --branch=10.1.x http://git.drupal.org/project/drupal.git .

     - name: Checkout Test
       run: git clone --depth=5 --branch=test-boh https://github.com/mondrake/d8-unit.git patch

     - name: 'Patch'
       run: |
          git apply -v patch/test.patch
#          curl https://git.drupalcode.org/project/drupal/-/merge_requests/2129.diff | git apply -v

     - name: Install Composer dependencies
       run: |
          composer install --no-progress --ansi
          composer require drush/drush symfony/config --no-progress --ansi
#          composer run-script drupal-phpunit-upgrade
#          php -i
#          vendor/bin/phpunit -v -c core --migrate-configuration

#      - name: 'Patch phpunit'
#        run: |
#          patch -p1 -d vendor/phpunit/phpunit <patch/phpunit.patch

     - name: Install Drupal
       run: |
          vendor/bin/drush site-install standard --db-url=$SIMPLETEST_DB -y
          vendor/bin/drush rq
          vendor/bin/drush runserver localhost:8080 --default-server=localhost:8080 &
          mkdir -p sites/default/files/simpletest

#     - name: Run tests a
#       continue-on-error: true
#       run: vendor/bin/phpunit -v -c core --color=always core/tests/Drupal/KernelTests/Core/Database/StatementTest.php

     - name: Run tests b
       continue-on-error: true
       run: vendor/bin/phpunit -v -c core --color=always core/modules/views/tests/src/Kernel/RenderCacheIntegrationTest.php

#     - name: Run tests c
#       continue-on-error: true
#       run: vendor/bin/phpunit -v -c core --color=always --group=Database

#     - uses: actions/upload-artifact@v3
#       with:
#          name: test-results
#          path: sites/simpletest/browser_output

#      - name: Run tests b
#        continue-on-error: true
#        run: vendor/bin/phpunit -v -c core --color=always core/modules/image/tests/src/Kernel/DerivativeImageProcessTest.php

#      - name: Run tests c
#        continue-on-error: true
#        run: vendor/bin/phpunit -v -c core --color=always core/tests/Drupal/KernelTests/Core/Database/FetchTest.php

#      - name: Run tests d
#        continue-on-error: true
#        run: vendor/bin/phpunit -v -c core --color=always core/tests/Drupal/KernelTests/Core/Image/ToolkitGdTest.php
        
#      - name: Run tests e
#        continue-on-error: true
#        run: vendor/bin/phpunit -v -c core --color=always core/tests/Drupal/KernelTests/Core/Database/DatabaseEventTest.php

#      - name: Run PHPStan
#        run: |
#          cd core
#          php -d apc.enabled=0 -d apc.enable_cli=0 ../vendor/bin/phpstan analyze
 
